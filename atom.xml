<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>halisi7</title>
  
  <subtitle>一个专注技术的组织</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-06-18T09:59:12.309Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>halisi7</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>社保与医保</title>
    <link href="http://example.com/2023/06/18/%E5%B7%A5%E4%BD%9C/%E5%8C%BB%E4%BF%9D%E7%A4%BE%E4%BF%9D%E8%AF%B4%E6%98%8E/"/>
    <id>http://example.com/2023/06/18/%E5%B7%A5%E4%BD%9C/%E5%8C%BB%E4%BF%9D%E7%A4%BE%E4%BF%9D%E8%AF%B4%E6%98%8E/</id>
    <published>2023-06-18T09:01:20.000Z</published>
    <updated>2023-06-18T09:59:12.309Z</updated>
    
    <content type="html"><![CDATA[<h1 id="医保社保说明"><a href="#医保社保说明" class="headerlink" title="医保社保说明"></a>医保社保说明</h1><h2 id="社保-五险"><a href="#社保-五险" class="headerlink" title="社保=五险"></a>社保=五险</h2><p>五险：养老保险、医疗保险、生育保险、工伤保险、失业保险</p><p>一金：公积金</p><blockquote><p>缴纳基数：本人去年12个月的平均工资。</p><p>​                  最低：上一年省市月平均工资的60%。</p><p>​                  最高：月平均工资的三倍。</p><ul><li>若按最低标准缴纳可以要求企业补缴。（找工作的时候要问清楚。）</li><li>不交可以换公司或者劳动仲裁。</li></ul></blockquote><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202306181646893.png" alt="image-20230618164627801"></p><h3 id="1-养老保险"><a href="#1-养老保险" class="headerlink" title="1.养老保险"></a>1.养老保险</h3><p>等你退休以后可以领到的钱。</p><ul><li>需要在退休之前累计缴纳15年。</li><li>一般是个人交小头，进入个人账户（个人账户交的越多领的越多）；公司交大头，进入统筹账户。</li><li>统筹养老金=$[(个人月平均缴费工资+当地月平均工资)/2]*工作年限\%$。</li></ul><p>最后领的是：个人养老金+统筹养老金。</p><blockquote><p>普通人（非公务员或老师）能领到很少。</p></blockquote><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202306181647234.png" alt="image-20230618164745173"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202306181648693.png" alt="image-20230618164846634"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202306181649959.png" alt="image-20230618164930910"></p><h3 id="2-医疗保险"><a href="#2-医疗保险" class="headerlink" title="2.医疗保险"></a>2.医疗保险</h3><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202306181756832.png" alt="image-20230618175609783"></p><ul><li>达到500就能报销！！！</li><li>住院缴费的时候记得掏出你的医保卡！！（自动报销！！）</li><li>在外地使用要提前医保备案（微信小程序）。</li></ul><p>分为两个账户：个人账户（个人交2%，支付宝、微信可查询，可以自由支配：门诊看病药店买药等）和统筹账户（公司交8%，主要用于住院报销或达到起付线后即使个人账户没钱也可以使用统筹账户）。</p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202306181651982.png" alt="image-20230618165147932"></p><blockquote><p>例如：布地奈德（乙类）、氯雷他定（甲类）、糖蒜莫米松（甲类）、二硫化硒洗剂（甲类）、玻璃酸钠滴眼液（甲类）。</p><p>例如：CT（也能报销一部分）。</p><p>社保局电话：12333</p><p>可以使用微信搜索医保目录。</p><p>救护车费用也不能用。</p></blockquote><p>最实用的：直接去医院（或医保定点单位）刷就行。</p><ul><li>医美不能刷。</li><li>停止缴纳3个月后就不能用了，需再次连续缴纳六个月。</li><li>可以自己去缴纳。</li><li>主要是住院费用和门诊费用的报销。</li></ul><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202306181653857.png" alt="image-20230618165322790"></p><ul><li>需达到起伏线。</li></ul><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202306181653632.png" alt="image-20230618165352572"></p><h3 id="3-生育保险"><a href="#3-生育保险" class="headerlink" title="3.生育保险"></a>3.生育保险</h3><ul><li>只需要单位交，个人不能交。</li><li>缴纳满一年（或者9个月），可以享受生孩子或者你媳妇生孩子可以拿这个保险去保销<strong>整个</strong>(产检到出生)手续费用。</li><li>女孩子产假时候的工资（生育津贴）就是来自生育保险。（自己不交的话可以用老公的，只是不能领生育津贴，但是可以报销医疗费用（50%~70%）。）</li><li>男孩子结扎也可以报销。（部分地区还能放7天假。）</li><li>男方可以享受15天的陪产假（生育津贴）。</li></ul><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202306181701315.png" alt=""></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202306181701052.png" alt="image-20230618170132992"></p><h3 id="4-工伤保险"><a href="#4-工伤保险" class="headerlink" title="4.工伤保险"></a>4.工伤保险</h3><ul><li>只需要单位交，个人不能交。</li><li>受伤治疗期间照常发工资。（公司找你私了，最好不要私了，因为后续并发症公司就不会再赔钱了）</li></ul><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202306181127957.png" alt="image-20230618112745839"></p><h3 id="5-失业保险"><a href="#5-失业保险" class="headerlink" title="5.失业保险"></a>5.失业保险</h3><p>失业金：当地职工最低工资标准的80%。</p><ul><li>单位交一部分，个人交一部分。</li><li>不包括跳槽和主动辞职。</li><li>失业的60天内去相关部门进行登记。</li><li>支付宝就能办理领取。（或者使用国务院客户端app。）</li></ul><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202306181113795.png" alt="image-20230618105532056"></p><ul><li>领失业金后医保不用自己交，会由失业保险经办机构代缴。</li></ul><h3 id="6-公积金"><a href="#6-公积金" class="headerlink" title="6.公积金"></a>6.公积金</h3><ul><li>只有企业才可以付。</li><li>比例：5%~12%。（良心企业：12%。就是个人12%，企业12%，能领24%的钱。）</li><li>买房的时候可以用公积金。（最划算的贷款。）</li></ul><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202306181114437.png" alt="image-20230618110140707"></p>]]></content>
    
    
    <summary type="html">不求有功，但求无过</summary>
    
    
    
    <category term="工作" scheme="http://example.com/categories/%E5%B7%A5%E4%BD%9C/"/>
    
    
    <category term="工作" scheme="http://example.com/tags/%E5%B7%A5%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>改变</title>
    <link href="http://example.com/2022/10/31/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E6%94%B9%E5%8F%98/"/>
    <id>http://example.com/2022/10/31/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E6%94%B9%E5%8F%98/</id>
    <published>2022-10-31T07:20:10.000Z</published>
    <updated>2023-03-30T02:32:37.426Z</updated>
    
    <content type="html"><![CDATA[<h1 id="改变"><a href="#改变" class="headerlink" title="改变"></a>改变</h1><p>我们关切的是这种改变的现象，以及对有关改变的种类和本质的理论的探讨。</p><h2 id="变与不变所需要的两个理论"><a href="#变与不变所需要的两个理论" class="headerlink" title="变与不变所需要的两个理论"></a>变与不变所需要的两个理论</h2><blockquote><p>变得愈多，愈是不变。     ——法国谚语</p></blockquote><p>几个世纪以来的西方文化中，虽然人们曾经提出了许多关于“变”与“不变”的理论，但是他们绝大部分不是只与“变”的理论有关，就是只与“不变”的理论有关，而不是关于“变与不变”的理论。</p><p>我们不只通过在个案中解答这类问题时获得一些进展，而且也得到了一个比较普遍的观点。但我们认为，与其回溯迢迢来时路，不如求助于数理逻辑领域中两个抽象而普遍的理论，来介绍和厘清某些我们已达成的结论。这两个理论就是群论（The Theory of Croups）和逻辑类型理论（The Theory of Logical Types）。</p><p><strong>在这么做的同时，我们也非常清楚：对于这些理论的应用，仍达不到数学的严谨性。</strong></p><h3 id="群论"><a href="#群论" class="headerlink" title="群论"></a>群论</h3><p>群论（Group Theory）。产生于19世纪初，而“群”一词乃法国数学家埃瓦里斯特·伽罗瓦（Evariste Galois）所创用。伽罗瓦先进行了初步的论述，几位杰出的19世纪数学家随即步其后尘，合力发展群论，使之成为一个最富想象力的数学理论。随着1900年之后古典物理的革命，群论也开始在量子论和相对论中扮演重要的角色。不用说，只有数学家和物理学家才懂得群论的艰深意涵，但是其涉及元素与整体之关系的基本假设，则相当简单（也许实际上并非如此简单）。根据群论，群具有下列特性：</p><p>a.群由具有某一共同特征的成员（members）所组成，至于成员的实际本质为何，乃不相关的事，不在这一理论的考虑之内。因此，群的成员可以是数字、物体、概念、事件或任何可以组在一起的东西，只要成员拥有一共同的性质，并且两个或两个以上成员的任何的组合结果，其本身也是该群的一个成员。例如，如果以钟面上指示钟点的整数1-12为一群，很明显，任意两个或更多成员的组合，仍为该群的一分子（如早上8点加上6个钟头，变成下午两点）。在这个例子里，组合指的是成员加或减的过程。同样地，掷一粒骰子时，任何位置的变化所显示的数字，仍为6种投掷的可能结果之一。在这个例子里，组台指的是骰子绕着其三条轴心，做一次或多次的旋转。我们还可以看出来，组合一词指的是群的某一可能的内在状态转成另一内在状态的一种变化。</p><p>将“东西”（取其最广泛的意义）分门别类，是我们获得实在界的知觉与概念之最根本而必要的元素。世上显然没有两个东西是一模一样的，然而将世界整理为不同的（错综复杂而交叠的）群，各群之成员皆共同拥有某一重要特性，则可以赋予某种架构，否则世界将成为变幻不定的一团混沌。但是，我们已经看到，这一排序的同时促成了不变，即群的任何成员的组合，其结果本身仍为该群的成员——如卡修斯·J.凯泽（Cassius J. Keyser）所说的：“是系统之内的，而非系统之外的东西。”<strong>因此，群的第一个特性即允许在群之内产生无数的变化</strong>（事实上，有所谓无限的群），但是任何成员或成员的组合，都无法置身于系统之外。</p><p>b.群的另一个特性是，成员可以以各种不同的顺序来组合，而组合的结果仍然相同。 以下就是个实际的例子：自某一平面上的某一点出发，以任何长度，朝任何方向做任何次数的移动，不论移动的顺序如何变化，必然一成不变地到达同一个目的地——当然，其先决条件为：移动的次数以及每步的长度和方向保持不变。举个最简单的例子，以一个单位长度（如1码、1英里）移动4次，每次分别朝4个方向走。在这些条件下，不论顺序为何（如先朝北、再朝西，等等），走完4次，总是又回到原来的出发点。因此我们可以说，过程允许变化，但是结果不变。</p><p>c.每一个群皆包括一恒等成员（identity member），其特性为：任何一位其他成员与该恒等成员组合，其结果仍为该成员自身。也就是说，恒等成员保存了另一成员的本身。例如，在组合规则为加法的群里，其恒等成员为0（如5+0＝5）；在组合规则为乘法的群里，其恒等成员为1，因为任何成员乘以l结果仍为其自身。假设所有的声响成为一个群，则其恒等成员为寂静；而一切位置的变动（即运行）所组成的群，其恒等成员则为不动。</p><p>恒等成员的概念，初看似属多余，但是我们应当视之为群的不变性的一个特例。其具有实际的重要性，如W．罗斯·阿什比（W. Ross Ashby）在其控制论（cybernetic systems）里所指出的，在变量的变化所形成的群里，有一个他所谓的空函数（null-function），其直接作用为维持该系统的稳定。对我们而言，这一概念的重点，在于某成员可能有所行动但却不造成任何改变。</p><p>d．最后，在任一符合群概念的系统中，我们发现，每一成员皆有其相对或相反成员，任一成员跟它的这个相反成员组合，结果为恒等成员。例如，在组合规则为加法的情况下，5+（-5）=0。在此，我们又可看出，这一组合造成了显著的变化；但另一方面，其结果本身为该群的一员（在本例中即为正、负整数，包括0，因此仍包含于其中。</p><p>虽然此处对群论基本概念所作的描述（即说明在什么情况下，个别的变化并不能改变整个群）仍显粗略，但是我们认为：这一理论提供了一个有效的架构，让我们借以思考变与不变互相依存的奇特现象。在许多实例中，我们可以观察到这种现象，亦即“凡事愈变，愈是不变”。</p><h3 id="逻辑类型理论"><a href="#逻辑类型理论" class="headerlink" title="逻辑类型理论"></a>逻辑类型理论</h3><p>这个理论跟群论一样．也是以一组因某一共同特性而结合在一起的“东西”作为出发点，整体的组成分子也叫做成员，不过整体本身不叫群，而是称为种类（class）。逻辑类型理论有一基本公理，诚如艾尔弗雷德·诺思·怀特海（Alfred North Whitehead）和伯特兰·罗素（Bertrand Russell）在其跨时代的巨著《数学原理》（Principia Mathematica）中所叙述的：“<strong>凡涉及某集合的全部成员者，必定不是该集合的一员。</strong>”很显然，人类是所有个体集合成的种类，但是人类本身并非一个个体。这两者属于不同层次，若想以其中一个来解释另一个，势必导致荒谬和混淆。例如，一个大城市人口的经济行为，不能以一个居民的行为乘以居民人数（如400万）来解释。顺便提一下，这也正是早期经济理论所犯的错误，如今被谑称为“鲁滨逊漂流记式”的经济模型（Robinson Crusoe economic model）。400万人口不仅在数量上和一个个体不同，在质上亦相差甚远，因为前者涉及个体之间互动的种种系统。同理，大家都知道，某一物种的个别成员，虽然天生具有极特殊的求生机制，但是整个物种却可能因拼命竞争而走向灭亡——人类或许也不例外。但是在极权主义的意识形态里，个体反而只是阶级的一个成员，因此完全不重要，可以被牺牲，如同蚁丘之一蚁，或如阿瑟·凯斯特勒（Arthur Koesder）在谈到其狱友尼科拉斯（Nicolds）被关在西班牙某监狱的死囚室时，如此贴切地写道：“从这一观点看，尼科拉斯的存在只不过是一个社会的抽象，一个数学的单位，只是1万个军人之整体除以1万的结果。”</p><p>之所以会造成上述的结果，是因为忽略了成员和种类之间的巨大差异，也忽略了种类不能成为自身之一成员的事实。在我们的日常工作，尤其是研究当中，我们常常会碰到不同层级的逻辑种类，因此种类层级的混淆及其所导致的迷惑，可以说是无所不在的。</p><ul><li>万物皆可以一种语言来表达，但是用来描述该语言自身的陈述除外 。</li></ul><p><strong>对于以上所述，在此谨作一个小结论</strong>：群论提供我们一个架构，以思索一种变化，该变化可以在某系统之内发生，但系统本身维持不变。逻辑类型理论对于种类之内，也就是其成员之间发生的事，并不在意，但是这一理论提供我们一个架构，以考虑成员和种类的关系，以及由某一逻辑层次转到更高一个层次所蕴涵的奇特改变。如果我们接受这两种理论之间的这一基本区分，那么应该有两种不同的改变：一种改变发生在某一系统之内，而系统本身维持不变；另一种改变发生时，则改变了系统本身 。关于这一区分，举个比较实际的例子：一个做噩梦的人，在梦中可以做许多事——跑、躲、打、喊、跳下悬崖，等等——但是不论他怎么变换这些行为，都无法停止噩梦。此后，我们将称这种变化为第一序改变（first-order change）。跳出梦境的唯一方法，涉及了一个由梦到醒的变化。显然，苏醒不再是梦的一部分，而是转到完全不同状态的一个改变。这一种改变，此后我们将称为第二序改变（second-order change）。</p><p>例如，我们说过，群的内部运作规则为乘法时，其恒等成员为1。如果该群的组合规则变成加法（此为第二序改变．只能自外界引入，无法由群的内部产生），结果将会不同：成员n跟恒等成员（即1）组合的结果，不再是它自身（根据旧规则，n乘以l结果仍为n，即其自身），我们得的是n+1。现在我们可以了解：群只在第一序改变的层次上维持不变（即在成员之间变化的层次上，在这里，事物的确愈是变化，愈是维持不变），但是并不排斥第二序改变层次上的变化（即控制其结构或内部秩序的规则的变化）。</p><p>最后，请记住，第二序改变总不改其不连续或逻辑跳跃的特性。我们可以想见，第二序改变在实际问题上所呈现的是一种不合逻辑与悖论。</p><h3 id="进一步解释"><a href="#进一步解释" class="headerlink" title="进一步解释"></a>进一步解释</h3><p>在讨论解决方案之前，有必要以实例说明第1章所介绍的理论。</p><h4 id="群的第一特性"><a href="#群的第一特性" class="headerlink" title="群的第一特性"></a>群的第一特性</h4><p>a.为“群”的第一个特性找例子并不难（该特性即：群的成员，无论如何组合、转化或运作，其结果仍为该群的成员，因而维持了群的结构）。在约翰·福尔斯（John Fowles）的小说《蝴蝶春梦》（The Collector）里，一个年轻人爱上漂亮的美术系学生米兰达（Miranda），把她绑架了，囚禁在乡下一间僻静而牢固的房子里。虽然她成了他的掌中物，但是他所造成的情境，却也使他同样成了她的囚犯。因为他渴望她终究会爱上他，所以既不能强迫她，又不能放了她。从实际考虑，释放是绝对不可行的：他势必将因重罪被捕，当然，除非她对外声称自己是自愿跟他走的。女孩愿意给他这项承诺，但是他知道，这顶多只是她为了获得自由所采取的一项策略，她根本不会真的回到他的身边。在这种特殊的状况下，两个人都很想改变现况（他试图使她爱他，她则一直想逃走），但是他们的任何行动，都属于第一序的变化类型，因而使自己在困境中愈陷愈深。</p><p>在《水中刀》（Knife in the Water）这部电影里，出现了类似的情况。一对夫妻让一位搭便车的年轻人跟他们一起驾船出海旅游，在两个男人之间，不久即出现了紧张和忌妒的情绪。双方都感到不安，且暗自较劲，希望赢得那个漂亮妻子的好感。他们终于拳脚相向，年轻人（他早先说过自己不会游泳）掉下船失踪了。那位丈夫随即潜下水去救他，却找不到，最后只好游回岸上去报警。这个时候，年轻人回到船上（他先前只是藏在救生圈之后），诱奸了那个妻子。船一靠岸，年轻人一走了之。然后，丈夫回来了。他不能投案，但也无法接受自己害死对方的想法。当然，那个妻子告诉他年轻人还活着，但是丈夫却认为她只是在安慰他。妻子看到所有解决丈夫困境的努力都失败时，最后只好使出杀手锏，将事实和盘托出：“他不只还活着，甚至令我做出对你不贞的事。”但这个“解决方案”不只未带来期望中的变化，反而使变化成为不可能：如果要他相信自己并未害死那个年轻人，那么他就得付出代价，相信妻子背叛了自己；但是如果妻子并非不贞，那么那个年轻人就是他害死的。</p><p>另外还有两个例子，也属于这个范畴，简述如下：假设有个国家，其宪法容许国会进行毫无限制的辩论。这一条规则就可能被人利用，使民主程序完全瘫痪掉——反对党只要不停地发言，就可以阻绝任何非其所好的决议。要脱离这一困境，势必得改变这个规则，但是所要改变的情况（即无止境的议事干扰），却可能正好使这一改变成为不可能。此例不只是一个心智的游戏，在国际关系的领域里也经常可见到类似的情形。查尔斯·E.奥斯古德（Charles E．Osgood）举了另一个例子，他说：“我们的政治、军事领袖毫无异议地公开强调，必须在军备竞赛中保持领先。至于在此之后会发生什么事，他们却一致闭口不谈。假设我们达到了理想中相互威慑的地步……，之后又会如何呢？地球分为两大阵营，随时准备摧毁对方，且永远对峙下去。对于这种境况，除非脑筋不灵光，没有人会称之为和平与安全！重点在于：相互威慑的政策并未包含解决自身问题的方法。”最后这一句话，非常清楚地指出了使一系统（系统一词用在此处，相当于数学上的群）无法在自身之内产生第二序改变的条件的不变因素。如前文所说的，系统之内可以发生许多第一序改变的现象，但是因为其结构维持不变，所以产生不了第二序改变。</p><p>读者应该记得，群的第二个特性指的是：根据群的组合规则所加诸成员的一系列运作，可以有所改变，但是运作的结果不变。我们在第1章举过一个较抽象的例子，与该主题更直接相关的例子，可以在复杂的稳定系统作用中找到。这些系统内部可能发生各种系列的状态变化——即便在长期的观察中，没有任何两个系列是相同的——最后却达到同样的结果，即稳定状态。阿什比的稳定状态即这样一种模式，在人际互动的领域里，涉及两个人时，常常可以观察到这一模式。如一对夫妻，基于某种原因，在两人之间维持了某种情绪上的距离。在这个系统中，不论哪一方希望跟对方加强接触，结果都没有两样。因为很明显地，每当一方跨出一步，另一方就会退后一步，所以总是保持整体的模式。</p><p>另一个结构相同、但较为复杂的模式，可以在饱受妻子的批评和监视的酗酒丈夫的例子中找到。当妻子向他抱怨、想“保护”他不被酒精所害时，他会喝得更凶，这反过来令她变得更为唠叨。<strong>同样地，当家中一个问题青少年的行为获得改善时，他的父母可能“发现”先前一向被视为“乖巧”的孩子，竟然开始出现不良的行为。这并不是父母的错觉，在临床经验中发现，所谓“反问题少年”（counter-delinquent）的行为，在他的兄弟姊妹“变乖”之际，确实会出现明显的变化。由于他不能再像以往一样批评对方的不是，现在就变成了嘲弄对方好的表现，因此，结果不是使对方回到原来的情况，就是自己开始做坏事。类似的模式，可以在某些家庭的决策过程中观察到。每当他们共同计划某件事，不论谁提什么意见，别人总会把那个主意否决掉。</strong></p><h4 id="群的第二特性"><a href="#群的第二特性" class="headerlink" title="群的第二特性"></a>群的第二特性</h4><p>一般而言，群的第二个特性所蕴涵的不变现象，常见于一种情况，即一系列变化的因果关系是循环式的，而非直线式的。这在含有互动因子的活动系统中，是很平常的事。阿拉伯国家和以色列之间的军备竞赛和扩张，就是很好的例子。为了方便起见，假设只有甲乙两方，他们互动的循环特性，令人无法确定某一行动是另一方行动的因或果。个别地看，任何一方当然都认为自己的行动乃是受制于对方的决定和挑衅；但若从外面观察，整体看来，任何一方的任何行动都是一个刺激，引起一个反应，而对方虽认为这“只是”一个反应，该反应自身亦成为一个刺激。在这个架构中，行为b之于行为a和行为a之于行为b，实际上是等同的，这就符合了群的第二特性，即如前文所说的：aob=boa。互动中的参与者，对于系列事件的“断句”（punctuate）若出现差异，很可能导致冲突。</p><h4 id="群的第三特性"><a href="#群的第三特性" class="headerlink" title="群的第三特性"></a>群的第三特性</h4><p>群的第三个特性之要素——恒等成员的含义为：基本上，当它跟别的成员组合在一起，其结果为第一序的零变化（zero first-order change）。这使得举例变得复杂，因为要指出并不存在的事物，实在很困难；但若要强调使现状维持不变的、未造成变化的事物，又似乎搔不着痒处。不过这只是表面上如此，当我们了解到零变化同时涉及两个层次的变化，前面那句话就不是隔靴搔痒了。但是，为了方便起见，我们不妨先进行群的第四个特性的列举，因为在这一过程中，比较容易了解恒等成员并非只是无物（nothing），而有其实质内容。</p><h4 id="群的第四特性"><a href="#群的第四特性" class="headerlink" title="群的第四特性"></a>群的第四特性</h4><p>如前文所述，群的第四个特性指的是，任何群的成员与其相反或对立成员的组合，所得到的结果为恒等成员。这一设定的实际含义为何呢？表面上看来，当一个事物被它的对立事物取而代之，我们实在很难想象还有更激烈的变化。但是往更深一层推进，马上可以看出来，我们的经验世界（我们所能谈论的也仅止于此），显然是由一对对相反的事物组成的。严格地说，实在界的任何方面，因为其对立者的存在，而获得实质与具体的内容。这种例子俯拾即是，不胜枚举，如光明与黑暗、图形与背景、善与恶、过去与未来。许许多多这样一对对的事物，虽然彼此的特性似乎不兼容，互相排斥，然而两者只不过是同一个实体或参考架构互补的两面 。现举例如下。</p><p><strong>中国文化大革命早期</strong>，红卫兵所引发的一项改变，是将含有“反动”、“资产阶级”历史意味的公共标志（街名、店名、建筑物名称等）全部除去，而代之以和革命有关的名称，跟过去断绝关系！但若置于更宏观的中国文化背景来看，这种决裂完全符合了过去孔子所谓正名（rectification of names）的基本原则。孔子主张先有“正当的”名，才有“正当的”实，和西方人所设想的“名称反映实体”（names reflect reality）不同。因此，红卫兵更改街道、建筑物名称的行动，仍属第一序改变。这不仅使中国的文化的时代特点毫发未损，实际上反而更强调了它，所以并未发生任何第二序改变。这对红卫兵而言，可能是很难理解的事。</p><p>讨论过这些例子之后，恒等成员的概念就不太难以理解了。如前文第三点所述，恒等成员和群的其他成员组合时，保存了该成员的自身或本体的不变性（即产生第一序的零变化）。一成员和其相反成员组合时，则保存了该群的自身或本体的不变性（即产生恒等成员，因此，也产生第二序的零变化）。例如，传统的一个特性为保持不变，必要时得通过矫正的行动，来确保不变。因此，作为行为的基础，传统可以说具有恒等成员的功能。另一方而，革命的一个特性为促成变化。但正如红卫兵的例子所显示的，革命的行动本身，其企求变化的方式可能却是传统式的。这一类行动因而具有相反或对立成员的功能，正如前文所述，保存了社会系统的不变性。事实上，令人难堪的是，历史上充满了各种革命，其结果跟革命所要推翻，代之以美丽新世界的原先状况，竟然完全相同 。</p><h4 id="变得愈多，愈是不变"><a href="#变得愈多，愈是不变" class="headerlink" title="变得愈多，愈是不变"></a>变得愈多，愈是不变</h4><p>在日常的人类事务中，对于零改变的后见之明，可能使冷静之后的头脑得出一个可悲的结论：“如果当初一切顺其自然，结果可能会更好。”但是这种领悟绝非必然；通常，恒等成员这一奇特的“零”效果，因为“看不见”，反而影响深远。注意、考虑或辩论某一事物变化为其对立者是一回事，但是要了解这一变化实际上并未改变整体模式，确实非常困难，在人际关系之中尤其如此。</p><h4 id="结论："><a href="#结论：" class="headerlink" title="结论："></a>结论：</h4><p>这些例子表明：任何一个群的特性，或任何特性的组合，都无法产生第二序改变。一个系统可能发生一切可能的内部变化（不论有多少），却不会造成系统本身的变化（即第二序改变），此即陷入没有结局的游戏。该系统无法从内部产生改变自身所需的条件，也无法产生改变自身规则的规则。</p><p>然而不可否认的是，第二序改变是一种日常现象，绝非不可能发生的事，人们的确会发现新的解决方法，社会有机体的确能够自我修正，自然界总会找到新的适应方式，而科学发现或艺术创作的整体过程所依据的，正是走出旧架构、进入新架构。</p><p>但是第二序改变的发生，通常被视为无法控制，甚至是无法理解之事，就像量子能阶之间的一个跳跃，又如一线突然的光明，出乎意料地在长期心力交瘁、情绪耗尽之后出现，有时是在梦中，有时几乎像是神的恩赐。</p><p>但我们的经验是，第二序改变只有在由第一序改变的观点，亦即从系统之内来看，才是不可预测的、突然的、不合逻辑的，等等。事实也是如此。如前文所述，第二序改变是从外部引进系统之内，因此是个新面孔，不能靠第一序改变的种种来解释。于是其特性乃成一个谜，令人捉摸不定。但是从系统之外来看，这只不过是控制系统整体的前提（在群论上，即组合规则）之改变罢了。该前提自身，当然可能保持群的不变特性，而这些前提的任何变化，势必从更高的一个层次（这一层次即后后设于原来的系统，亦即后设于控制该系统整体的前提）引进。无论如何——这是一个十分重要的实际与关键性的重点——<strong>若想在原来的系统之内造成变化，只要进入其后设层次即可。</strong></p><p>例子：</p><p>一个略显抽象但十分简单的例子，可以说明此点。图1的9个黑点，是要让人笔不离纸地以4条直线将之连接起来。</p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com//Image00004.jpg" alt="img"></p><p>很少人能迅速地解决这“9点问题”，但当那些放弃与失败的人知道答案时通常都十分惊讶，因为他们没料到答案如此简单（见图2），这一情况和真实生命情境中会遭遇的情况有异曲同工之处。我们都经验过被困在某种处境之中，即不管我们多冷静和逻辑地企图解套却只在原地打转，当我们处在困局之内即受限于第一序改变的观点之中时，解决之道就像是我们无法掌握与理解的一道闪电。从第二序改变的观点来看，它只是在同一逻辑类型中由一组假设转换到另一组而已。</p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com//Image00005.jpg" alt="图2 9点问题的解答"></p><p>换句话说，解决之道的发现有赖于尝试者自己关于这些黑点的“假设”进行检视，而不是这些黑点本身 。</p><h2 id="问题的形成"><a href="#问题的形成" class="headerlink" title="问题的形成"></a>问题的形成</h2><p>变化（甚至在成长和发展的某些层面）的推动者，通常是基于某种常态的偏离。当冬天来临，气温降低，房内必须开暖气，外出则须加衣服，以使自己舒适。如果气温降得更低，就需要更多的暖气和衣服。换言之，为了恢复常态，以求舒适和生存，一定要有所变化。根据群的第四特性，不论造成偏离现象的是什么，只要利用其对立者（如暖气对寒冷），即可得到所要的变化。如果单一行动不足以改正偏离现象，只要持续加强同一行动（more of the same），终将获得预期的效果。这一简单而“合乎逻辑”的问题解决方式，不仅适用于许多日常生活的情况，在生理学、神经学、物理学、经济学和其他领域中，更是剖析无数复杂过程不可或缺的利器。</p><p>然而，故事并非如此简单。我们不妨来看看一些其他类似的、较具体的情况。酗酒是一个严重的社会问题，因此对酒的消费必须加以限制；但是这个办法并不能除去问题，解决之道（禁酒）反而成为问题。禁酒本来是为了拯救这一社会罪恶，但是这帖药却变得比疾病还要糟；酗酒者有增无减，地下酒厂林立，其产品质量之低劣更使饮酒成为大众保健问题，政府不得不成立特警以缉捕私酒商，而这些警员在执行任务时常会贪污，等等。当问题日趋恶化，禁酒令的执行也更加严格。但是“出乎意料之外地”当解决之道成为问题时，并未带来预期的改变，“解决方案”反倒严重地制造了问题——事实上到最后却成为两种罪恶中最严重的（其一为总人口中某一比例的酗酒者；其二为走私、贪污和帮派火并的蔓延以及高比例的酗酒者）。</p><p>这个例子也可以说明真实生活情境中，关于变化的另一个重要而乍看似乎矛盾的现象。以群论的抽象术语来说，成员（如整数、粒子）个体属性不变，可变的是成员的组合系列、成员之间的关系，等等。在真实生活中，虽然有些问题的严重性可能维持在某一个程度，但是许多问题如果未经处理或处理不当，非但维持不了多久，而且容易趋于恶化——尤其当错误的解决方案一再被使用时。这个时候，从结构上看，情况并无多大变化，或仍维持原状，但是问题的困难度和其所导致的痛苦却日益增加。读者应牢记这一区分，否则我们的下一个例子就似乎有一点矛盾了：即问题一方面被当作一成不变的，另一方面却被描述成每况愈下。</p><p>色情算不算一种社会罪恶？对许多人而言，答案无疑（也无人会质疑）是肯定的。因此，运用一切法律手段来打击和抑制色情，是合乎逻辑之事。但丹麦的例子已经告诉我们，色情的完全解禁，不仅未打开罪恶和道德败坏的闸门，事实上反而使人们对色情淡然处之，且加以斥责 。因此，在色情的例子上，“持续加强同一行动”的解决方案（法律抑制）不但是两个问题中的较大者，甚至其本身就是问题所在，因为若无这一“解决方案”，也就不会有问题的存在。</p><p>令人疑惑的是，一方面这类解决方案的不合理已经明显地摆在眼前，而另一方面人们却一再地尝试进行这类改变，似乎那些主其事者不能从历史中吸取教训 。我们可用“代沟”做另一个例子。显而易见地，老少两代之间的痛苦摩擦自古皆然，几千年来人们对此表示哀叹，方式千篇一律 。这一令人头痛的现象虽然历史悠久，但是至今似乎还没有人发现改变它的方法，因此有人便假设代沟问题是无法解决的。不过在今天，已经有不少人相信代沟可以填平，也必须填平。这一信念（而非代沟本身）反而制造出许多前所未见的问题——主要是因为代与代之间的日趋两极化——而在此之前，问题只有一个，而且人们似乎已学会了如何与之共处。但是在今天，初现的两极化被增强之后，愈来愈多人开始“了解”必须要再接再厉。“持续加强同一行动”是他们改变的方式，而这一“解决方案”即成为问题本身。</p><p>我们认为，在许多人类难题的处理上，也出现了同样的并发症：根据常识，抵制一件令人痛苦或不愉快事件的办法，就是将其对立者引进该情境中。例如，亲朋好友在安慰一个抑郁者时，还有什么比逗他开心更合理的做法？但是十之八九那位抑郁者不但未蒙其利，反倒陷入更深的悲伤中，这又促使其他人更努力地想使他看见乌云的金边。他们被“理智”和“常识”牵着鼻子走，看不出（病人则说不出）他们的帮助等于是要求病人应该有某些感受（高兴、乐观，等等），不应出现其他的感受（哀伤、悲观，等等）。结果，对于病人而言，原来可能只是一份短暂的哀伤，现在却混合了其他的感受，即失败、恶劣、不感激那些深爱着他又极欲帮他的人。这一点因此成了抑郁本身——而非原来的哀伤。</p><p>这一模式常见于某些家庭，在这些家庭里面，父母有着极其根深蒂固的观念，认为有教养的孩子应该是快乐的，以至于即使孩子只是表现出最普通的、短暂的不高兴或别扭情绪，他们也会认为这是一种无言的抗议，因而建立了“不高兴就是不乖”的公式。父母的命令：“回房里去，除非面带微笑，否则就别出来”，只是诸多在同样的企图下，力图促成改变的诸多方法之一而已。然而孩子现在的情绪，不只是觉得有罪恶感（由于未能感受到他“应该”感受的，以使自己被接纳、变“乖”），而且很可能对自己的遭遇感到无可奈何的愤怒——又是两种会被他父母列为不应该具有的感受。</p><p>对于本属无伤大雅的问题，这种处理不当的模式一旦被建立起来，且成为一种习惯性预期，那么外在的强化作用（即父母企图促成改变）便成为可有可无。临床经验显示，个体在这种情况下，终将应用引发抑郁的“解决方案”于自身，然后成为货真价实的病人。</p><p>睡不着的人通常所采取的解决方式，基本上和上面的例子相同，也产生了反效果——事实上每个人都偶尔会遇到这种困难。大多数失败者所犯的错误是企图用意志力来强迫自己入睡——结果只是使自己更睡不着。睡眠本质上是一种只能自然而然发生的现象，当一个人下定决心要让自己入睡，睡眠即无法自然发生。看着时间一分一秒消逝，愈来愈着急的失眠者，只会如此一再强迫自己，因此他所用的“药方”到最后却变成他的疾病。在这个时候，“原地踏步的自我强迫性”可能导致饮食习惯改变、睡眠时间改变、服用安眠药，继而依赖药物；以上的每一个步骤，不仅都无法解决问题，反而使整个问题更加恶化。</p><p>在婚姻治疗中，常可看到夫妻双方各自认为自己的举动，乃是针对对方错误行为的最恰当反应。也就是说，在他们各自的眼中，对方的某一纠正行为，就是必须被纠正的行为。例如，有的妻子可能会觉得丈夫对自己不够开放，不让她知道自己在他心中的地位、他心里在想什么、他在外面都做些什么事，等等。自然地，为了获得她需要的数据，她就问他问题、注意他的行为，以及用各种不同的方式检查他。如果他认为妻子的这些行为冒犯了自己，可能连一些本来无伤大雅、不必隐瞒的事都不告诉她——“就是要让她搞清楚：她不必知道我的每一件事。”但这个解决方案不但未能改变她的行为，使她收敛一点，反而火上加油，令她更加担心和不信任——“如果他连这些小事都不跟我说，他一定隐瞒了更重要的事。”他透露得愈少，她愈是打破沙锅问到底，而她愈追问，他愈是守口如瓶。等到他们去看心理医生，如果医生未注意到他们的互动模式和解决方案才是问题所在，那么妻子的行为可能就会被诊断为病态的忌妒。</p><p>以上所有的例子都说明了在某种情况下，新问题的产生，纯粹是因为改变既存问题的方式的错误 ，而这种问题形成的方式，可能发生在人类生活的任何层次——个人、两人、家庭、社会，等等。上述的夫妻案例中，在别人看来，双方好像是两个水手，各悬于帆船的一边，以稳定船只：一方越是为了稳定船身而向外倾斜，另一方为了抵消对方造成的不稳，必须越向外倾斜；若无他们这些稳定船身的特技表演，船本身也可维持得相当稳定（见图3）。我们不难了解，为了改变这一荒谬的情况，其中至少有一人必须做出看似并不怎么合理的动作，即“稳定”少一点，而非多一点。由于这会使对方也立刻收敛（除非他想以落水的方式结束），最后双方才得以舒适地回到平稳的状态。</p><p>正如第一个例子（暖气对寒冷）所说明的，在许多情况下，常态的偏离可以利用其对立者加以恢复常态。在控制论上，这只是一种负反馈（negative feedback）现象 ，可以使一个系统重新获得并维持其内部稳定。在群论上，这一稳定过程具有群的第四个特性，因而其结果为恒等成员（零变化）。如前文所述，在许多情况下，这种解决问题和改变的方式，可以提供有效且令人满意的解决方案。在所有这些例子中，<strong>系统内在的第一序改变潜能，足以应对变动，而其结构则维持不变。</strong></p><p>在本章所介绍的其他例子里，第一序改变（不论涉及四个特性之中的哪一个）皆无法带来预期的变化。因为在这些例子里，系统结构本身必须改变，而这一目标只有在第二序改变的层次上才能达成。在这些情况下，如果人们只知道造成第一序改变，其结果不是使应该解决的问题更为恶化，就是解决方案实际上变成了问题。</p><h3 id="对困难和问题进行定义"><a href="#对困难和问题进行定义" class="headerlink" title="对困难和问题进行定义"></a>对困难和问题进行定义</h3><p>在此我们必须对所使用的两个名词——困难（difficulties）和问题（problems）区分清楚。<strong>此后当我们谈到的“困难”时，我们指的只是一种不可欲的状态，可以通过一般的行动（通常属第一序改变类型，如暖气对寒冷）来解决，不必运用解决问题的特殊技巧；或者，我们更常指的是一种不可欲而相当普遍的生活状态，因为无解（至少目前是如此），所以必须接受。</strong>我们所谓的<strong>“问题”，指的是因处理困难不当而造成的僵局、停顿、死结，等等。基本上，处理不当的方式有下列三种：</strong></p><p>a.企图以否定问题存在的方式来解决问题：应当有所行动，但无人采取行动。</p><p>b．企图改变某种困难，而该困难以现实的观点来看，不是无法改变（如代沟，或总人口当中少部分无法治愈的酗酒者），就是根本不存在：不应当采取行动，却采取了行动。</p><p>c.犯了逻辑层次误置的错误，而导致为没有结局的游戏。这可能有两种情形：其一，试图以第一序改变改变某种状况，而该状况必须从更高一级的逻辑层次才得以改变（例如，“9点问题”或抑郁症、失眠症、忌妒等案例中所犯的常识错误）。第二种情形正好相反，当第一序改变即足以解决困难时，却试图促成第二序改变（例如，不满意别人行为的改变，而进一步要求“态度”的改变）：在错误的层次上采取行动。</p><p><strong>处理问题的不当方式之一，就是对问题视而不见。对于这种否认的方式，我们借用了可怕的简化一词。简化的后果有二：其一，谁承认问题的存在，将被视为疯子或坏人，更别说企图解决问题了。其二，因处理不当而制造出来的新“问题”，使原本需要改变的问题变得极为错综复杂。</strong></p><p>从群论的观点来看这一困境，简化和恒等成员的概念（群的第三特性）是相吻合的，因为简化被引入一既存问题时（其自身为群的一个成员），维持了后者的恒等性，也就是使问题维持不变。但是因为我们所讨论的群体成员为人类的问题，与数学、逻辑和理论物理学里面抽象而稳定的群体成员不同，人类的问题愈是悬而未决（而仍维持该群的结构），愈容易恶化。简化可能使原来的问题变得更加复杂，的确是很可怕。</p><h3 id="乌托邦症候群"><a href="#乌托邦症候群" class="headerlink" title="乌托邦症候群"></a>乌托邦症候群</h3><blockquote><p>经过彻底研究之后，我可以确定地说：乌托邦是我们这个世界之外的事物。——纪尧姆·布德（Guillaume Bude）</p></blockquote><p>过度简化者对于一个问题可以熟视无睹，而跟他相对的另一极端——乌托邦主义者——则是无中生有：问题明明无解，他却坚信有解决之道。</p><p>在我们这个时代，这些影响及其怪异的病态表现，已经日趋显著。这些现象在各处蔓延，而不像以前那样只存在于某些特定社会或政治领域。这些现象证明了：试图以乌托邦来改变现况，所导致的后果往往使问题陷于胶着状态，甚至愈变愈糟。人们面对问题时，如果自认已经找到（或可以找到）最终的、最完满的解决办法，很容易就陷入极端主义。人一旦有了这种想法，当然就会努力去实现他的想法，否则他就是对自己不忠实了。因此而引发的行为，我们称之为乌托邦症候群。乌托邦症候群可能以下列三种形态出现。</p><h4 id="乌托邦症侯群的三种形态"><a href="#乌托邦症侯群的三种形态" class="headerlink" title="乌托邦症侯群的三种形态"></a>乌托邦症侯群的三种形态</h4><h5 id="第一种类型可以称之为“内射式”（introjective）。"><a href="#第一种类型可以称之为“内射式”（introjective）。" class="headerlink" title="第一种类型可以称之为“内射式”（introjective）。"></a>第一种类型可以称之为“内射式”（introjective）。</h5><p>它所呈现的，是更直接属于精神病的、而非社会性的现象。因为这些现象之所以产生，是由于当事人苦于无法达成自己的目标，而觉得是个人有所欠缺所导致的结果。如果那个目标是乌托邦式的，那么这个设定目标的动作本身便导致一种情况，亦即目标无法达成，他不会怪罪于目标的理想性，而只能怪自己无能：我的生命应该更丰富，更有收获，而我却生活在平凡和无聊之中；我对生命应该有强烈的感受，可是我却无法从内心唤醒这些感受。这一困境可能使人“退出社会”——忧郁、退缩，甚至自杀。</p><p>内射式乌托邦症候群可能导致的后果还包括：疏离、离婚、虚无的世界观；酗酒和嗑药也常发生，而在得到短暂的麻痹之后，不免又回到更冷酷、更灰暗的现实，使他们更容易抱持“退出社会”的生活态度。</p><h5 id="第二种类型"><a href="#第二种类型" class="headerlink" title="第二种类型"></a>第二种类型</h5><p>乌托邦症候群的第二种类型，并不像第一种那样充满戏剧性，但是却可能具有某种吸引人的魅力。他们的座右铭正如罗伯特·路易斯·史蒂文森（Robert Louis Stevenson）的名言（可能是借用某日本格言）所说，“满怀希望地跋涉，胜过抵达目的地！”这一类型的人，并未因为没有能力实现乌托邦式的改变责备自己，反而会沉溺于一种比较无害的、几乎是儿戏的拖拉之中。他们觉得，目标既然十分遥远，这一趟旅程也将备为艰辛，而长途旅行是需要长期准备的。至于是否能够达到目标，或一旦达到目标，是否值得如此长途跋涉的恼人问题，则暂时可以不必细究。希腊诗人康斯坦丁·卡瓦菲斯在他的诗作《伊萨卡》（Ithaka）里所描绘的，就是这种心态。他告诫航海者说：“向上天祷告，让旅途又长又远，充满刺激和冒险吧！把伊萨卡铭记于心，因为那是你们的目的地——不要匆匆走完这段旅程，最好让它持续几年，等到你们年纪一大把了，再去那个岛屿停泊。”卡瓦菲知道有一种非乌托邦的解决方式：当你驶进未曾停靠的港口，你已经在航途中得到许多，不要寄望伊萨卡能够给你财富。伊萨卡已经给了你一个美好的旅途：如果不是因为伊萨卡，你根本不会出发。但是卡瓦菲的这个睿智而讨好的解决方式只适用于少数人，因为有朝一日踏上乌托邦的梦想，可能会令人担忧：不是惧怕幻灭，就是像哈姆雷特所说的，我们“宁可忍受眼前的苦痛，也不愿飞越至陌生的境地。”不管是哪一种情形，重要的是旅程，而非抵达终点。这种旅人从来不抵达一个目的地，只是到处飘荡。那些永远的学生、完美主义者，以及每次在成功前夕开小差的人，即是最好的例子。可欲而不可得的心理，往往他人在如愿以偿时感到失落和亵渎：对虔诚的犹太人而言，以色列国的政治实现，只不过是在嘲讽他们世世代代对救世主的期待；对一个终于掳获美人心的男人而言，胜利的滋味跟当初他所梦想的相去甚远。<strong>关于这一点，萧伯纳（George Bernard Shaw）说得更简明、更悲观：“人生有两个悲剧，一个是心愿无法达成，另一个是终于达成心愿。”</strong></p><p>在日常生活之中，当一个人不把人生视为一个行进的过程，而真的以为“抵达目的地”完全不成问题，这种乌托邦主义将成为一个大问题。例如，大众相信一个神话，认为人生的许多重要转折都是毫无问题、非常愉快的经验。我们对此充满乐趣——亲朋好友（当然还包括家具店商人）总是这么祝福新婚夫妇：“你们将过着幸福快乐的日子”；蜜月总是被想象成“神奇美妙”的；年轻夫妇要生第一胎了，人们都会说他们将享受为人父母的喜悦，更亲密地结合在一起；退休则被当作一种美好满足，同时将开启新的机会；踏上一个遥远而陌生的城市，该是多么迷人的经验，等等。但是，众所周知，所有这些人生的转折，通常都给人们带来不快、困扰和失望。</p><h5 id="第三种类型"><a href="#第三种类型" class="headerlink" title="第三种类型"></a>第三种类型</h5><p>第三种乌托邦症候群的形式主要是“投射式”（projective）的。这一形式最重要的成分是一种道德的、主持正义的立场。抱持这种态度的人认为自己站在真理的一边，肩负着改变世界的神圣使命。他们最初是通过各种方式企图说服别人，认为只要说得够清楚，所有的好人都将见到真理。于是，那些不认同真理，或对真理置之不理的人，就被视为坏人。推演到最后，则变成必须消灭这些坏人，才能维护全人类的利益 。</p><p>所以，如果我的生命并非时时充满喜悦；如果“人人为我，我为人人”的博爱理想未能实现；如果我虽然辛苦修行却仍未顿悟；如果我还不能和同伴深刻无碍地沟通；如果我的性生活平淡乏味，跟性爱手册所描述的相距甚远……那么这些都是因为我的父母或是社会出了问题，是他们定的规矩和限制阻碍了我，剥夺了我的那一点点自由，使我无法获得自我实现。社会组织害我们生病——这是一些激进派德国人的自我描述，也是卢梭的翻版。罗伯特·阿德里引用卢梭名著《爱弥儿》（Émile）的第一句话来描述一些现象，他非常传神地宣称这句话开启了“推诿的时代”（The Age of Alibi）。这句话的意思是：自然使我快乐和善良，如果我不是这样，那么就应该怪这个社会。</p><p>到目前为止，我们所讨论的例子，都是企图以改造自我或改造世界来完成一个不切实际的理想，这种改变的方式又跟某些不可改变的困难纠缠在一起，从而形成问题。但有时候人们也会认为“困难不存在”才是问题，必须加以纠正，直至最后才发现自己在处理一个并不是问题的问题。清教主义便是诸多这种“问题”的制造厂（有人曾戏称其基本教条为：你可以做任何事，只要它不会为你带来快乐）。这种思想的前提是：人生是苦难的，人必须不断牺牲，一切成功都须付出极大代价。在这个前提之下，轻松、自然、“不该有的”享受（更别说飞来横财了！）等，都象征着某种错误的存在，或即将遭受天谴 。</p><p>我们不禁想到那位以善尽母职、牺牲自己为荣的母亲，或一心一意做牛做马的丈夫——虽然在他们的眼中，问题之所以产生通常是因为孩子或配偶的“不负责任”。如另一位能够轻松过关斩将的聪明学生，却越来越担心真相的揭晓，到头来会发现自己实在一无所知，过去全都是靠“运气”。又如那些不断地训练自己、准备去应付某种他们认为迟早要发生的、奇怪的紧急状况，届时他们的体能和求生技术便可以派上用场的专家。前述的这些例子，其前提都涉及一个负面的乌托邦：事情愈是美好顺利，其实愈糟糕，因此非把它弄得困难重重不可。正面的乌托邦觉得“没问题”，负面的乌托邦则认为“问题无解”，两者都将人生中常见的困难和快乐视为反常的现象。</p><p>乌托邦症候群诸多方面的共通点是，患者认为他们所根据的前提比现实还要真实。我们指的是，当一个人（或团体，或整个社会）试图按照自己的前提去建立自己的世界而遭遇挫折时，并不反省自己是否有不合情理之处，反而如上文所述，去怪罪一些外在的因素（例如，社会）或自己的笨拙。他们无法忍受是自己的前提可能出了问题的想法，因为对他们而言，这些前提即是真理，是最真实的。一个研究计划研究不出什么结果，主其事者若是采取同样的态度，他将投入更多钱，再扩大计划，来试图解决问题，简单地说，即“当解决之道变成问题时”。</p><p>为了掌握“改变”的种种不可捉摸的特性，有一件事显得非常重要，就是必须区分事实以及关于事实的前提。我们先前在介绍“9点问题”时已经提到这一点，应该还记得，人们之所以解不开这个问题，原因在于他们先有了一个错误的假设，而不是尚未发现“正确的”方法，亦即在那个前提的框框内把9点连接起来的假设。这种芝麻般的错误，若是发生在人们对自己的存在产生绝望之际，可就不能等闲视之了。许多人到最后之所以想到自杀或真的自杀，是因为未能达到某些期望，就像海明威那样，他们觉得自己的生命是毫无意义的。</p><blockquote><p> 一些存在主义作家从祁克果（Soren Kierkegaard）、陀思妥耶夫斯基到阿尔贝·加缪（Albert Camus），对于丧失意义所造成的致命后果，已经有所揭露。在这种存在的绝望当中，对他们而言，最重要的事就是追求生活的意义，他可能质疑天底下的任何事物，但是却不包括质疑这个追求本身。也就是说，他们假设生活确实有某种意义，人要活下去就必须发现这个意义，而他们从来不去质疑这一假设 。这么说似乎不够谨慎，但这也是许多悲剧受害者和《爱丽丝梦游仙境》（Alice in Wonderland）里那位“心之王”不同的地方。国王读了“白兔”胡诌的诗之后，高兴地说：“如果这首诗没有任何意义，那可帮我们省了不少麻烦，因为就不必再去找寻什么意义了！”</p></blockquote><p>乌托邦主义者对“改变”的企图，往往把自己陷入僵局，他们无法清楚区分难题与“问题”，也无法区分“问题”与“解决方法”。乌托邦的不可达成，是一个假性问题，但是它所带来的痛苦却是真实的。</p><p>我们实在很难以更简洁的文字来界定乌托邦症候群。但是现在不妨进一步考虑，如果真的达成了乌托邦式的改变（例如，在政治社会的层次上），将会产生什么结果？首先，要达到这样一个理想的社会，它的各个成员应当具备相同的成熟度，在思想、情感和行动上都没有差别——这一错误令人想起一幅毫无生气、死气沉沉的可怕景象，或冯·诺伊曼（Von Neuman）所称的机器人，失去了那种只能从人的天生差异性所引起的生命张力。而更可怕的一面是：“改变”以及随之而来的任何差异性和原创性都将成为非法，因为那样势必使完美又回到不完美。于是，乔治·奥韦尔（George Orwell）笔下所描述的社会里，我们这个时代鼓吹乌托邦式的改变最卖力的，将是第一批消失在铁丝网或收容所围墙之后的人。恶性循环将永无解开之日，而最后的解决乃成为最好的解决之道。</p><p><strong>从理论上来说，人们可以借着改变现实，以符合他们所持的前提。但是很可能在同样多的情况下，人们对于事物的实际状况根本无法加以改变。在这种情况下，如果有人认为他所假设的“可能”（即“应当如何”的状态）比现实还要真实，虽然他力求改变，也等于是缘木求鱼。因此，正是这个“应当如何”的前提成为了问题。需要改变的是这个前提，而不是事物“实际的”状况。</strong>拿掉乌托邦式的前提，实际的状况或许还可以令人忍受呢！<strong>因此，这里牵涉一种“改变”的错误处理方式：即试图以第一序改变来应付那种第二序改变才能解决的问题。</strong></p><h3 id="悖论"><a href="#悖论" class="headerlink" title="悖论"></a>悖论</h3><p>在一般的看法里，如果悖论使人的立论站不住脚，解围的办法很简单，只消说这在逻辑上根本不可能，所以也就不是什么大不了的事。于是，不论是那位只给村子里自己不刮胡子的人刮胡子的理发师，或是那位只帮所有不愿到邮局取信的人送信的邮差，在涉及自己的胡子或信件时，“其实”并未陷于困境，因为只要我们严守形式逻辑的范畴，根据定义，不可能有这样的理发师或邮差存在。从逻辑的观点来看，这是没有疑问的，但是在日常生活中，我们都经历过一种“不合逻辑”的行为和状况，所以这种太过于逻辑的观点并不能令我们满意。</p><p>至于悖论在人类的实际行为上有何意涵，据我们所知，第一位思考这个问题的人是维特根斯坦。他说：“逻辑上的悖论，其种种半开玩笑式的表现之所以引人入胜，是因为它使人看到一件事，就是如果我们想要恰当地了解其功能，那么我们无可避免地将面对形式上更为严格的悖论。现在的问题是：这一种逻辑上的谬误，在语言游戏中可能扮演什么角色？”维特根斯坦接着提到国王的悖论（这位国王曾颁布一条法律，凡是要进入该国的外国人必须陈述进入该国的真正理由；那些没说真话的人将被处以绞刑。结果有一位辩士说，他之所以来，就是为了让国王拿这条法律判他绞刑）。然后问了一个重要的问题：“国王现在要制订什么样的规则，才能使他以后不再陷入囚犯为他带来的尴尬处境——这到底是一种什么样的问题？”</p><blockquote><p>我想我要说的是：我希望安迪学会如何做事，我也希望他能够做一些事情，但是我希望他自己真的想要去做。我的意思是，他可能只是盲目地听从指示，而不是他自己想要去做。</p><p>我知道我这样做是错的，我也不知道我错在哪里，但是我觉得不应该强迫他去做事——可是话又说回来，如果你就这样让一个孩子完全自己做主，到最后，房间地板上的玩具、衣服，等等，将会堆得天高，诸如此类的事总是有两个极端。我希望他自己想要做事，但是我知道，要他办得到，还得我们去教他！</p><p><strong>——这句话所要求的是一个纯粹自动自发的行为，但是因为该行为是在被要求之下才做的，所以也就不可能是自动自发的。</strong></p><p>每一个“自动自发一点！”类型的悖论——包括那位母亲对儿子的要求：“你应该自己想要去读书”，都具有类似的结构。它硬性规定一切行为都应该是自动自发的 ，不可以只是服从规定。根据这一规定，凡是服从某一外在规定的行为是不被许可的，因为这一行为应当是很自然地发自一个人的内心。这一规定涉及了所有的规定（种类），但是它本身也是一条规定，是属于该种类的一个成员，所以又适用于自身。因此，埃庇米尼得斯和那位母亲两者都冒犯了逻辑类型理论的主要公理，即：<strong>凡牵涉到某集合（种类）所有成员的，不可能是该集合的一个成员。他们违反了这一公理，结果造成了悖论。</strong></p><p>经过上述讨论，我们现在比较能够理解在第3章介绍的几个例子中，问题形成的特定形式。失眠症患者的特点就是使自己掉进“自动自发一点！”的悖论中；他试图运用意志力来达到一个自然的、自动自发的状态——入睡，结果却使自己睡不着。同样地，忧郁症患者为了改变自己的情绪，试图让自己产生一些摆脱忧郁症的人应该具有的感觉。当然，“应该”这两个字意味着：只要一个人真诚地尝试，感觉是可以经过某种设计而自动产生的。</p><p>社会应该如何以人道的方式来矫治犯罪，要讨论这个极端复杂的问题，我们显然仍力不从心，但企图改变犯人的心态和行为往往走进死胡同，这是连一般门外汉都可以理解的事。不论是在重刑牢房或只是在少年感化院，所产生的悖论是相同的：判断犯人是否被这些机构感化，所依据的不是他们是否学会了说“对”话和做“对”事，而是依据他们是否因为被改造才有“正当的”言行。如果把改造和服从当作两个不同的东西，感化便不可避免地成为自我反射——因为你认为它既是自己的因也是自己的果。这个游戏的赢家是那些好的“演员”；输家则是那些太“诚实”或太愤怒、不想玩这个游戏、拒绝被感化的受刑人，或是那些为了获释而演出这出戏、但又露出马脚而被认为不是自动自发的人。人道这样就成了一种伪善，这让人产生了一个可悲的结论：亦即让犯人付出代价，如单纯惩罚，而不要去管他的心态如何，似乎是较为可行的办法，如此即可避免因控制心态的悖论所带来的麻烦。</p></blockquote><h2 id="问题的解决"><a href="#问题的解决" class="headerlink" title="问题的解决"></a>问题的解决</h2><p>从前面的讨论中我们发现第一序的改变是无法解决问题的，要解决问题必须从第二序的改变入手。</p><h3 id="第二序改变"><a href="#第二序改变" class="headerlink" title="第二序改变"></a>第二序改变</h3><p>我们至今所发现的第二序改变的几个原则。</p><p>1．第二序改变的应用范畴针对的正是那些第一序改变中的问题解决方案：因为从第二序改变的观点来看，这些解决方案正是问题无法解决的关键之处。</p><p>2．第一序改变常是基于一般常理而产生的策略，而第二序改变的方法往往是令人不可思议、不可预料，而且超乎常理的；在第二序改变的过程中，常存在着令人困惑不解或矛盾的元素。</p><p>3.第二序改变的解决方法是处理此时此地（here and now）的情境；它直接处理问题的结果而不是探究问题发生的假设性原因，重要的是问题是什么（what）而不是为什么（why）。</p><p>4．第二序改变的方法是让问题情境超脱于人们在尝试解决问题时所掉入的悖论纠结的陷阱，并且将问题置于不同的解决问题的框架之中（如“9点问题”的解决方法）。</p><h4 id="解决问题重要的是什么，而不是为什么"><a href="#解决问题重要的是什么，而不是为什么" class="headerlink" title="解决问题重要的是什么，而不是为什么"></a>解决问题重要的是什么，而不是为什么</h4><p>在科学的发展中，为什么这个问句一直扮演着一个决定性的角色；长久以来，科学一直被认为是要去解释宇宙万事万物的学问。让我们先一起来思考：我们无法回答为什么科学的思考逻辑将“解释”视为“改变”的先决条件，但是毫无疑问地，这是一个事实。为什么这个问句在科学发展的过程中一直被提起，它决定了科学研究的程序，而科学研究的结果并未有效地解释为什么我们一定得问为什么。我们的看法是，我们可以只处理此时此地所存在的问题情境，而毋须去了解为什么问题会以那种形式发生。而且就算我们不知道问题的根源和演变，我们依然能够去解决问题。在解决过程中，我们是在问是什么（what），即问题的情境是什么，此时此地发生了什么事 ？可是想要解决问题，首先就必须认知到为什么的这个迷思已经深埋在科学思考中，所以任何只针对问题的现存结构与结果的解决方法，目前都被“科学界”视为只是肤浅地触及了问题的表象层次而已。所幸我们所提出的与改变理论有关的主张并不是独创的；当我们在研究中逐步肯定这个原则的同时，便发现以前已经有人在不同的领域中提出过同样的原则。</p><p>维特根斯坦便是其中的一位，在《哲学研究》（Philosophical Investigations）一书中，维特根斯坦对解释取向的研究方法有过严厉的批判并指出其局限性，他说：“解释总是有终止的时候，可是‘5’这个字的意义到底是什么呢？我们只有探究‘5’如何被使用的时候，它的意义才能显现。”随后，维特根斯坦超越了抽象的哲学语言直接指出：<strong>“如果我们不去问‘为什么’而直接去探究现象所发生的重要事实，往往我们可以发现，事实会引导我们去找到答案。”最后，维特根斯坦强调，一个问题最值得探究的是“问题”本身</strong>；这个观念与我们所提的改变理论之原则颇为接近。</p><p>接下来我们需要概略地谈一下数学这门学科。数学也是不问为什么的，但数学的方法却是一种深切分析及具想象性的解决方法。数学的陈述最好是被理解为在一系统之内相互关联的元素；去了解它们的原因或起源并不重要，去捕捉它们的意义更可能误导了解题方向。</p><p>最后，当我们从抽象的理论陈述，分析到较具体的案例现象时，发现还有一个领域可以支持我们在探究改变理论时着重问是什么而非为什么的立场，那就是以问“是什么”作为观察分析和行动基础的电子学中有关“黑箱”的研究方法。这个研究方法起源于第二次世界大战中，当某方军队掳获了敌方的电子设备时。因为电子装备通常都有自我爆破的设计，而无法拆开来分析，所以只有利用不同形式的讯号输入“黑箱”的设备中，再观测其输出以了解电子装备的功能是什么，而毋须知道为什么。今天，这个研究方法的观念已被广泛地应用在一些结构复杂的电子回路探测工作上。这种研究方法只要了解输入与输出的关系即可，所以要比实际去研究装置的性质（为什么？）要经济省事多了！</p><p>如前面所提过的，少问为什么而着重于是什么是较有利于研究人类行为的。不可否认，经常有人问道：个体目前的行为是否为他过去经验所造成的结果？当我们探究问题时，可以忽略过去的原因对现在所造成的影响吗？不过，这种提问只是一个假定，而这个假定显然多半与现实中自发性改变的研究结果相互矛盾。日常生活与临床上的发现都告诉我们，改变不仅可以不经由彻悟，而且只有极少数的个人行为或社会改变是对问题的起源有所彻悟而发生的。例如，一位失眠者可能由过去的经验而导致目前的困难；他有一位对小孩不耐烦而且神经质的母亲，在孩提时代，母亲总是催促他赶快睡觉，不要再烦她，等等。但是这些发现对目前的失眠问题，或许提供了似乎合理、有时还相当复杂的解释，但对问题解决却一点帮助也没有。</p><p>我们发现在有计划地介入人的问题时，最实用的方法不是去问为什么而是问是什么。也就是去了解此时此地到底是什么行为，使得问题持续不变？我们应该采取什么行动才能使改变发生？</p><p>现在，我们应该较能理解一味地探究过去经验中的成因，只是一种自我设限的“问题解决”方式。</p><blockquote><h4 id="一些第二序改变的例子"><a href="#一些第二序改变的例子" class="headerlink" title="一些第二序改变的例子"></a>一些第二序改变的例子</h4><p>第一个例子是：有位母亲带着她的4岁大的女儿去幼儿园，这位小女孩是第一次去上课，当她的母亲准备离开时，小女孩很沮丧，于是这位母亲只好陪着她直到放学。这种情形每天都同样发生。不久，小女孩的家人就觉得事态严重，可是用尽了所有的办法，就是无法改变这个事实。直到有一天早上，这位母亲因事无法送她的女儿去学校，父亲只好代替她跑一趟，到学校后他留下女儿就去上班了。这小女孩哭了一阵子就静下来，隔天当母亲又带她去学校，以往的情形居然不再发生，小女儿也不再哭闹，这一问题也就迎刃而解了 。</p><p>第二个例子是一对夫妻，他们做爱的次数愈来愈少，直到一次意外事件发生为止。在这件意外事件发生以前，他们已经有好几个月没有行房。这件意外事件是发生在他们外出度假的时候，那天晚上他们留在一个朋友家里过夜。朋友客房中的双人床是双面靠墙的，只有从侧面才能上床，而在这对夫妻家里的那张床则是床头靠墙而已，所以他们可以从两边各自上下床。那天半夜的时候，丈夫有事要下床，如在家中一般，他习惯性地想从他睡的那边下床，可是他睡的那边是靠墙的，结果他当然就撞壁了，他才意识到这不是他家，并且开始爬过他太太。当他这么做的时候，“我才了解到原来床的那一边存在着一些有价值的东西。”事后他回忆道。于是夫妇就开始做爱了，两人的冷战也被打破了，而性行为的次数从此恢复正常。姑且先不谈这样的改变为什么会发生，我们可以从这个案例中了解到一个事实：改变的引发有时只是因为一件微小的偶发事件，这和所谓专业的解决方法是一点也扯不上关系的。</p><p>第三个例子是一个未婚的中年男子，由于广场恐惧症而导致生活相当得封闭。在日常生活中，他觉得不会让自己感到焦虑的安全空间愈来愈小了，最后他不仅无法外出工作，甚至于连到隔壁的商店去购买生活必需品也都不敢去了。这种情形使他沮丧得想要自杀，于是他打算开车到离他家50里远的山上去了结自己的生命。可是当他开着车驶过一些市区建筑后，他马上察觉到焦虑和心悸的感觉已不再使他感到悲痛。读者大概已猜到这个故事的结局：主角不仅安全地抵达目的地，而且是在他这几年的生命中，第一次经验到自己没有焦虑发生。由于这次的经验，使他更想弄清楚自己的问题是如何被解决掉的，以便帮助与他过去有同样困扰的人。于是他找到一位对自发性痊愈感兴趣的精神治疗者认真地去探究这个问题。这位治疗者和他一起进行了5年的研究，不仅确定这位当事人的精神症状不再复发，而且还帮助了其他的患者解决这种问题。</p><p>最后一个例子与前面的大不相同。那是19世纪发生在巴黎的一次暴动，军队的指挥官接获命令要对暴民开火以清除广场。他命令部队进入射击位置，一支支的枪对准着群众。接下来，是一阵恐怖肃杀的寂静，这时，指挥官拔出剑来并大声喊着：“各位先生女士，我奉命要对暴民开火，但是眼前我所看到的是一群诚实、人格高尚的市民，我请求你们能够离开广场，好让我们能够瞄准这些暴民！”结果，当他说完这番话，广场的人群不到几分钟就散去了。</p><p>这些案例是否有共通点呢？表面上看来似乎并没有，前两个案例的改变似乎是由于微小的突发事件，第三个案例是因为主角不要命、豁出去的举动而造成改变，而第四个案例则是指挥官机敏地掌握了群众心理。但是如果我们引用第二序改变的原则来看，这些看来毫不相关的事件，其实是有其共通之处的。每个案例中决定性的行动（不管机智或不智）都引发了所要的解决之道——<strong>特别是，这些行动都是直接应对困难本身，而不只是讨论困难为什么会发生。</strong></p><p>1.这位母亲每天都留在学校陪女儿，这种解决方法只是为了避免小女孩生气。相对于后来成功的改变，前者只是传统的第一序改变。改变发生后，问题却依然存在，并且阻断了改变的可能性。在这个事件中，小孩子的困难问题是不能适应幼儿园的生活，而那天早上母亲刚好有事不能送女儿上学的事实，却中断了她以往为避免小孩生气而采取的举动，这使得问题形成的系统，因前提的消失而发生了重组。</p><p>2.这对夫妻所碰到的困难是，由于机械性例行公事般的性生活，导致做爱的频率愈来愈低，而这种不正常的频率使他们感到烦忧而更加逃避对方，“逃避”却使问题更加维持不变。在朋友的客房中，逃避对方的行为依然发生，可是在不同的环境下，“过去他们用以解决问题的模式——避开对方，免得心烦”，反而引发了第二序的改变，这样的改变与以传统理论来理解问题的方式几乎毫无关联。</p><p>3.在广场恐惧症的案例中，令人意外的是他想要解决问题的方法反倒成为问题。当他一反常理地停止去解决问题时，也就是不再待在他的安全空间时，原先解决问题行动的中断反而解决了他的问题。</p><p>4.这位指挥官面对的是一群危险的群众。面对这个问题，传统的第一序改变的方法是以暴制暴，可是这样做将使问题更加僵持不下：因为部队是武装的，而群众则手无寸铁。毫无疑问，敌对的态势将继续维持。从更高的层次来看，这种镇暴的改变手段并没有造成平乱的变化，反将使得局势更加紧张、混乱。而这个指挥官的适时介入，却成功地造成第二序的改变——他跳脱了他和群众对峙的情境，重新框定了在场人员都能够接受的情境，于是原先的紧张态势和无效的解决方法（以暴制暴）都被安全地解决掉了。</p><p>让我们再来看另一个恐惧症的案例。这个患者无法忍受置身于嘈杂、明亮的商店中，要不然就会昏倒或窒息。起初，他可能经验过当自己进入商店时短暂性的厌恶或偶发的晕眩等之类很糟糕的感觉，但是，几天以后，当他想再进去那家商店时，上次的经验可能记忆犹新，而他可能想极力避免同样的情形发生。结果，跟上次一样的经验又再度袭击他。</p><p>可以理解的是，因为这个患者经验到其内在力量对他的支配，使得这些糟糕的感觉一再发生，所以他用来避免这种情形发生的方法可能是经常服用镇静刺。但是，这不仅不能解决问题，反而使得问题更维持不变，而且这个方法本身就是个问题，他已陷入悖论之中。要解决他的问题，可以指定他一个反悖论的作业，就是要他再走进那家商店，且不管那个时候他是否仍存在厌迫性的焦虑，就是要他故意昏倒。他可以以一个瑜伽修行者的姿态去进行这项行动，并且可以照指示走到他想到的地点，可是必须确定这个地点是他觉得只要再走一码的距离，就会被焦虑击倒的那个地点。</p><p>上面所提到的两个例子，都是直接介入患者原先解决问题的方法中，而改变就这样发生了 。同样地，有个似乎合理但是至今仍未证实的臆测，就是如果将大麻合法化（大麻的害处还未确定，但是它的副作用是不会比一些常用的药物更严重），其可能不仅会减少人们对它的使用，而且也将使由于法律制约所带来的复杂的反效果自行消失。有众多专家认为这种大麻禁售令，反而会产生比不禁售时还要严重的弊端。</p><p>第二序改变的方法也可以运用在有关人际间的信任问题上。例如，缓刑犯与他的缓刑辅导员的关系。在理想上，应该是个完全信任的关系，因为辅导员是要帮助缓刑犯，了解他目前的生活。可是，实际上，两个人之间却只有一定程度的认识，而且辅导员本身也摆出一副政府官僚的姿态。所以，如果那个缓刑犯再度犯下暴行时，辅导员根本不会有机会去发现到这个状况。就算是辅导员跟他的当事人说：“你应该信任我”，他也只能获得缓刑犯一丁点儿的信任而已。很明显地，信任是自发的，不是以命令取得的。我们在训练辅导员时，有个虽然诡异但是却很管用的解决问题方法，那就是要辅导员告诉当事人说：“你不必完全信任我，或把任何事情都告诉我。”读者可能已看出我们给的指示与埃庇米尼得斯（第6章卷首句作者）的陈述很类似，也和那位诡辩家所宣称的自己要进入城堡接受绞刑一样。这个个案的结果不但使得他们的关系人不再退缩和拒绝，而且提供了那些陷于悖论处境中的工作者一个实际的解决方法。这位辩护人的声明获得了缓刑犯相当的信任度，他澄清了自己的角色不可信赖的困境，于是可行的工作关系基础就这样建立起来了。</p><p>另一个有关信任以及由于对困难的处理不当造成问题的案例是在赫鲁晓夫（Khrushchev）的备忘录找到的（这个记载有可能是捏造的）。在这份备忘录中，赫鲁晓夫描述了斯大林的女儿脱离共产党这一事件。在指责她逃离到西方的不智之举后，赫鲁晓夫提到了这一事件的内幕：</p><blockquote><p>她做了蠢事，不过贝尼迪克托夫（Benediktov）在处理这件事时也一样的愚蠢和粗心。很明显地，当她丈夫的葬礼结束后，她就到了苏联在新德里的大使馆。贝尼迪克托夫是那里的大使，我知道他是一位很正直的人。史达拉嘉（Svetlanka）跟他表示想留在印度几个月，但是贝尼迪克托夫却建议她马上回苏联，这就是他错误的地方。当一个苏联的大使劝一个苏联的人民赶快回家，那将使得这个人起疑心，史达拉嘉尤其敏感到如此待遇的意义，那意味着她已不再被信任。</p></blockquote><p>然后，赫鲁晓夫表示他知道一个好的方法来处理这样一个悖论的信任问题：</p><blockquote><p>我认为该如何做呢？我确定如果她不被这么对待，那么这件令人遗憾的悲剧将不会发生。当史达拉嘉到大使馆并且表示她想待在印度两三个月时，他们应该对她说：“史达拉嘉，怎么只想留三个月而已呢？去办个两三年的签证嘛！你可以办签证，然后在这里生活一段时间，当你想回苏联时，随时都可以回去。”假使她被允许有这样的选择自由，那么自然而然地，她就会受到良心的监控，他们应该表示她是值得信任的……如果我们这样做，那么史达拉嘉会不回苏联吗？嗯！也许这样做事情会变糟，但是至少不会糟到她脱党的程度吧。</p></blockquote><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>我们提到的所有例子中有一个相同的架构：当事件A发生，而且情况令人难以忍受时，一般人依常理判断会认为如果阻止A发生，也就是用A的替换物或对立面来避免问题发生（即群论中的第四特性）就可以解决问题，但是这种方法只会造成第一序的改变。只要问题的解决思考是以不是“A”就是“非A”的二分法来寻求答案，就将落入二选一的谬误中，陷于不是一就是二的选择困境里。可以确定的是，这种“不被质疑的错觉使我们必须在‘A’或‘非A’之间作一个选择”，如此将永远不能跳离两难的情境，并且使我们无法看到有效的解决方法，虽然它总是有违常理。</p><p>第二序改变的原则是“不是‘A’，也不是‘非A’”。这是一个古老的原则，例如，禅宗大慧禅师指着一根树枝跟他的弟子说：“如果你称它是树枝，你是肯定的；如果你说它不是树枝，你是持否定的。那如果不对它肯定也不对它否定，你怎么称呼它？”这是一个很典型的禅宗公案，用来迫使人们跳出肯定它或否定它的二分法陷阱，而产生质的跃升，跳到更高的逻辑层次去思考，称为“超脱”（Sátori）。这似乎也类似于圣路加（St.luke）所称的：“你愈想保住生命，就愈容易失去生命，而不顾死活的，反而会活下来。”在哲学上有相同原则的是黑格尔（Georg W. F. Hegel）的辩证法，它强调事物的发展过程是超越二分法的，是一个正反摇动反复变动的过程。</p><p>这就是第二序改变的本质。</p></blockquote><h3 id="重新框定的艺术"><a href="#重新框定的艺术" class="headerlink" title="重新框定的艺术"></a>重新框定的艺术</h3><blockquote><p>问题：乐观者与悲观者的差别是什么？</p><p>回答：乐观者说我的杯中有半满的水，而悲观者则说我的杯子一半是空的！——无名氏</p><p>任谁皆可对生命之道有所怀疑，倘若我们对之无疑，生命反自显其意涵道理。——皮亚特·海恩，《古鲁思》（Piet Hein，Grooks）</p></blockquote><p>重新框定是指将人们赖以理解或经验某种情境的概念与情绪的假设或观点，改变成另一组同样也能“符合事实”（甚至更好）的设定，经过这一转换，该情境对人们的意义已全然改变。重新框定的机制并未涉及情绪的变化，而是当情境并未变化时，人们赋予该情境的意义已经改变了 ，以至于结果也不一样了（但具体的事实仍然维持不变）。这正是哲学家爱比克泰德（Epictetus）所说的：“不是事情本身令我们困扰，而是我们所持的关于事情的意见在困扰我们。” 这句话中的关于点醒了我们一件事，即任何意见（或是所赋予的意义、观点）是对该意见或观点这一客体的后设层次，亦即另一较高的逻辑层次。</p><h4 id="什么是真实"><a href="#什么是真实" class="headerlink" title="什么是真实"></a>什么是真实</h4><p>在心理学中，“现实”的概念并不是指一事物的本身，例如，它的基本属性（如果真有什么物质属性的话）。对心理学而言，这些可被观察到的现象都是一个事物的表象；“现实”是指爱比克泰德所谓的“意见”，或者是所谓的人们所赋予现象的意义 及价值。这一观点和以下这种简化但广为人们所接受的假设相去甚远——即如果有一个客观实体存在，健全的人要比不健康或精神异常的人更能觉知到它的存在。在这里，我们得到的反思是：任何一件事，只有当它符合对现实的定义时，它才是真实的，而这些定义正是人们所设定的 。引用一过度简化但有用的概念：“真实”（real）是有足够多数的人都同意称它为“真实”的事物 ——只是这个事实常被大家忘记，所以到后来，这个大家同意的定义，却被人们经验成外在的“客观存在”的“现实”了，而只有“疯子”（或精神异常）才会无法看到“真实”。不过，这种在大家共同同意之下而被具体化定义形成的“真实”，对不同的人也有程度上的差别。例如，有些情境是多数人觉得“真的十分危险”而尽力避免的，但却有极端的某些个人，如“尽其所能地追求死亡”，或是“有受虐待狂倾向”的人，会用一种相当反常的方式界定现实，并且活在自己认定的真实之中。</p><hr><p>重新框定是在“一个后设真实”的层面上操作，我们力图指出的是，即使一个情境的客观条件远超出人们的控制，改变仍是可能发生的。逻辑类型理论再度使得我们能将这个想法更严谨地概念化：<strong>如前面所提，种类是具有特定的共通特质的成员或所有项的集合体，但一种既定种类中的成员甚少只属于一种种类。一名成员可以是不同种类的一个构成分子。</strong>因为种类并不是一个可触摸的确实客体，而是概念，是人们心灵所建构出来的。一个红色小木块可以被当成是属于所有红色物体之种类的一分子，同时也是块状物体或木制物体的一分子 。</p><h4 id="如何重新框定"><a href="#如何重新框定" class="headerlink" title="如何重新框定"></a>如何重新框定</h4><p>耐心阅读的读者们，现在你们可以了解重新框定是一种达到“第二序改变”的技术，用最抽象的说法：<strong>重新框定强调将一个客体（事物） 的种类成员改变成另一相等有效的种类成员；或者说，将这一新的种类成员引进我们的概念中，并使我们能用这一种新的观点去理解事物。</strong>在这里，我们再次地拒绝去问“为什么会这样”的传统企图，而来看看重新框定涉及了哪些人类的经验：</p><p>1.我们对世界的经验是建立在我们将所知道客体（事物）分成不同的种类之上的。这些种类是人们在心理上建构出来的，所以人们建构出来了一整套现实的秩序，而这些秩序并非客体本身所具有的。种类的形成不只是基于客体（事物）的物理属性，而且决定于这些事物对我们的意义及价值的程度。</p><p>2．一旦某一客体被人们概念化成为一既定种类的一个成员，人们便很难把它视为同时属于另一种类的成员。这一客体的种类成员就被称为“实体”；因此，任何人若将这一客体视为或当成另一种类的分子，这个人不是疯子就是坏人。更进一步地，由这一简化的假设往前推进到另一简化的假设——执着固定在这一对“实体”的假设，不只是健康正确的，同时是“诚实”、“真诚”的——那么那些不这样来界定实体的人则是不诚实、不真诚的。“我不能玩游戏”是当这些玩着“不玩游戏”的游戏者，被另一种可以取代自己原有观点之种类成员威胁或对抗时，最常使用的辩解理由。</p><p>3.是什么使得重新框定成为达成改变的有效工具呢？一旦我们觉知到另一种类成分后，便无法轻易回到原来的格局或是先前对“实体”的设定之中。就如同有人对你解释过“9点问题”的解决方法后，你就不可能再陷回到先前的无助状态之中，尤其是我们先前的对于找到解决方法的可能性的渺茫无助感。</p><blockquote><p>在数学“博弈论”（Theory of Games）中看到和我们的论点极为相似的结论是不足惊讶的，因为规则的觉察（rule awareness）在博弈的结果中扮演了决定性的角色。由相似的前提开始，奈杰尔·霍华德（Nigel Howard）提出了一个他称之为“存在主义者定理”（existentialist axiom）的一种博弈论模式。他指出：“如果一个人开始‘知道’有关自己行为的理论后，他便不会被它束缚住，而能够自由地选择不再服从它。”，而且“……一个意识清晰的作决定者总是可以选择预测自己行为的任一理论，我们可以说他总是能够‘转化’自己行为中的理论。这的确是切实的，我们认为社会—经济理论失败的原因，至少有一部分是因为当某些统治阶级的成员，开始觉察到这一理论对自己利益的影响后，为了他们自己的利益，便选择不再遵循过去他所相信的对自己行为规约的理论。”</p></blockquote><p>成功的重新框定需要将当事人的观点、期望、理由及假设都纳入考虑。简而言之，需要一个能让问题改观的概念架构。埃里克森提出他解决人类问题的最基本的规则就是：“就地取材，利用病人所告诉你的！”</p><blockquote><p>举例来说，悲观主义者习惯性地涉入一个人际关系的“游戏”。在这场“游戏”中，他先引诱出别人的乐观观点，当他成功地做到这点时，他就以变得更悲观地来挑战他人的乐观主义，然后乐观主义者可能再重复与先前的尝试或是选择放弃。当他人“放弃”时，悲观主义者“赢”了（虽然事实上他把自己输掉了）。但一旦对方转而变成比悲观主义者更为悲观时，上面的这个模式就彻底地改变了，因为作为一个特定群中的一分子，悲观主义者不再和相对立分子（即乐观主义者）相结合。在过去，这两个对立项的结合维持了“群”的不变性。现在，第二序的改变在一个全然不同于“组合规则”的引导下产生了。借用悲观主义者自己的语言（即他的悲观论），这一改变得以达成。</p></blockquote><h3 id="改变的实践"><a href="#改变的实践" class="headerlink" title="改变的实践"></a>改变的实践</h3><p>遵循前述原则来处理一个问题时，我们形成和应用了包含下列四个步骤的一个程序：</p><p>1．以具体的词语清楚地界定问题；</p><p>2．探究截至目前为止已企图运用过的解决对策；</p><p>3．对想要达成的具体改变有一个清晰的定义；</p><p>4．形成与执行一个能产生这一改变的计划 。</p><p>要解决一个问题首要的条件是，它必须是一个“问题”。这么说的意思是指：将一个模糊陈述的问题转换成具体词句的过程，能使我们<strong>分辨“假性的问题”和“真正的问题”</strong>。</p><p>对假性问题的案例而言，澄清与阐明问题并不等于解决之道，只是将抱怨或不满先予以拆解，以免它模糊化了真正的问题。不可否认，问题被澄清之后，一个人有可能将面对一个无法可解的困难，还得学习如何与这一困难共处。</p><p>第三个步骤要求的是一个可被具体界定及实际达成的目标，这是对问题解决者的一种安全防护措施，以免问题解决者被困到错误解决之道后，选择了“妥协”而非“解决”问题。</p><p>如前所述，当我们聆听许多人对他们所想要的改变进行描述时，无非都是听起来有意义但实际上却是无用的名词，例如，他们想要更快乐一些或是和配偶的沟通好一点、减少生活中的担心，等等。这些“目标”非常模糊以至于不可能达成。如果我们要求对方明确的回答：“要特别发生什么或停止发生什么”，因而可以较快乐或沟通好一些时，他们通常表现出失落的样子。这一种困惑的存在，主要并不是因为他们只是单纯地找不到问题的答案，而是因为他们提出了错误的问题。恰如维特根斯坦50年前所言：当“答案”不能被表达时，它的问题也同样不能被陈述表达。除了去寻求“对的或恰当的问题”以及用具体的词语界定目标之外，也要对改变的过程设定一个时间的限制。我们完全同意那些主张“疗程的时限可以增加成功机会”的治疗者，相对的，那些采取长期开放时限的治疗者时常拖延疗程，直到病人因领悟到会是无限长的治疗而中途退走。我们发现，当病人能同意为自己设定一个具体目标时（不论这个目标对他而言是大或小），他就可能同意为疗程设定一个时限；在我们的中心里，最多实行10次咨询。</p><p>第三步的完成带领我们迈入第四步。前三个步骤是解决问题必须具备的三个初步条件，在许多案例中，它们可“快速地达成；而改变的实际过程则是在第四步才发生。</p><p>另一通则在前面的几个实例中也已清晰地讨论过：“悖论”在问题解决过程中所扮演的重要角色和它在问题形成中的重要性是一样的。</p><p>所有人类的问题皆包含了“无可逃避”的这个元素，否则它们就不会成为问题了，特别是对于那些通常被称为症状问题的案例。再次以“失眠”为例：当他努力迫使自己入睡时，他使自己陷入了一个“做得自然”的悖论中，那么，我们建议要应用一种自相矛盾的方法来处理失眠现象，就是“强迫自己保持清醒”。这只是一种较复杂的方式来说明我们借此“命令”他的症状，亦即让他积极主动地“从事”这件事，而不是对抗和战斗。“症状的药方”（symptom prescription），或是以较广的、非临床的说法，即所谓的“经由悖论而产生的第二序改变”——就我们所知，毫无疑问的是问题解决最优雅的形式。</p><blockquote><p>你可以借有矛盾来解决悖论:既告诉他不要怎样怎样，本意其实是想让他怎样的。</p></blockquote><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>在典型的人类冲突情境中，事物愈变愈不变；相反的道理同样存在：事物看来一成不变，但事实上它们却改变了。</p><p>让我们由一个不太常见的实例开始，这个例子可以清楚地说明前一章所提的四个步骤。</p><p>1.问题</p><p>一对年轻的夫妻来寻求婚姻治疗，因为这位妻子感觉自己无法再忍受丈夫对父母过度的依赖与顺从（他是家中的独子，30岁，事业成功，经济独立）。这位丈夫也同意妻子他们之间的问题界定，但他表示已看不到有什么方法可以解决这个问题。他接着解释，他的父母不只照顾他的每一个需要，也从不吝于给予他各种形式的资助（金钱、车子、衣服、昂贵的教育、旅游等）。他表示自己对父母额外的赠礼深感亏欠，但是他知道如果拒绝父母这种无所求的资助会严重地伤害他们，因为“无所求的给予”，正是他的父母认定“好的父母”应该做的。他的父母对他选择的结婚对象并不满意，但是这个婚姻立即使得父母有了介入儿子生活的合理化理由。他们帮年轻的小夫妻选定了住处，并为他们付了头期款，即使小夫妻表示自己比较喜欢小一点、便宜一点的另一区的一栋住所。室内装潢的所有决定也是父母做主，甚至包括花园中要种植哪些植物。更进一步，他们主动购置了非常昂贵的家具，以至于小夫妻根本没有机会依自己的喜好来安置他们的家。</p><p>这对住在五百英里之外另一个城市的父母，每年四度造访儿子与媳妇，每次停留三周。这种探访对小夫妻来说是一件十分可怕的经验。在这三周内，父母完全掌控了家居生活；媳妇被驱离出厨房，婆婆要掌厨并购置了堆积如山的杂货；她开始清洗家中任何可以清洗的东西，并重新安置家具摆设，公公则负责清洗与修理两部车子及庭院的除草与整理工作。当他们四人一起外出时，一定是公公支付所有的花费。</p><p>2.企图达到的解决之道</p><p>这对年轻的夫妻表示他们已经黔驴技穷了，试尽各种方法都无法建立最基本的独立性，即使是以最温和的方式来护卫自己对抗父母的专制，都会被父母解释成不知感恩的信息，进而引发年轻的丈夫深层的罪恶感与妻子无能的愤怒。这些解决问题的企图也导致一家人在公开场合中陷入某种困窘可笑的局而，例如，婆婆和媳妇要求超市收银员拒收另一人而收自己的付款，或是当侍者送上账单时，父子在餐厅中当众争吵。</p><p>为了减轻歉疚感与负债感，年轻的夫妻也试过当父母结束三周造访回去时，赠送名贵的礼物，但这一举动只会带来对方邮寄更昂贵礼物的动作。当然，他们又觉得必须将父母赠与的礼物公开陈列在家中，虽然他们厌恶每天都看到这些礼物。这对年轻的夫妻愈努力试图掌握自己少许的独立性时，这对父母就更卖力地“帮助”他们，所以这四个人陷入了典型的“原地踏步”的僵局。</p><p>3.目标</p><p>在这个案例中，形成一个具体目标的困难工作，反而较容易达成。年轻的夫妻希望父母停止以对待孩童的方式对待他们；他们希望即使在父母来访同住时，也能拥有为自己作决定、选择自己生活方式的权力；在同时拥有自主独立权利时，也不至于有伤害及疏离年老父母的罪恶感。</p><p>不过，以设计出一个有效介入方法的目标来说，上述的目标形式仍然太过一般性。因此，我们进一步地要求这位丈夫说明，对他而言，什么特别的事情的发生是可以代表目标足以达成的证明。这位年轻的丈夫立即表示，只要他父母告诉他：“你现在长大了，你们两个人要自己照顾自己，不要期待你母亲和我还会不时的宠爱你。”这一个陈述引导我们将父亲态度的明确改变视为治疗的目标。</p><p>4.介入方法</p><p>经由前面的信息，我们十分清楚的是，任何介入方法若要成功地实行，一定要以这一对父母所能听懂与理解的“语言”进行；也就是要以做一对“好父母”的重要性的观点来和他们沟通。</p><p>当我们要推动介入计划时，距离这对父母再次造访小夫妻的日子已不远，所以我们告诉小夫妻以下的做法：因为在上一次父母造访之前，他们尽全力把自己能做的工件，例如，清洁房屋、修理物品等，全部先做好了，所以这一次他们要反其道而行，也就是说，这一次他们在父母来之前的几天就停止各项清洁工作；任由脏衣服堆积如山、庭园杂草丛生、不添购食品杂物、冰箱几乎空无一物。房子里任何损坏有待修理替换之处，例如，该换的灯泡，都暂时不去修。他们不要去阻止父母为自己支付各项账单，而是要安静地等待父母为自己支付所有的开销。在家里，妻子就让脏碗盘堆积在厨房中，而且期待婆婆会去洗碗；丈夫则在父亲到花园中清洗汽车时自顾自地看电视。不但如此，每隔一阵子，他还由窗口探头出去视察父亲的工作进度：“嗨，爸，做得如何了？”除此之外，他们还要禁止任何告知父母自己有权力独立自主的企图。他们要接受父母为他们所做的每一件事，并在口头上一再致谢。</p><p>若不是这对年轻的夫妻对于他们的处境太沮丧，我们就还没有可能推销上述的方法给他们。因为在表面上看来，上述的方法是让他们远离解放而落入了原先想逃离的痛苦深渊。在这个实例中，这对小夫妻的确实行了前述的指导策略。在两周后的会谈中，他们表示，父母亲已缩短了造访的时间。在离去之前，父亲把儿子叫到一旁，以友善但肯定的语气表示，儿子媳妇都被宠坏了，年轻人由父母这里已得到过多的支持，现在该是他们像个成人一样自己要独立的时候了。</p><p>由上述的实例可以知道，我们并没有企图要将父母纳入会谈，也没有要去处理双方对问题歧义的观点，以求达成相互的了解。我们所做的介入，直指年轻夫妻解决问题的企图，而所设计的解决之道，则是允许父母继续扮演“好父母”的角色——这是一个他们永远不会放弃的角色。为了不至于过度纵容与溺爱这对小夫妻，做父母的应致力于与先前“照顾”相同重要的“断奶”这一父母角色。</p><h3 id="一些可供选择的策略"><a href="#一些可供选择的策略" class="headerlink" title="一些可供选择的策略"></a>一些可供选择的策略</h3><ol><li><p>化暗为明</p></li><li><p>宣而不隐</p></li><li><p>小题大做</p></li><li><p>贝拉克的巧计</p><blockquote><p>我们称选一种介入为“贝拉克的巧计”，它是源自于让·季洛杜（Jean Giraudoux）的一出戏剧《贝拉克的阿波罗》（L’Apollon de bellac）。这一戏剧描述了一位胆怯的女孩阿格尼丝（Agnes）紧张地坐在总裁办公室外，等待工作的面试，另一位同样在等待的男孩看到阿格尼丝的紧张便告诉她，应对这种情况最简单的方法就是告诉对方他很英俊。</p><p>阿格尼丝一开始觉得这个建议太不诚实了，但这个男孩说服她道：“如果你告诉某人他是英俊的，会让他看起来就真的好看一些，所以这不是诚不诚实的问题。”阿格尼丝于是就依照他的建议去做，结果在面试过程中一关又一关地顺利通过。最后，总裁由办公室冲出来：</p><blockquote><p>“阿格尼丝小姐，这个组织15年以来一直都充满了怀疑和猜忌。可是现在，就在今天早上，每一件事突然都改变了！我们的会计经理过去像一只狗似的怀疑每一个人，如今却变得和蔼可亲起来。连一向拘谨保密的副总都在主管会议中谈笑风生。上帝知道这是为什么吗？……”</p></blockquote><p>这位总裁也因阿格尼丝对他的称赞而改变了。稍后，好争辩的总裁夫人来到办公室时，总裁对她说称赞男人英俊的女人自己也会更得漂亮的结论：</p><blockquote><p>“崔西（总裁夫人），你有没有想过，上帝干吗要创造女人？他不会用了男人的肋骨创造女人来折磨我们！女人之所以存在就是要让男人觉得自己是英俊的。那些懂得称赞男人的女人是最美的女人，正因为阿格尼丝是个美丽的女人，所以才称赞我是英俊的男人。你老是说我丑，为什么？</p></blockquote><p>季洛杜所勾勒的是那种持续不断的人际纠缠，即一个环节扣上另一个环节再反馈回来。<strong>季洛杜同时借戏剧所特有的简化手法凸显出，一个非常小的改变可以导致整个模式的改变。</strong>戏中并没有什么真的美女俊男，那位年轻男孩说服了阿格尼丝相信他的说法，而其他人也愿意相信“美女与俊男”的存在。</p></blockquote></li><li><p>利用抗拒</p><blockquote><p>在我们的治疗工作中，有一个现象可能会令一般人觉得惊讶。不少人并不是为了解决问题的目的来接受治疗，他们参与治疗其实是为了攻击专家，以便证明他的问题是无解的。埃里克·伯恩（Eric Berne）曾指出类似模式“你为什么不——是的，但是”的心理游戏。按常理推论，在这个僵局中，当事人寻求协助的要求，引导别人给了一堆一般性的建议，使得他觉得没有得到有用的协助，所以一再提出要求。由人类沟通的作用历程来看，其他人都只在内容的层次上响应沟通中的关系层面，对当事人而言，这种互动模式通常会导致关系的痛苦和挫折，而帮助他的朋友在卖力协助之后也选择了放弃。</p><p>上述这种态度其实很容易受到影响或改变。为了使当事人愿意不再进入自己惯有的推理，我们只要问他：“你为什么应该改变？”这个问题所引导的逻辑和他一向准备好进入的逻辑是不同的。依据他的游戏的规则，毫无疑问的是他应该改变——事实上，这整个“游戏”都是建立在这个前提上。因此，“你为什么应该改变？”便不是这一游戏中所预设的一着棋；这着棋建立了一个新的游戏，他不能再玩老把戏了。</p></blockquote><p>​    </p></li><li><p>仁慈的破坏</p><blockquote><p>“仁慈的破坏”是处理父母和叛逆青少年关系典型危机的有效方法（它也适用于其他类似的情境），指控一方忙于控制住另一方的行为，但所做的却均告无效。大部分这类案例中的问题很容易界定：青少年不服从、不读书、不收拾自己的房间、没礼貌、晚归、快被退学了、和他的狐朋狗友鬼混、可能还吸毒、行为已逼近犯罪边缘，等等；而这种情境和互动模式已发展一段时间了。青少年成为成年人的成功转折，与其家庭关系中互动规则的改变是有关联的，这种规则的改变正是第二序改变。简言之，告诫一个八岁小孩“你照我说的去做，不然的话……”可以行得通，但对十四岁的青少年，这么说的话，他极可能回顶一句：“不然又怎样？”父母发现他们原来熟悉有用的管教方式不再有效。</p><p>按一般常识所建议的处理方式几乎都是第一序改变的方法，而它们只会导致亲子关系的僵局。父母亲可能会先试着说道理，但这一招是无效的，因为青少年推理的前提是不同的；之后父母可能施以薄惩，青少年成功的反抗；父母因而加重惩罚，这只会导致更强烈的反抗（依群论规则中的第四属性）；最后，当父母只有招来警察代为管训时，青少年的行为已清楚地发展成不可控制的行为了.</p><p>很明显地，父母解决问题的做法“创造”并“维持”了问题，可是这一人类冲突中典型的事实却常是人际互动中的盲点。做父母的不敢放松他们的管教压力，因为他们“知道”青少年的行为可能完全不再被自己控制；对青少年来说，反抗则是对抗父母不断逼近的要求以确保心理生存空间的唯一手段。这种互动的结果是典型断句的问题。旁观者则毫无疑问地看到，只要任一方退一步，另一方也就会退一步。</p><p>这个时候，我们给父母的处方就是应用“仁慈的破坏”方法。这个方法的第一步是采取一个低姿态，在父母对小孩坦承自己已无能力控制他的行为之后，对小孩说：“我们希望你11点回到家，但如果你不按时回家的话，我们也不能做什么。”在这个新的对待方式之下，青少年很快发现防卫或肯定自己的行为好像都不太有意义了，他不能公然反抗弱者。在第一局过后，父母开始在11点过后就锁上门窗上床睡觉，所以当小孩回家时，他只有敲门或按门铃。父母要假装已入睡而让他在门外等一阵子之后再去开门，而且开门前要以睡意浓厚的声音困惑地探问是谁在门外。在小孩进门后，父母表示对让他在门外冷风中等这么久十分抱歉，然后别再重复往常的唠叨，安静地回床继续睡觉。</p><p>第二天早上如果小孩不提的话，父母不要主动提起这件事，如果小孩提起的话，父母仍以抱歉的姿态出现。在青少年每一个不当行为之后，父母都跟着进行一个容易实行的破坏性行动：如果青少年没整理床铺，妈妈就帮他整理，但是故意丢一些饼干碎片在被褥里和床上。当小孩对此抱怨时，妈妈就抱歉地表示，自己一面铺床一面吃饼干，所以不小心掉到床上去的。如果他连自己的衣服都从不收拾，妈妈就要做一件愚蠢的错误，例如把糨糊倒到他的待洗衣物上，或是把盐当成糖放到他最爱吃的甜点里，或是当他正要出门赴约时，意外地把牛奶泼到他身上（我不知道这些日子是怎么回事——我老是一直出错！）。父母在任何时候都不要对这些行为出现指责的讯息，而总是表达出自己的歉意和混乱的心情。</p></blockquote></li><li><p>忽视的好处</p><blockquote><p><strong>一个人对另一个人付出注意力的程度是影响彼此关系性质的一个重要元素，同时也容易成为问题的来源。</strong>“注意”与“忽视”是一组对立面，当二者相抗衡对立时，无可避免地产生了“认同成员”，也就使得第二序改变不可能发生。如同前面列举过的实例一样，解决这一问题的方法在于前提的改变，而这一前提的改变看来是不合常理的。</p><p>例子：</p><p>一个年轻热情的女老师面对所谓的问题学生感到十分棘手而前来求助。除了一个8岁的学生之外，全班的学生都能进入她的教学，为了协助这名问题学生，女老师和学生父母开了一次会。在这次会议中，她了解到学生的父母已离婚，孩子和母亲同住，但母亲忙于工作，很少时间陪他，小孩常一个人在家。为了解决孩子生活中的不足与缺憾，女老师便给予该名学生大量的关注。但是她愈努力关注学生，效果反而愈差；成效不彰又诱使她更卖力付出。最后，整个情况发展成一个僵局，不只是学生的学业成绩落后，老师也开始怀疑自己的价值。她怀疑是不是自己的紧张影响了问题的发生？她费力地思索该怎样重整自己。</p><p>对治疗者而言，上面的描述已经很明显地说明了，这位老师的问题解决方法（对学生付出超乎寻常的关注）已经创造了与原始问题不同的另一个问题，而且维持了原有问题的存在。</p></blockquote></li><li><p>学习问题</p><blockquote><p>一位资质聪颖的硕士班研究生，对于如期缴交报告表现出很特别的一种困难。每次面对教授要求缴交报告，他都会习惯性地拖延到限期的最后一个周末。星期六起个大早之后，他就坐在桌前，面对一大摞纸和六支削尖的铅笔，却写不出一个句子，晚上他只浅睡几小时，又继续这种煎熬直到周日晚上。面对第二天的截止期限，他会在绝望中弄出几页报告（内容多半是抄自课本的）交差了事。他每次都认为自己一定会被刷掉，但是通常出乎意料之外地是，他都通过了。他对这个后果的归因是可能教授还算喜欢他，所以也就半睁半闭着双眼让自己过关，最后他居然只剩下再交两篇报告就可以毕业了。</p><p>就像是典型旅行者的例子，他发现“怀抱着希望旅行比到达目的地的滋味要好”，所以他进入了一种苦闷却又恣意延宕的状态。当他告诉我们他最近的问题时，已经两度申请延后缴交报告，而教授们也明白表示不可能有第三次延期了。在我们和他稍早期的接触中，就知道他对自己工作的质量有乌托邦式的要求。这种自我要求使得“拖延”成为他唯一可选择的遁逃战术。对他来说，开始“写作”是特别困难的，因为不论他怎样形成第一句的开场白，一定是不够好的，这就阻止了他去构思第二句。面对他必须缴交的这两篇报告，周遭关心的朋友建议说赶快写两篇能过关的报告就可以啦，但被他断然拒绝了。为了某一目的而去写一篇平凡无奇文章的主意是不被他接受的，虽然他也不得不承认在一阵体力高度压迫之后所完成的报告，通常也不过是很平常的一份东西。但是，对他而言，关键之处在于它是高度痛苦的诚实和辛苦工作的成品。</p><p>就这样，已经到了周五下午，他知道如果自己仍照往常一样工作的话，下周一早上是绝对交不出东西来的。终于，他愿意对他自己做一个妥协：他会用自己的方式写两篇报告中的一篇报告。至于另一篇呢？他可以努力地写一篇刚好达到及格水平的报告。更明确地说，他承诺我们在任何情况下都不要去更改第一个句子，如果自己在读这个句子时，觉得它超出了及格边缘的水平的话，他要在后面的文章中，故意创造一些缺点。</p><p>在下一次会谈时，他告诉我们他只花了不到两小时就写完了“我们”的报告，“他”的报告则花了整个周末。当教授发还报告时，“他”的报告得了C，而“我们”的报告得了B。他被这个结果击倒，困惑地表示这是一个什么样的世界，结果竟然是这样。读者应该可看清，在这个案例中，“再框定”是被情境条件本身所形成的；“时间不会停顿”这一无情的事实迫使他放弃自己的前提，而我们只是在尊重他“努力工作”的需要下，有效利用了这个紧急的状态。我们的一个做法对他来说是较不那么痛苦的，因为我们是以一种较不威胁到他的价值和生命理想的方式来“再框定”他的问题。即便如此，这一次的经验，<strong>用维根特斯坦的话来说，教会了他另一种游戏，他也就不再故作无邪状地继续玩他的老把戏了。</strong>与前面其他实例相同的一个改变是，我们只处理“冰山之一角”，再不选择去期求顿悟和追寻他的完美主义的起源及原因。</p></blockquote></li><li><p>对付乌托邦</p><blockquote><p>在所有人类问题的处理原则下，按“常理”出招总是最易招惹自我防卫反应的，有时甚至是最具破坏性的解决之道。企图纠正乌托邦者看到“现实”正是经由导入了一组循环成员，即常理对抗理想主义，从而维持和建立了一个“第一序改变”的僵局结果。这种结果则是再次肯定了“群”的不变性，再次提及老子说过的道理，正因为有乌托邦的存在，我们才能看到“寻常之道”。</p><p>寻常平凡的观点和极端观点之间相互依赖的关系，特别适用于处理精神疾病患者所执著的某些想法。恐惧症病人的疑心与害怕并不会因为你告诉他这里没什么好害怕的而被治愈，他的典型反应是：“如果这里没什么东西好怕的话，别人也不会一直试图要对我提出保证啊！”这正是一种跷跷板似的效果。</p><p>同样地，一个具有远大不现实生命目标的人不会轻易被说服而去修正和落实他的目标。对他来说，修正目标无疑是一种自我放弃，是一种痛苦而抑郁的生活；因此，面对乌托邦理想主义者，运用常理或寻常之道的这种语言是最不适宜和不易成功的。在前面的章节中，我们了解到对付悲观主义者的方法是胜过他的悲观，那么以此类推，理想主义者只有在被要求超越自己极限时才会迅速地放弃自己的理想。</p></blockquote></li></ol><h2 id="开拓的视野"><a href="#开拓的视野" class="headerlink" title="开拓的视野"></a>开拓的视野</h2><p>审视更大的社会系统，我们发现在人们生活的个人领域中，存在着反映结构性特点的僵局、争端升高和大型计划等常见的问题：</p><p>1.绝大多数的时候，一个社会系统成员之间的处境、阶层与利益的差异，无法导致一种建设性的互补及有效的合作，反而是持续和阻碍变化发生的僵局——每个人都不快乐但却无能改变。</p><p>2.只要各方人视他们自己是彼此分开和对称的，多多少少会导致冲突的迅速激化；这种倾向不论是在涉及两个个人、两个国家或种族时都是相似的。</p><p>3．正如我们在讨论乌托邦主义的效果时曾提及的，当人们或一个系统企图达到某些定义过高的目标、但却无法实行时，可能会导致相反方向的发展。</p><p>上述三类的问题有着愈来愈重要的意义。当这类失败只涉及个人的生命计划时，它对社会的影响还是很小的；但是当涉及大型政府计划时，就会导致巨额的浪费。针对这一点，我们所强调的是，“改变”是可以通过集中在微小、具体的目标上，通过缓慢的步骤来有效达成；这种做法要比远大、模糊、看来十分美好但却无人能达成的目标有效得多。</p><p>对于很多根本的社会问题的处理——例如贫穷、老年化与犯罪问题——人们习惯的取向是把这些困难分割成不同部分，赋予不同的诊断性的类别名称，这些问题都是各自不同的，也都需要极不相同的解决方法。接着，创造了庞大的物理与行政结构，以及一大群的科技专家，结果却产生了更多比以往深具无能感的个体。我们视此为对社会需要发生了反生产性质的一种取向，这种取向要求庞大的人群来支持那些只发挥了纪念碑作用的机构与部门的存在性。</p><p>另外一个实例是世界性的大问题——药、烟与酒瘾，这一类问题在目前主要是被生理社会的名词所界定的，相呼应的“矫治”方法则是药物治疗为主。但是，这种矫治方法的矛盾后果之一却是患者转而成为药物上瘾者。基于这一问题处理领域中的直接观察和我们所发展出来的原则，我们确信该类诊断与解决方法所建立有关上瘾的构成因素，使得问题的解决变成不可能的事情；毫无疑问地，会导致比以往更加严重地困扰着全世界。如果我们能注意到，是哪些错误的解决之道使得问题现况维持不变，它们便能处理得宜。</p><p>总而言之：我们认为对于问题形成和问题解决“变与不变”的基本观点，可以应用到各种人类问题的范畴。当然，我们知道，在人类介入行动掌控之外，存在着许多种类的条件和事件都在影响着变与不变：包括自然界的物理与化学历程、地壳的变动与地震、生物性疾病、特定意外事件及其他条件等。我们的观点并不是直接地应用于这些“自然”环境上，而是应用到人们“处理”特定社会环境的方式上。人类行为的世界最需要的正是我们以理解与技术去进一步审视它！</p>]]></content>
    
    
    <summary type="html">读书笔记</summary>
    
    
    
    <category term="读书笔记" scheme="http://example.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="读书笔记" scheme="http://example.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>我的天才女友</title>
    <link href="http://example.com/2022/10/31/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E6%88%91%E7%9A%84%E5%A4%A9%E6%89%8D%E5%A5%B3%E5%8F%8B/"/>
    <id>http://example.com/2022/10/31/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E6%88%91%E7%9A%84%E5%A4%A9%E6%89%8D%E5%A5%B3%E5%8F%8B/</id>
    <published>2022-10-31T02:10:10.000Z</published>
    <updated>2022-12-03T03:24:22.850Z</updated>
    
    <content type="html"><![CDATA[<h1 id="我的天才女友"><a href="#我的天才女友" class="headerlink" title="我的天才女友"></a>我的天才女友</h1><p>作者：埃莱娜·费兰特（Elena Ferrante，1943年1月1日—），意大利当代匿名作家，1992年开始发表小说，从2011年开始发表“那不勒斯四部曲”引起轰动，成为国际畅销书。2016年入选《时代周刊》评选的“当今世界100个最具影响力的人物”榜单。由于埃莱娜·费兰特从来不出席活动，没人知道他（她）的性别和真名。</p><p>那不勒斯四部曲是一套丛书，共有4册，分别是《我的天才女友》,《新名字的故事》,《离开的，留下的》和《失踪的孩子》。本书是其中之一。</p><h2 id="读后评价"><a href="#读后评价" class="headerlink" title="读后评价"></a>读后评价</h2><p>这本书写的很真实，真实的地方是对一个成长中的女孩的内心想法的描写，还有对女孩眼中世界的描写。通过书中的描写我深刻的认识到女孩的世界和男孩的世界是不一样的，我们应该更加包容这种差异:<br>在女孩的眼中世界是表象的，是可以被表现出来的，是一个个独立的事物构成的，是缺乏联系、缺乏前因后果的，她们的想法很容易跟着主观的事物走，也不会有很强烈的敌意，反而更多的是和身边的人发生联系。<br>在男孩（我）的眼中世界是串联起来的，每一个独立的事件都可能会引发出另一个事件，男孩更在意的不是一个事情的出现和真实物体的表现，而是事件或物体背后所展现出来的千丝万缕的联系。<br><strong>总结:</strong>女孩注重与身边人的联系，男孩注重事物之间的联系。</p><p><strong>莉拉:</strong>对书前半部分（莉拉与斯特凡诺的家人发生矛盾之前）来说“我的天才女友”指的是莉拉，因为莉拉有主见，有胆量，也足够聪慧，并且读了大量的课外书籍，可以说当时莉拉对世界的了解是超越埃莱娜的。</p><p><strong>埃莱娜:</strong>从莉拉结婚后来说，“我的天才女友”指的是埃莱娜，因为埃莱娜一直在学校进行学习，对自己不了解的事情进行求知，当她与莉拉生活的小镇的图书馆书籍被莉拉阅读完后，对莉拉来说这就是她所能了解的世界了；但埃莱娜有更多的可能，能了解更多的外面的世界的可能，后来在莉拉婚礼宴会上也有了自己对世界的思考，埃莱娜在宴会上认识到了“庶民”所看的世界的局限性，所以埃莱娜决定要割断与这个世界的联系。再回到本书的开篇:是有了孩子后的莉拉决定在她的世界里消失，我也可以进行猜想，结婚后的莉拉逐渐也看到了她所处世界的局限性（总的来说:是所处阶层的局限性），所以毅然决然也离开了她一直所处的世界，这个决定是莉拉在她成年并且有孩子了，生活也稳定了之后所做的决定，对莉拉来说这样的决定更需要勇气与卓识，也是此刻开始莉拉又变成了“我的天才女友”。反观埃莱娜:她所做的决定反而是在老师的努力下，家人的支持下而得到的一种自然而然的成长。总的来说埃莱娜与莉拉是有差距的。<br><strong>总结:</strong>“我的天才女友”是莉拉，而埃莱娜只是一个旁观者。莉拉是悲剧的，原因在于她的家庭（没有支持莉拉上学），但莉拉对知识的渴望也让人赞赏（把一家人借书卡能借的书都借了，这就是她能了解的世界的边界），我觉得莉拉是一个合格的“女友”人选，因为她有丰富的知识，也有勇气自己做出合理的决定，非常好。</p><h2 id="一些句子："><a href="#一些句子：" class="headerlink" title="一些句子："></a>一些句子：</h2><ol><li>我感觉他就像歌曲里描述的那样，不顾一切地爱上了莉拉：他想亲吻她，呼吸她的呼吸，任凭她处置，在他眼里，她是女性美的化身。</li><li>莉拉还是留在了那里，她受制于那个世界的生活方式，并认为自己已经获得了最好的安置，那个年轻男人是她在这个世界里最好的选择。</li><li>他向我展示了他的未来，以及他的思想根基。我听他说话，感觉我的头脑被点亮了，就像曾经的莉拉对我的启发一样，他对我说的话能帮助我成长。</li><li>“你知道什么是庶民吗？”“知道，老师。”在那一刻，我更清楚什么是庶民，要比几年前奥利维耶罗老师问我时更加清楚。我们就是庶民，庶民就是争抢食物和酒，就是为了上菜的先后次序、服务好坏而争吵，就是那面肮脏的地板——服务员正在上面走来走去，就是那些越来越粗俗的祝酒词。</li></ol>]]></content>
    
    
    <summary type="html">读书笔记</summary>
    
    
    
    <category term="读书笔记" scheme="http://example.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="读书笔记" scheme="http://example.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>你要如何衡量你的人生</title>
    <link href="http://example.com/2022/10/30/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E4%BD%A0%E8%A6%81%E5%A6%82%E4%BD%95%E8%A1%A1%E9%87%8F%E4%BD%A0%E7%9A%84%E4%BA%BA%E7%94%9F/"/>
    <id>http://example.com/2022/10/30/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E4%BD%A0%E8%A6%81%E5%A6%82%E4%BD%95%E8%A1%A1%E9%87%8F%E4%BD%A0%E7%9A%84%E4%BA%BA%E7%94%9F/</id>
    <published>2022-10-30T05:10:10.000Z</published>
    <updated>2022-12-03T03:24:22.849Z</updated>
    
    <content type="html"><![CDATA[<h1 id="你要如何衡量你的人生"><a href="#你要如何衡量你的人生" class="headerlink" title="你要如何衡量你的人生"></a>你要如何衡量你的人生</h1><h2 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h2><p>唯一让人有工作满足感的方法就是从事你认为伟大的工作，而通向伟大工作的唯一方法就是爱上所从事的工作。</p><h3 id="真正激励你的是什么？"><a href="#真正激励你的是什么？" class="headerlink" title="真正激励你的是什么？"></a>真正激励你的是什么？</h3><p>1976年，经济学家迈克尔•詹森和威廉姆•麦克林发表了一篇论文，它是过去30年来被引用得最多的一篇文章。这篇文章是关于激励论的，它的观点是：为什么管理人员不能按股东利益最大化这个原则来处理事情呢？正如詹森和麦克林所看到的一样，根本原因在于人们只会拿多少钱办多少事。要使这种状况得到转变，就必须让管理人员的利益与股东的利益保持一致。这样一来，如果股价上涨，管理人员拿到的薪酬也更丰厚，皆大欢喜。尽管詹森和麦克林没有专门主张要支付高额薪酬，但他们还是认为只有通过经济刺激，才能使管理人员关注他们希望关注的重点。</p><p><strong>这种激励论的问题在于，它们解释不了非常明显的异常现象。</strong>例如，世界上最勤劳的人在为非营利性机构或慈善机构工作一他们有些在你想象不到的艰苦条件下工作，如灾后重建地区、饥荒国家、遭受洪涝灾害的国家……他们如果在私营企业工作，原本可以得到更多，但是他们却选择了报酬非常少甚至没有报酬的工作。还有，人们很少会听说哪个非营利性机构的管理者抱怨员工没有工作动力。</p><p>你可能会把这些人都当成理想主义者，不考虑在内。但是，想—想军队，它也会吸引到杰出的人才，许多英雄把自己的一生都奉献给国家，为国家服务，身处险境的他们不会因为有风险就得到比别人多的经济补偿。</p><hr><p><strong>动因理论：</strong>它承认要得到想得到的需要付给人报酬，但物质激励不是真正的“动因”。人们做某件事真正的动因是：发自内心地想去做。这样，不论你身处顺境还是逆境，动因都将持续。</p><blockquote><p>在动因论方面，弗雷德里克•赫茨伯格也许是最有洞察力的作者之一，他在《哈佛商业评论》上发表了一篇有突破性见解的文章，专门讲述了这个理论。</p></blockquote><p>这个理论包括两种不同的因素：基础因素和动力因素。</p><ol><li>基础因素：包括地位、薪水、安全保障、工作条件、公司政策等，这些都很重要。<ul><li>有意思的是，赫茨伯格断言薪水是一个基础因素，不是动力因素。</li><li>在工作中，由于一些基础因素不能达到我们的预期，会让我们感到不满。</li><li>基础因素不好就会给人带来不满，所以你必须解决坏的基础因素，确保你不会对工作不满。</li><li>薪水是基础因素，必须不出差错，但你只能期望员工不会因为薪水对其他同事或公司感到愤怒。</li><li>如果工作的基础因素得到了改善，你不会立刻爱上这份工作，最多是不再讨厌它罢了。</li></ul></li><li>动力因素包括：获得成就感、学到东西的感觉、得到成长和进步、成为团队主力队员、取得有意义的成果，等等。<ul><li>真正让我们非常满意并爱上工作的因素是什么呢？那就是赫茨伯格研究中的“动力因素”。</li><li>赫茨伯格的理论指出，如果动力因素起作用了，你将会爱上自己的工作，即使赚不到大把的钱，你也会变得积极起来。</li></ul></li></ol><blockquote><p>我原来以为重要的是目的，现在才发现过程更重要。</p><p>你必须找到一种既能给你动力，又能使基础因素得到满足的职业。</p></blockquote><h2 id="周密计划与偶然机会的平衡"><a href="#周密计划与偶然机会的平衡" class="headerlink" title="周密计划与偶然机会的平衡"></a>周密计划与偶然机会的平衡</h2><p><strong>周密战略：</strong>如果你已经找到一种事业出路，既能为你提供先决条件的基础因素，又能提供动力因素，就适合做周密战略。你的目标要清晰，并且能根据现有经历知道是否值得为之奋斗。不要担心以后需根据意外机会做出调整，而要把心思放在如何最好地实现你精心制订的目标上。</p><p><strong>应急战略：</strong>如果你还没有找到这样的职业，你就要像新成立的公司一样找出路，此时需要有应急战略。也就是说如果你处于这种情况，可以采取另外一种生活体验，并随着从每次经历中学到的东西做出相应的调整，再很快进入下一轮体验中。不断经历这个过程，直到你的战略开始运转。</p><p>几乎所有战略都是周密战略和意外机遇结合的产物，关键是要走出去，并行动起来，一直到你明白将自己的聪明才智、兴趣和重点放在哪里。当你真正找到了适合自己的工作，就应该立即将应急战略转化成周密战略。</p><h3 id="“发现一驱动计划”能帮你做出最佳选择"><a href="#“发现一驱动计划”能帮你做出最佳选择" class="headerlink" title="“发现一驱动计划”能帮你做出最佳选择"></a>“发现一驱动计划”能帮你做出最佳选择</h3><p><strong>为了使你的战略成功，这个工具要求你说出需要得到验证的假设条件。</strong>这个过程是简•麦克米伦和瑞塔•麦格拉思创造出来的，他们把它叫作“发现一驱动计划”，但或许我们把它说成“<strong>哪些假设条件需要得到验证，才能说明这个战略有效</strong>”会更容易理解些。</p><blockquote><h4 id="重新排列规划新项目涉及的典型步骤"><a href="#重新排列规划新项目涉及的典型步骤" class="headerlink" title="重新排列规划新项目涉及的典型步骤"></a>重新排列规划新项目涉及的典型步骤</h4><p>当一个有希望的新企划案被提出来时，首先应该做一番经济预测，但是不要假设这些预测是准确的，要承认这个环节的数据只是个大概数目。由于每个人都知道数据要够漂亮管理层才会开绿灯、批准项目的成立，因此你必须小心提防提案人员在数字上动手脚。</p><p>接下来，你还得要求提案小组列出一张清单，写上他们当初做预测时所根据的假设，然后问该小组成员：“如果要达到企划案上写的目标，必须证明那些假设为真？”并请他们依照重要性和不确定性列出这些假设：在最上方的应该是最重要但最难以确定的，最下方的则是最不重要但大抵可以确定的。</p><p>只有了解了所有潜在假设的相对重要性，才能给这个项目团队开绿灯，但不要按大多数公司的那种方式去做，而是要设法测试最重要的假设是否有效——让团队成员迅速以最少的开支证实最关键的假设是有效还是无效。</p><p>—旦公司清楚了起初重要的假设有可能被验证是真实的，就能根据情况做出更好的决定，最终决定是否投资。</p></blockquote><h4 id="在接受一项工作前"><a href="#在接受一项工作前" class="headerlink" title="在接受一项工作前"></a>在接受一项工作前</h4><p>在每次考虑更换职业时，你要先想想：需要被证实的最重要的假设条件是什么，要怎样才能对这些假设是否有效进行不昂贵的、快速的测试，从而确保你前面走的是一条现实可行的道路。</p><h4 id="为什么验证假设很重要"><a href="#为什么验证假设很重要" class="headerlink" title="为什么验证假设很重要"></a>为什么验证假设很重要</h4><ul><li>对假设进行验证可以提前知道选择是否正确。</li><li>可以避免浪费时间与精力。</li></ul><h2 id="你的战略与你所说的一致吗"><a href="#你的战略与你所说的一致吗" class="headerlink" title="你的战略与你所说的一致吗"></a>你的战略与你所说的一致吗</h2><p>真正的战略一无论是在公司还是在生活中一都是从大量与资源分配有关的曰常决定中产生的。在曰复一曰的生活中，你要如何确保自己是在朝着正确的方向走呢？这要看看你的资源都流到哪里去了。如果你的资源不是用在巳经决定了的战略上，那么战略就不太可能得到实现。</p><p>我们有资源(包括时间、精力、才干和财富），并试图用它们来扩大个人生活的“业务”范围，包括与配偶或其他重要人物之间的良好关系、抚养孩子成才、事业有成，还能为附近的教堂或所在社区做出贡献，等等。不幸的是，你的资源有限，而这些领域的“业务”都在竞相争夺你的资源。正如一个企业所遇到的问题那样，你该把你的资源用在哪项追求上呢？</p><p>怎样确保实施的战略是你真正想要的呢？那就看看你的资源流向哪里去了，我们可以通过资源配置过程来探究这个问题的答案。</p><h3 id="用心配置你的资源"><a href="#用心配置你的资源" class="headerlink" title="用心配置你的资源"></a>用心配置你的资源</h3><ol><li>在配置资源前，必须通过周密的筛选来决定哪个应该作为重点，但这是个艰难的过程——即使你正在做对你而言很重要的事，仍然会有人来分散你的时间和精力，只要你有多一分的精力或是额外的半小时，就会有很多人催促你把时间、精力放在他们认为该放的地方。有这么多人和项目希望得到你的时间和关注，你会感觉难以掌握自己的命运。这样有时会有好处，就是会出现偶然的、未预料到的机会，但有时你也会被这些偶然的机会带得远离目标轨道。</li><li>对于大多数人而言，他们面对的危险是会在无意中把资源放在能取得立竿见影的效果的活动上，这种现象经常出现在他们的事业当中。这些活动诸如：装运一批产品、完成一项设计、帮助一名患者、完成一单销售、上一堂课、臝一场官司、发表一篇论文、得到一些报酬、升职，等等，而这些活动往往与他们的目标没有关系，这些人也往往难以实现自己的目标。我认为，他们之所以在实现目标的过程中遇到麻烦，是因为他们没有正确地分配资源。</li><li>他们原本是出于一番好意——想给家庭和孩子提供最好的生活机会，但不知不觉中就把资源花在了从未料到会变成死胡同的某条小路上。他们总是优先做那些能立即带来回报的事，例如升职、加薪、发奖金，而不愿把时间花在长期的工作上，或是几十年都看不到回报的事情上，比如养育孩子成才。当他们立即获得回报时，又把这些回报花在自己和家庭追求高享受的生活方式上，如：买更好的车、换更好的房子、享受更好的度假。问题是，这些需求很快就会把个人资源配置的过程固定在原地不动——“我要花很多时间在工作上，不然就得不到升职；我需要升职，不然就……”</li></ol><h2 id="与亲朋好友的关系是你幸福的源泉"><a href="#与亲朋好友的关系是你幸福的源泉" class="headerlink" title="与亲朋好友的关系是你幸福的源泉"></a>与亲朋好友的关系是你幸福的源泉</h2><p>但是，生活中除了事业还有很多东西。你工作时的状态和花在上面的时间将会影响工作之外和家人、朋友在一起时的状态。就我的经验而言，卓有成就的人大部分都把大量精力放在工作上，而把很少的精力放在家里。因为投资时间、精力来教育孩子，或是加深与配偶的爱，往往短时间看不到明显的回报，这就使得我们过多投资在事业上，而减少对家庭的投资，这会让我们生命中最重要的部分缺少蓬勃发展的资源。</p><p>工作能给你带来成就感，但是与家人、好友培养出的亲密关系带给我们的长久幸福感相比，就会显得很苍白。</p><p>与家人、朋友之间保持长久的亲密和关爱正是我们最开心的源泉，是值得我们捍卫的。</p><p>不过请注意：当你认为家里一切都好，可以先放一放，暂时不用投资在这种关系上时，你就上当了。这将是个极大的错误。当这种关系出现严重问题时，通常都太晚了，来不及修补。也就是说，要建立牢固的家庭关系和亲密的朋友关系，最重要的是投资时间。这种关系表面上看似乎不需要投资时间，但实际情况却不是这样。</p><blockquote><p><strong>好钱和坏钱理论</strong></p><p>投资者把自己的资金投到一家企业的主要目标有两个，一是追求成长，二是获得利润。但在实际生活当中，实现哪个目标都不是那么容易的。深入研究创新理论的塔夫兹大学教授阿玛尔•毕海德在《新企业的起源与演进》一书中写道：“在所有最后能够成功的企业当中，有93%因为最初策略行不通只好放弃。”换言之，成功的企业并非一开始就照着正确的策略推进才成功的，而是最初策略失败之后，还有多余的资源可以尝试其他做法。反之，大多数失败的企业一开始就把所有钱投注在最初的策略上，就像把所有鸡蛋放在一个篮子里一样，发现策略错误时，已无法挽救或重新开始。</p><p>在事业刚起步阶段，你或许还不知道公司策略是否能够成功，你必须耐心等候公司成长，同时把目光放在获利上面。如此一来，就可以用最少的资金找到一个可行的策略，不至于花了很多钱才知道走错了路。在这种情况下投入的资金就是“好钱”在所有成功的企业当中，有93%的企业必须改变最初的策略，因此在最初策略投注的资金越多、越快，也就越容易把一家企业推到悬崖边。</p><p>1.资源多不见得是好事，更重要的是资源的配置。</p><p>2.对家庭的投资是我们生命中最重要的可以蓬勃发展的一种资源。</p></blockquote><p>虽然大部分人都有一个周密战略一要与家人建立充满爱的关系，与朋友建立深厚的友谊，但事实上，人们却投资在一个从未想过的生活战略上，以至于“相识满天下，知交无一人”。有的夫妻离婚了，而且有的人还离了一次又一次；家里的孩子对他们敬而远之，或者孩子被远在千里之外的保姆抚养，孩子和保姆、老人在一起的时间远远多于与父母在一起的时间……他们忽视了要投资这部分生活，而只有这部分生活才能给我们带来最永久的幸福源泉，可是我们无法让时光倒流。</p><p>潜力巨大的青年才俊最常犯的错误就是认为生活方面的投资可以排序来做。例如：“我可以在孩子还小、养育孩子似乎还不是那么关键的时候，将大部分精力投资在事业上。等孩子再大一点，开始对大人的事情感兴趣时，我就会把精力从事业上转移开，因为事业还会有它自己的原动力，到那个时候我就会重点关注家庭。”然而，到了那时候，游戏已经结束了。给孩子的投资需要在很早的时候就开始进行。比如，你必须给孩子提供能够历经生活挑战而生存下去的工具，而这需要在你意识到这些之前尽早开始做。</p><blockquote><p>有大量的研究表明，孩子出生头几个月的情况对其智力发展非常重要，这点在《干扰课堂》一书中就有记录。托德•莱斯利和贝蒂•哈特两个研究员研究了父母在孩子两个月到半岁期间对孩子说话的效果。研究员在非常仔细地观察和记录了父母与孩子之间的所有互动情况后注意到，人们平均每小时和婴儿说1500个单词。“健谈的”父母（通常接受过大学教育）平均每小时和孩子说2100个单词。相比之下，不爱说话的父母（通常接受教育也少些）平均每天只说600个单词。如果把婴儿出生后30个月内听到的那些词加起来，那么“健谈”父母家庭的孩子就听到了48,000，000个单词，相比之下，处于劣势地位的孩子只听到了13,000,000个单词。这项研究提出，孩子听人说话最重要的时候就是刚出生的第一年里。</p><p>莱斯利和哈特继续跟踪、研究这些孩子，直到孩子们读完书，结果发现对孩子说话的单词量——孩子出生后30个月内听到的单词量——与他们长大后的词汇表达、阅读理解、考试等方面的表现有着很大的关系。研究者通过观察还发现父母与婴儿之间有两种交谈方式。他们把其中一种叫作“商务语言”，如：“打个盹儿”“骑车兜风去”和“把牛奶喝完”，这些谈话都很简单、直接，没有丰富的内容。莱斯利和哈特认为，这种谈话对孩子认知的发展效果有限。</p><p>相比而言，另外一种交谈方式一父母面对面地对孩子说话，而且有的时候完全用成人的、复杂的语言，好像孩子也是成人之间交谈的一个参与者一样——对孩子认知的发展则会产生巨大的作用。研究者称这种丰富的互动交谈方式为“语言舞蹈”。</p><p>“语言舞蹈”的意思是一边闲聊，一边评论孩子正在做的事情，也评论大人正在做的或计划要做的事情。如：“今天你想穿蓝色衬衣还是红色衬衣啊？”“你觉得今天会下雨吗？”“还记得我不小心把你的瓶子放进烤箱里了吗？”还有以提问的方式，如：“要是……又怎样？”“还记得……吗？”“要是……岂不是更好？”等等，让孩子深入思考身边发生的事情，这样做将会对孩子产生深远的影响。</p><p>简而言之，当父母热衷于多和孩子说话时，孩子大脑里将增加很多得到锻炼和优化的神经突触。突触是大脑里的神经节点，它把信号从一个神经元传递到另一个神经元。简单地说，也就是大脑里突触之间的通路越多，就会形成越多的有效连接，以后的思维模式就会变得更好，理解问题就更容易、更快速。</p><p>这件事是非常重要的，因为出生头3年里听过48，000，000个单词的孩子，不是仅仅比听过13，000，000个单词的孩子在大脑里多3.7倍良好润滑的连接，而是能够使脑细胞成指数倍增长——通过与多达10,000个的突触连接，每个脑细胞可以与其他数百个细胞连接，也就是说，接触大量谈话的孩子几乎拥有不可估量的认知优势。</p><p>令人难以置信的是，这么小的投资，居然能带来如此大的回报。然而，很多父母认为，可以从孩子上学时再开始关注他们的学习成绩，但是到那时候，他们已经错过了帮孩子一把的大好机会。</p></blockquote><p>结论：</p><p>我真的相信与家人、朋友间的关系是人生幸福的最大源泉。这个道理听起来简单，但是就像许多重要投资一样，与家人、朋友的关系需要你不断去关注。在此期间会有两种力量对这种关系产生不利：</p><p>首先，你会习惯性地忍不住把资源投资到其他地方——投资到能够给你带来更快回报的地方。</p><p>其次，你的家人、朋友很少有人用最大声音叫你去关注他们——他们爱你，也想支持你的事业。</p><p>这两种力量加起来就会让你忽视了世界上你最在乎的人。</p><p>好钱和坏钱理论解释了这个现象：要建立和谐满意的关系就得从一开始做起。如果你不去培养、发展这些关系’他们就不会在那儿了。不会在你经历困境和挑战时支持你，也不会变成你幸福生活最重要的源泉。</p><h2 id="工作与生活"><a href="#工作与生活" class="headerlink" title="工作与生活"></a>工作与生活</h2><p>许多产品之所以会失败，是因为公司从错误的角度来开发产品。这些公司更多地关注于能卖给客户什么，而不是去考虑客户需要什么。真正的缺失就是没有去了解客户面临的和试图解决的问题。</p><p>人际关系也是一样：我们总是考虑自己需要什么，而没有考虑对他人而言什么是重要的。改变看问题的角度，对于改善你的人际关系是非常有效的。</p><ol><li><p>只有真正明白客户要完成什么工作的时候，即真正明白需要帮助客户完成什么任务时，项目才能开始启动。（找到顾客最需要的东西。）</p></li><li><p>如果你能够明白自己被雇用来做什么工作，不论是在专业上还是个人生活上，回报都将是巨大的。</p></li><li><p>许多建立在无私奉献基础上的婚姻之所以不幸，通常都是因为这种“无私奉献”——只是给对方自己想给的东西，他们通常会自认为这个东西应该是对方想要的，正如“亲爱的，相信我，你会爱上这个无线铱星电话”那样，以为这个电话是她想要的。</p></li><li><p>是的，我们可以为配偶做一切事情，但是，在我们寻找幸福的夫妻关系时，如果没有关注到对方最需要我们做的工作是什么，只会收获挫折感和困惑。即使夫妻两人都是从好意出发，彼此相爱，但还是会从根本上误解对方。我们每天的生活都是杂务缠身，相互之间的交流最后就变成关注对方正在做的事情了，我们是在自以为是地看待事情。</p></li><li><p>我深信，通向幸福婚姻的道路不只是找到你认为将会让你幸福的人，其实反过来说才是真理：通向幸福婚姻的道路是找到你想让她幸福的那个人，她的幸福值得你付出！我观察到如果是因为相互理解，做彼此要完成的工作而深深爱上对方，那么<strong>让关系变得牢不可破的途径就是为对方付出的程度。</strong></p><p>这个原则一做出牺牲（付出）能使承诺的关系更牢固——不仅对婚姻有作用，也同样适用于家人、密友、组织，甚至文化和国家。</p></li></ol><h2 id="你的孩子还是你的么"><a href="#你的孩子还是你的么" class="headerlink" title="你的孩子还是你的么"></a>你的孩子还是你的么</h2><p>我们都知道为孩子提供好机会的重要性，父母们似乎更关注为孩子创造他们当年没有得到的机会。出于美好的意图，我们将孩子交给教练和老师教导，以增长他们的知识，我们相信老师们会为孩子的未来做最好的准备，但是以这种方式帮助孩子要付出非常髙的成本。</p><blockquote><p><strong>戴尔外包带来的悲剧</strong></p><p>在过去的10年里，戴尔是世界上最成功的笔记本生产厂商之一，然而很少有人知道，戴尔成功的原因之一是有一家来自台湾的、出色的零部件供应商一华硕。</p><p>戴尔在20世纪90年代取得了巨大成功。</p><p>第一，它的商业模式具有突破性——它以制造简单的入门级电脑起步。这种电脑的生产成本很低，主要通过邮寄和网络销售，随后戴尔将眼光投向高端市场，生产一系列更加高端的电脑。</p><p>第二，戴尔提供定制产品的服务，消费者可以自行选择电脑部件，戴尔则负责在48小时内完成组装并发货，这是戴尔让消费者印象深刻的地方。</p><p>第三，戴尔努力提高资产的运用效率，争取利用每一美元的资产创造更多的收入和利润，这正是华尔街推崇的理念。</p><p>这三个充当灯塔角色的战略帮助戴尔以不同寻常的方式取得了成功。</p><p>有趣的是，正是来自台湾的华硕才使戴尔取得了战略性增长。与戴尔一样，华硕在开始时向戴尔供应简单可靠的电路，并收取比戴尔自己生产的成本更低的费用。</p><p>在这种背景下，华硕向戴尔提出一个有意思的建议：“我们为你们提供的电路表现良好，计算机的主板也由我们来提供吧！制作主板不是你们的特长，而是我们的专长，我们可以使成本降低20%。”戴尔的分析家意识到将主板交给华硕生产，不仅可以降低成本，还可以从资产负债表上去除所有与生产主板相关的资产。</p><p>华尔街的分析家们时刻关注着反映资产运作效率的财务指标——RONA,即净资产收益率。对于生产型企业，净资产收益率由收入除以净资产得来。因此，一个企业可以通过增加分子中的收入，或者减少分母中的净资产来使自己看起来盈利较好。增加分子很难，因为它需要销售更多的产品，减小分母则相对容易，因为你只需要将一些流程外包出去。这个比例越高，就会被认为越有效地运用了资产。如果戴尔将一些流程外包出去后仍可以向消费者销售同样的产品，那么它就可以提高自己的净资产收益率。“这是个好主意，”戴尔回答华硕，“你们可以替我们生产主板。”</p><p>更有趣的是，这一协议也使得投资者更加看好华硕，它用自己现有的资产实现了销售的增长。两家公司的情况看起来都变好了。</p><p>根据协议进行重组后，华硕又建议戴尔：“我们在主板生产中表现这么良好，为什么不让我们帮你们组装电脑呢？组装电脑并不是你们成功的原因，我们可以将你们剩下的生产用资产从资产负债表中去除，并且能够降低20%的成本。”</p><p>戴尔的分析家再次认为这是双赢的计划。由于承揽了更多业务，华硕的净资产回报率也提升了，因为它的分子，即收入增加了。将制造过程外包出去，也提高了戴尔的净资产收益率——不是通过增加收入，而是从资产负债表中清除资产，即减小分母的方式来实现的。</p><p>这个过程并没有停止，戴尔又继续将其供应链的管理以及电脑的设计外包出去。至此，除了品牌之外，戴尔将所有个人电脑业务都外包给了华硕。戴尔的净资产收益率变得非常高，因为它只剩下整个业务中与消费者环节有关的资产。</p><p>不久后，华硕注册并发布自己的电脑品牌。</p></blockquote><h3 id="“资源、应用流程和行为价值取向”模型"><a href="#“资源、应用流程和行为价值取向”模型" class="headerlink" title="“资源、应用流程和行为价值取向”模型"></a>“资源、应用流程和行为价值取向”模型</h3><ol><li>对于孩子而言，“资源”是指孩子得到的或者获取的经济和物质资源，他的时间和经历，他的知识、天分、人际关系以及过去学到的经验。资源是决定他们能做什么、不能做什么的第一个因素。</li><li>第二个决定孩子能力的因素是“应用流程”，“应用流程”是指孩子们的思考方式，如何提出有洞察力的问题，如何面对困难和挑战，如何解决各种问题，如何与他人合作等。还包括孩子们利用他的资源实现了什么，做到了什么，以及为自己创造了什么新的东西。与企业的情况一样，这个因素相对来说是无形的，但却在很大程度上影响孩子变成独一无二的人。</li><li>最后一项是孩子的个人“价值取向”。它与我们所说的人生中的选择倾向没有很大差别，包括学校、运动、家庭、工作以及信仰等。“价值取向”决定孩子们在生活中如何做决定，也就是在他的想法中以及生活中，哪些因素会排在最重要的位置，哪些是次要的，以及哪些是他根本没有兴趣的。</li></ol><h3 id="家庭的外包式悲剧"><a href="#家庭的外包式悲剧" class="headerlink" title="家庭的外包式悲剧"></a>家庭的外包式悲剧</h3><ol><li><p>有许许多多的家长放弃了培养孩子能力的环境和机会。</p></li><li><p>许多家长也犯了跟戴尔一样的错误，只关注孩子们获得的资源，比如知识、技能以及经验。跟戴尔一样，父母认为自己的每个决定看起来似乎都是有意义的，他们希望孩子们能赢在起跑线上，也相信为孩子提供的机会和经验可以帮助他们赢在起跑线上。但是，他们却没有让孩子们深入参与进去一没有有意识地培养孩子今后获取成功需要的应用能力。</p></li><li><p>父母的美好意图导致的最终结果就是：孩子们在成长过程中很少有机会担负重要的责任，也很少有机会能为自己或他人解决复杂的问题。“我不害怕面对这个问题，我相信自己能解决它”，这样的自信不是来自丰富的资源，而是来自完成某件困难且重要的事情。</p></li><li><p>对于家庭，外包的危害不仅仅在于使孩子失去培养自己应用能力的机会，更严重的风险是失去了我们的价值。</p><blockquote><p>曾经由家庭成员完成的工作被外包出去后，孩子们的生活出现了更多空闲，这些空闲被许多活动所填满，而这些活动中往往没有父母的参与。也就是说，当孩子们准备学习时，陪伴在他们身边的经常是我们不了解的人。</p><p>希腊人留给我们一个非常有趣的难题，最早出自普鲁塔克的记载，名为“特修斯之船”。为了表示对创造了城市并俘虏了弥诺陶洛斯（牛头怪）的崇敬，雅典人不断更换特修斯之船的配件以永久保存它，直到这艘船的最后一个部分被替换。</p><p>这个难题是：当最后一部分都已经被替换时，它还是“特修斯之船”吗？雅典人仍然把它称作“特修斯之船”，但它还是吗？</p><p>我要将它转换成一个类似的哲学问题：如果你的孩子从别人身上学到了价值取向，那他们到底是谁的孩子？</p><p>正在将越来越多父母应该承担的责任外包出去的时候，你就会失去越来越多为孩子们培养价值观的机会，这对孩子们来说也许是最重要的能力。</p><p>大多数父母都认为他们应该为孩子提供资源，你可以与你的邻居或朋友的孩子进行比较，你的孩子参加了多少活动，在学习什么乐器，在练习哪项运动，这是很容易测量并让你觉得开心的，但这种疼爱实际上却阻止了孩子们成为你所希望的人。</p><p>除了学习新技能，孩子们还应该有许多其他的事情。关于能力的理论告诉我们，孩子们需要被挑战，需要解决困难的问题，需要培养价值观。当你发现自己正在为孩子提供越来越多并没有让他们真正参与进去的经历时，你并没有在训练他们取得成功所需要的应用能力；如果你把孩子交给别人来提供所有的经验，这其实是将自己的责任外包，实际上你失去了将孩子培养为受人尊重和赞扬的人的宝贵机会。</p></blockquote></li></ol><h3 id="经验学校"><a href="#经验学校" class="headerlink" title="经验学校"></a>经验学校</h3><p>麦考尔理论：他认为管理能力是在生活中培养和塑造的。一个<strong>有挑战性的任务、一次领导项目的失败、一次新领域的任务，都是经验学校的“课程”。</strong></p><p>麦考尔的理论告诉我们，在经验学校学习正确的课程将帮助我们<strong>在所有情况下提高成功的可能性。</strong></p><blockquote><p><strong>让你的孩子多经历自己的生活</strong></p><p>回想一下你自己的生活，我敢打赌你一定参加过各种各样的经验学校的课程，有一些就像上述篮球队应对压力的课程一样，比其他课程更加困难。显然，如果你能在出现需要之前知道掌握哪些课程对你来说更重要，这将会对你十分有益。</p><p>对于父母来说，你可以找出许多小机会帮助孩子提前学习重要课程。如果你想到孩子要取得成功所需要的课程，并教他们从中学到正确的经验，那么你所做的事就与诺兰•阿奇博尔德一样。鼓励孩子们为高目标奋斗，如果他们没有取得成功，那么你需要帮助他们学习正确的经验：当你要追求的是伟大的目标时，有时不能实现是不可避免的。你应该要求他们自己爬起来，掸去身上的灰尘，然后再次尝试，告诉他们没有偶尔的失败就不能取得更大的成就。每个人都知道如何庆祝成功，但是你还应该在孩子们为力所不能及的目标而努力时庆祝失败。</p><p>这对于父母来说可能是件困难的事，我们的社会更注重于培养孩子的自信心，不让他们在任何一场比赛中打输，只因为他们付出了努力就称赞他们，但是从不要求他们思考是否能做得更好。从很小的年纪开始，许多参加体育比赛的孩子就开始期待奖牌、奖品或者参加比赛就能获得的丝带，而这些奖牌和奖品将被堆放在房间的角落，并且随着时间流逝变得毫无意义，孩子们没有从它们身上学到任何东西。</p><p>如果孩子没有面对艰难的挑战，或者没有面对失败，他们就没有培养起生活中所需要的韧性，那些不具备这种韧性能力的孩子在他们的职业生涯中遇到绊脚石时将会失败。</p><hr><p>父母帮忙并且每次都将该做的事情列成清单给孩子，也许会让事情变得更加简单，如果由父母操办所有细节，那么孩子们一定会玩得很开心，但是这就阻止了他们在实践中学习重要课程一领导力、组织能力以及责任感。</p><p>我们有机会帮助孩子学习生活中的课程，当然并不是所有的经验都是好课程。比如，许多家长都会遇到一种也许全世界家庭的晚餐上都会遇到的情况：一个孩子说他有一份报告或作业明天要交，但是他还没有开始做，而这份报告的分数很重要，父母都不希望他们的孩子得到很差的分数。这就引起了父母的紧张。</p><p>在这种情况下，父母该怎么做呢？</p><p>不仅会有许多家长推迟睡觉时间来让孩子完成他们的作业，一些家长甚至亲自帮孩子完成作业，希望这能帮助孩子得到好的分数。父母们是出于好意：他们希望高分能帮助孩子们保持自信心，他们甚至会想“如果我帮孩子完成作业，至少他可以睡个好觉，以好的状态面对明天的挑战”，或者是“我帮孩子解决了困难，我是一个能支持孩子的家长”。</p><p>但是，考虑一下你刚刚帮助他们的决定给他们上了一堂什么样的课？你给他们上了一堂“名著导读”课，教会他们如何在工作中走捷径，告诉他们“我的父母会帮我解决问题，不需要我自己解决，分数比作业本身更重要”。</p></blockquote><h2 id="家庭中那只看不见的手——家庭文化"><a href="#家庭中那只看不见的手——家庭文化" class="headerlink" title="家庭中那只看不见的手——家庭文化"></a>家庭中那只看不见的手——家庭文化</h2><p>家庭文化是父母与孩子共同价值取向的保证：</p><p>作为父母，我们都会有同样的担心——孩子总有一天需要面对各种艰难的抉择，而我们无法在他们身边帮助他们做出正确的选择。他们也许会跟朋友一起飞去一个遥远的国家，也许会在大学的考试中作弊，又或许他们需要决定是否去帮助一个完全陌生的人，去做很可能会影响这个陌生人一生的事。我们能做的只是希望我们对他们的教育足以让他们独自做出正确的选择。</p><p>但问题是，我们怎么做才能保证我们对他们的教育能达到这样的效果呢？</p><p>我们不能简单地认为只要制定家庭准则就足够了，还需要一些更基本的东西，而且要在孩子们需要独自面对选择之前的很长一段时间就开始。我们首先得帮助他们形成正确的行为价值取向，以便他们在面临选择时懂得如何去评估不同选择，从而选择正确的行为，而最好的培养孩子们价值取向的工具就是我们所营造的家庭文化。</p><p><strong>文化如何在一家公司中形成：</strong>一个组织的文化则是其内部取向与过程的独特组合，只要他们所选择的方式对解决问题持续有效一不一定要完美，只要行之有效一久而久之将形成特定的文化，并且成为公司员工在面临选择时遵循的规章或指南。</p><blockquote><p>重要的是理解如何去塑造一种文化，这样你才能使之朝着想要的方向发展。考虑这个问题的时候，我邀请你重温战略的定义过程。这其中有经过深思熟虑的计划，有意外出现的问题和机会，考虑到资源分配的问题，你需要把时间、精力和才能以最高效的组合方式进行配置，那么许多机会就不可兼得。以我的职业选择为例，成为华尔街日报记者是经过深思熟虑的计划，但是当其他机会——包括我现在选择的教师职业出现时，它就被我放弃了。然而，我庆幸没有允许周密战略决定我成为什么样的人。</p><p>你应当以类似的视角去考虑你要创造的家庭文化，孩子们喜爱的职业和兴趣爱好很可能完全不同，而你的家庭文化应当是欢迎这种多样性的。但是我也建议，对于家庭文化的基本方面则应该保持一致性而不应该使其具有多样性。处理好一致性与多样性将是每个人快乐与骄傲的源泉。</p><p>这需要时刻保持对与错的警觉性，对于家庭成员所做的任何事，都要设想一下如果他一直采取这样的做法会怎样，即使是像两个孩子打架一样简单的事也需要引起注意。当其中一个孩子哭着跑来向你告状时，你会如何反应？会不自觉地就去惩罚另一个孩子吗？会要求哭泣的孩子擦掉眼泪吗？会叫来另一个孩子，两个人一起惩罚吗？会告诉来告状的孩子他不应该参与打架吗？不论你做出何种反应，以后发生同样的事，来告状的孩子都会知道其后果是什么，他们也会逐渐认识到打架有什么后果。如果你一直都采取相同的处理方式，那么久而久之孩子的行为就会受其影响。</p><p>如果你对此不理不踩呢？当许多家长步入中年，而他们的孩子已经成长为青少年时，他们发现自己忽略了最重要的一项工作一作为父母的工作。孩子们在足够长的时间内没有得到引导和管教，他们的行为就会很快形成一种家庭文化，这时它将很难再被改变。</p><p>每位家长都希望他们抚养的孩子在没有监督的情况下也能做出正确的选择，而实现这一愿望最有效的方式就是创造一种正确的家庭文化。家庭文化将成为家庭行为的一种非正式但是强有力的指导方针。</p><p>当人们共同工作、解决重复出现的挑战时，就会逐渐形成标准，对于家庭也同样适用：当你第一次面临某个问题，或者需要跟其他家庭成员一起做某件事时，你都需要找出一个解决方法。</p><p>你不能仅仅控制孩子们的坏行为，还需要表扬孩子们的好行为。你的家庭更重视什么？是创造力、努力工作、企业家精神、慷慨，还是谦逊？你的孩子知道他们做什么能得到父母一句“干得好”的称赞吗？这就是文化的强大之处，它就像一台自动驾驶仪，重点是你要明白要使它有效地发挥作用，就需要对它进行适当的规划——首先你想要的文化需要在家庭中塑造起来。如果没有在家庭成立的早期就有意识地去塑造并巩固它，那么就可能会形成一种你不喜欢的家庭文化。教导孩子摆脱懒惰和无礼的行为，告诉他们你因为他们努力解决某个问题而感到骄傲，这实际上都是在塑造家庭文化。尽管对于父母来说，始终保持行为一致，并且当孩子做对某件事时给他们积极的反馈不是一件容易的事，但是文化就是在这种日常生活的互动中逐渐形成的，而且文化一旦形成，就几乎不可能再改变。</p></blockquote><h2 id="远离犯罪"><a href="#远离犯罪" class="headerlink" title="远离犯罪"></a>远离犯罪</h2><p>边际成本的理论同样可以应用在选择一种正确或者错误的行为：即如何做一个正直的人，并远离犯罪。它说的是：某件事“只做一次”的边际成本看起来是微不足道的，但是它的完全成本可能要高出很多。然而在个人生活中，我们很容易自然而然地、无意识地被忽略边际成本所误导。</p><p>通常总会有这样一个声音在耳边说：“我知道那是一般性的规定，大多数人不会去违反它，但是现在的情况下违反它情有可原，只做这一次，不会有什么影响。”我们可能会认为这种说法是正确的，因为一件错误的事只做一次，它的代价可能低得诱人，但是一次之后你就可能深陷其中，并且看不到这条路的尽头指向何方，也想象不到你将为这个选择付出多大的完全成本。</p><p>许多人都曾经这样说服自己：我们可以违反自己的规则一次，下不为例。就这样，我们为这些小选择做了辩护。所有这些事情在第一次发生时都不会被认为是改变人生的决定。边际成本总是很低的，但是每个这样的决定都有可能越滚越大，最终使你成为自己不想成为的人。也就是说，边际成本的考虑使我们看不到这仅此一次的行为真正需要付出的代价。</p><p>踏出走上错误道路的第一步，源于一个你认为微不足道的决定，当你做出许多会积小成大的决定后，就相当于做了一个大决定。直到你回头反省，你才能意识到自己已经踏上了一条什么样的路，导致你走到根本没有想过的终点。</p><p>避免人生中出现道德让步带来的后果的唯一方法就是坚决不让它<em>开始</em>。</p><p>面临选择时，想象你所做的每个决定都符合当初下定决心要永远坚持的原则，可以更容易阻止你做出最终让自己后悔的决定。</p><h2 id="如何确定你的人生目标"><a href="#如何确定你的人生目标" class="headerlink" title="如何确定你的人生目标"></a>如何确定你的人生目标</h2><h3 id="有效的企业目标包含三个组成部分："><a href="#有效的企业目标包含三个组成部分：" class="headerlink" title="有效的企业目标包含三个组成部分："></a>有效的企业目标包含三个组成部分：</h3><p>第一，我将它称为“画像”。通过模拟，一位伟大的画家在创作油画之前，常常将脑海中的图先用铅笔勾勒出来。一个企业的“画像”是它的关键领导和员工对企业在发展道路上最终形成的样子的想象。“画像”一词在这里十分重要，因为它说的不是员工在未来某天兴奋地发现企业已经发展成的样子，而是企业的管理者和员工希望在每个关键时刻企业被建设成的样子。</p><p>第二，企业的目标要发挥作用，需要所有员工对所描绘的“画像”拥有强烈的认同感。企业的目标不可能只停留在纸上，因为在发展过程中，需要做出取舍的时刻会不停地出现，无法预料，如果员工没有这样强烈的认同感，那么当一次次情有可原的情况出现时，企业的目标最终会走上岔路。</p><p>第三，它的标尺作用。企业的员工们可以以这一标尺为准则来评价自己的工作，将员工凝聚在朝着企业目标前进的道路上。</p><h3 id="我想要成为的人"><a href="#我想要成为的人" class="headerlink" title="我想要成为的人"></a>我想要成为的人</h3><p>给自己“画像”：</p><ol><li>明确最初的起点是我的家庭，对于你们中的大多数人来说也是一样的。我受益于强烈的家庭价值观和家庭文化。</li><li>生活与学习的经验是“画像”时的丰富源泉。</li><li>最后，确定自己的专业。</li></ol><p>忠诚于对目标的认同，找到正确的标尺（评价人生的标尺）：当许多人以总体加法统计的方式一比如人数、获奖文章的数量、银行里的存款等来衡量人生时，对我来说，人生中最重要的标尺却是每个我帮助过的个人，他们能够成为更好的人。（答案不唯一）</p>]]></content>
    
    
    <summary type="html">读书笔记</summary>
    
    
    
    <category term="读书笔记" scheme="http://example.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="读书笔记" scheme="http://example.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>影响力—顺从心理学</title>
    <link href="http://example.com/2022/10/29/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E5%BD%B1%E5%93%8D%E5%8A%9B/"/>
    <id>http://example.com/2022/10/29/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E5%BD%B1%E5%93%8D%E5%8A%9B/</id>
    <published>2022-10-29T09:10:10.000Z</published>
    <updated>2023-03-30T02:32:37.426Z</updated>
    
    <content type="html"><![CDATA[<h1 id="影响力—顺从心理学"><a href="#影响力—顺从心理学" class="headerlink" title="影响力—顺从心理学"></a>影响力—顺从心理学</h1><h2 id="概论："><a href="#概论：" class="headerlink" title="概论："></a>概论：</h2><p>人和动物一样，有一些对特定条件的反应模式。这些反应模式有什么用呢？它是在自然环境中一步步演化来的，依靠这些快速的反应模式可以减少人脑的使用，从而节约能量。而我们利用那些顺从于人脑的反应模式可以提高说服别人概率。</p><blockquote><p>哈佛社会心理学家艾伦·兰格和其他许多专家也相信：大多数时候，人类行为真的跟机械播放的磁带没什么两样。</p><p>英国著名哲学家阿尔弗雷德·诺思·怀特黑德（Alfred North Whitehead）就认为这是现代生活不可避免的一个特点，他断言：“<strong>文明的进步，就是人们在不假思索中可以做的事情越来越多。</strong> ”</p><p>本书中描写的大部分影响力武器都具备若干相同的要素，一是这类武器有能力激活一种近乎机械化的过程；二是只要掌握了触发这种过程的能力，人们就能从中渔利。而第三点则是，使用者能借助这些自动影响力武器的威力，这种武器就好像一根沉甸甸的大棒，只要用了它，就能让另一个人乖乖就范。</p></blockquote><h2 id="一些影响力的武器"><a href="#一些影响力的武器" class="headerlink" title="一些影响力的武器"></a>一些影响力的武器</h2><ol><li><p>一个众所周知的人类行为原则认为，<strong>我们在要别人帮忙的时候，要是能给一个理由，成功的概率会更大。</strong> 因为人就是单纯地喜欢做事有个理由。</p><blockquote><p>例子：</p><p>人们排队在图书馆里用复印机，她请别人帮个小忙，说：“真不好意思，我有5页纸要印。因为时间有点赶，我可以先用复印机么？”提出要求并说明理由真是太管用啦：94%的人答应让她排在自己前面。她也试过只提要求：“真不好意思，我有5页纸要印。我可以先用复印机吗？”这么说的效果就差多了。在这种情况下，只有60%的人同意了她的请求。</p><p>乍看起来，两次请求之间的关键区别似乎在于，前一次的请求里给出了额外的信息“时间有点赶”。然而，兰格又尝试了第三种请求，证明发挥作用的地方不在这儿。奥妙并非是说明什么原因的整句话，而在开头的那个“因为”上。</p><p>兰格的第三轮请求里并没有包含一个让人顺从的真正原因，只是用了“因为”，接着便把明显的事实又重复了一遍。她是这么说的：“不好意思，我有5页纸要印。我能先用复印机吗？因为我必须印点儿东西。”结果，差不多所有人都同意了（93%）——虽说这个请求里并没有真正的原因，它没有补充什么新的信息能说明他们照着兰格的话去做是合理的。</p></blockquote></li><li><p>活富裕的度假客购物的标准原则（也即“范式”）来指导自己买东西：<strong>一分钱一分货，价格贵就等于东西好。</strong> 许多研究表明，要是人们对物品的质量拿不准，经常会使用这一范式。</p><blockquote><p>人都是在“一分钱一分货”的教导中长大的，更何况，这条规则在他们的生活中一次又一次地应验过。过不了多久，他们就把这条规则提炼成了“<strong>价格贵=东西好</strong> ”</p></blockquote></li><li><p>人类在认知方面有个原理，叫“<strong>对比原理</strong>”。两样东西一前一后地展示出来，我们怎样看待其间的区别，对比原理是有影响的。简单地说，要是第二样东西跟第一样东西有着相当的不同，那么，我们往往会认为两者的区别比实际上更大。这样一来，如果我们先搬一种轻的东西，再拿一件重的东西，我们会觉得第二件东西比实际上更沉；而要是我们一开始直接就搬这件重东西，反倒不会觉得有这么沉。对比原理是心理物理学领域确立的，它不光适用于重量，还适用于其他各种感官知觉。聚会时，要是我们先跟一个非常有魅力的人聊天，接着插进来一个相貌平平的家伙，我们会觉得第二个人简直没劲透了——而他（她）其实没有那么索然寡味啦。</p><blockquote><p>例子：</p><p>假设有人走进一家时尚男装店，说自己想买三件套的西服和一件毛衣。如果你是售货员，你该先给他看哪样东西，好让他花最多的钱呢？服装店指点销售人员，要先给顾客看贵的东西。依照人们的常识，顺序应该反过来才对：要是人们买西服时就花了大把的钱，他恐怕不愿再多花钱买毛衣了。但服装商们是心知肚明的。他们完全依着对比原理来设计销售策略：先卖西服，因为顾客接下来买毛衣的时候，哪怕它再贵，价格跟西服一比，也显得不怎么高了。要是这顾客还想给自己的新西装买些配件（衬衣、皮鞋和皮带），同样的原理也适用。尽管对比原理的预测违背常识，证据却支持它。</p></blockquote></li></ol><h2 id="6个最基本的影响他人的原理"><a href="#6个最基本的影响他人的原理" class="headerlink" title="6个最基本的影响他人的原理"></a>6个最基本的影响他人的原理</h2><p>一致、权威、互惠、喜好、社会认同、稀缺。</p><h3 id="互惠"><a href="#互惠" class="headerlink" title="互惠"></a>互惠</h3><p>我们身边最有效的影响力武器之一——互惠原理 ，这条原理说，要是人家给了我们什么好处，我们应当尽量回报。</p><p>假设有位女性帮了我们的忙，我们应当也帮她一回；倘若有个男的送给我们一份生日礼物，我们应当记得在他生日时献上小小心意；要是有对夫妇邀请我们参加聚会，我们下次务必要记得邀请他们参加我们的。故此，依照互惠原理，我们有义务在将来回报别人的好意、礼物、邀请等。</p><blockquote><p>说起来，源自互惠原理的成熟的礼尚往来系统，甚至有可能是人类文化的一个独有特征呢。著名考古学家理查德·李基（Richard Leakey）认为：<strong>正是因为有了互惠体系，人类才成为人类。</strong> 他说：“由于我们的祖先学会了在‘有债必还的信誉网’里分享食物和技巧，我们才变成了人。</p></blockquote><h4 id="互惠的力量"><a href="#互惠的力量" class="headerlink" title="互惠的力量"></a>互惠的力量</h4><p>互惠原理是用作获取他人顺从的有效策略，原因之一在于它的效力实在是太强了。有些要求，要是没有亏欠感，本来是一定会遭到拒绝的；可靠着互惠原理，你很容易让别人点头答应。</p><blockquote><p>1978年11月，在圭亚那的琼斯敦，邪教组织“人民圣殿教”的头领吉姆·琼斯（Jim Jones）要所有居民集体自杀。绝大多数人都顺从地喝下了有毒的饮料，就这么死了。然而，有个叫黛安·路易（Diane Louie）的居民却拒绝服从琼斯的命令，她逃出琼斯敦，在丛林里躲了起来。她说自己会这么做，是因为先前在有困难的时候拒绝了教主琼斯的特殊照顾。当时她生病了，琼斯派人送来食物，可她没接，因为“我知道一旦他给了我这些照顾，他就完全控制我了。我什么也不想欠他的”。</p></blockquote><h4 id="互惠原理适用于强加的恩惠"><a href="#互惠原理适用于强加的恩惠" class="headerlink" title="互惠原理适用于强加的恩惠"></a>互惠原理适用于强加的恩惠</h4><p>早些时候，我们指出，互惠原理的威力大到了这样的地步：其他人，不管有多奇怪、讨厌、不受欢迎，只要先给我们点小恩小惠，就能提高我们照着其要求做的概率。然而，除了威力大，该原理还有另一个方面，它居然允许这种情况的发生：<strong>一个人靠着硬塞给我们一些好处，就能触发我们的亏欠感。</strong></p><h4 id="互惠原理可触发不对等交换"><a href="#互惠原理可触发不对等交换" class="headerlink" title="互惠原理可触发不对等交换"></a>互惠原理可触发不对等交换</h4><p>尽管它确立起来是为了促进伙伴之间的平等交流，但却也可以用来实现完全不平等的结果。原理要求，某一种行为需要以与其类似的行为加以回报。但这里面也有着很大的灵活性，别人最初给予的小小恩惠，能够让当事人产生亏欠感，最终回报以大得多的恩惠。正如我们所见，在互惠原理当中，最初让他人产生亏欠感的行为，以及缓解亏欠感的回报行为，都可以由最初的发起者来选择，这样一来，那些打定主意要利用互惠原理的人就能轻易地操纵我们，让我们完成一种不公平的交换。</p><p>还有另外一个原因：<strong>违背互惠原理，接受而不试图回报他人善举的人，是不受社会群体欢迎的。</strong> </p><h4 id="互惠式让步"><a href="#互惠式让步" class="headerlink" title="互惠式让步"></a>互惠式让步</h4><p>用互惠原理使他人依从要求行事，还有第二种办法。它比直接给人恩惠再索取回报的方式更为微妙，但从某些方面来看，它也更为有效。</p><p>互惠原理的一般性规则指出，要是有人以某种方式对我们行事，我们理当对他还以类似的行为。我们已经看到，这一规则造成的后果之一是，面对接受的善意，我们感到有义务要偿还；而这一规则带来的另一后果则是，倘若有人对我们让了步，我们便觉得有义务也退让一步。</p><p>互惠原理通过两条途径来实现相互让步。头一条很明显：<strong>它迫使接受了对方让步的人以同样的方式回应；第二条尽管不那么明显，但更为关键：由于接受了让步的人有回报的义务，人们就乐意率先让步，从而启动有益的交换过程。</strong> </p><p>由于互惠原理决定了妥协过程，你可以把率先让步当成一种高度有效的顺从技巧来使用。这种技巧很简单，一般叫做“<strong>拒绝—后撤</strong> ”术，也叫“留面子”法。假设你想让我答应你的某个请求，为了提高获胜的概率，你可以先向我提一个大些的要求——对这样的要求我保准是要拒绝的，等我真的拒绝这个要求以后，你再提出一个稍小的要求，这个要求才是你真正的目标。倘若你的要求设置巧妙，我会把你的第二个要求看成是一种对我的让步，并有可能感到自己这边也应该让让步，于是就顺从了你的第二个要求。</p><ul><li>“<strong>拒绝—后撤</strong> ”术对成功几率的提升：是原基础的三倍。</li><li>除了互惠原理，拒绝—后撤手法还借助了另外两点有利因素。我们已经讨论了头一点，也即知觉对比原理。跟其他原理不同，该手法的额外优势算不上真正的心理学原理，它只不过是一种请求顺序上的安排。让我们再做一次先前的假设：我想找你借5美元。我先请求借10美元，对我而言，这样做是稳赚不赔的。如果你同意的话，我得到的钱将是我所需的两倍；如果你拒绝了，我也可以让步到一开始就想要的5美元，而靠着互惠原理和对比原理的作用，这回我成功的概率将大大增加。</li><li>这可真是够怪的：<strong>拒绝—后撤手法似乎不光刺激人们答应请求，还鼓励他们切身实践承诺，甚至叫他们自愿履行进一步的要求。</strong> 这个手法到底有什么奥妙，能糊弄得人一再地上当受骗呢？要想知道答案，我们或许可以观察一下请求者的退让行为，即该手法的核心环节。我们已经看到，只要人们不觉得它是个一眼就能洞穿的骗局，让步便有可能刺激对方也退让一步。不过，让步举动还有一项我们尚未着手研究的、少有人知的积极副作用：对方会对这种安排滋生出更大的责任感和满意感。靠着这种甜蜜的副作用，拒绝—后撤手法推动受害者履行协议，痛快地答应之后的约定。</li></ul><h4 id="反制手段"><a href="#反制手段" class="headerlink" title="反制手段"></a>反制手段</h4><ol><li><p>抢先出手，不让请求者借用它的力量，我们便能避免跟互惠原理发生正面对峙。据此，拒绝请求者最初的善意或让步，大概可以让我们成功回避这一问题。</p><blockquote><p>副作用：</p><p>最主要的问题在于，最初碰到一个请求时，你很难判断它到底是出于真诚，还是打算利用你。要是我们总是戒备森严，碰到无意利用互惠原理的人向我们让步，或是施以好意，我们也就收获不了它能带来的果实了。</p><p>例子</p><p>女孩班上的孩子们在学校里组织招待会，欢迎自己的爷爷奶奶前来参观，她的任务是给所有进入学校操场的游客送花。她碰到的头一个男人看到她递花上来，立刻吼叫起来：“你自己留着吧！”女孩不知道该怎么办，再次拿着花朝他走过去，那人却厉声喝问她到底有什么企图。女孩无力地回答：“什么也不为，这只是一份礼物。”那人还是不信任地瞪着她，坚持说自己早就识穿了她的“把戏”，推开她走掉了。</p></blockquote></li><li><p>倘若别人的提议我们确实赞同，那就不妨接受它；倘若这一提议别有所图，那我们就置之不理。</p><blockquote><p>比方说，有人给了我们一个恩惠，我们大可以接受下来，同时认识到将来有回报他的义务。一旦我们确定最初的恩惠并非出于善意，而是一个顺从伎俩，那我们就不必受它影响了，该怎么做就怎么做。</p></blockquote></li></ol><h3 id="一致"><a href="#一致" class="headerlink" title="一致"></a>一致</h3><p>它其实很简单：人人都有一种言行一致（同时也显得言行一致）的愿望。一旦我们作出了一个选择，或采取了某种立场，我们立刻就会碰到来自内心和外部的压力，迫使我们按照承诺说的那样去做。在这样的压力之下，我们会想方设法地以行动证明自己先前的决定是正确的。</p><h4 id="为什么会有“言出必行”的倾向？"><a href="#为什么会有“言出必行”的倾向？" class="headerlink" title="为什么会有“言出必行”的倾向？"></a>为什么会有“言出必行”的倾向？</h4><p><strong>信仰、言语和行为前后不一的人，会被看成是脑筋混乱、表里不一，甚至精神有毛病的。另一方面，言行高度一致大多跟个性坚强、智力出众挂钩，它是逻辑性、稳定性和诚实感的核心。</strong></p><ol><li><strong>首先，和大多数其他自动响应方式一样，它为穿越复杂的现代生活提供了一条捷径。</strong> 只要我们对事情拿定了主意，死脑筋地坚持到底就能给我们带来一种分外难得的好处：我们再不用苦苦地思考这件事了。</li><li><strong>其次，机械地保持一致还有第二点吸引力，它更容易令人避免误入歧途。</strong> 有时候，我们逃避思考活动，不是因为它辛苦、要动脑筋，而是因为这么作了以后会招来严酷的后果。</li></ol><h4 id="一致的关键：作出承诺"><a href="#一致的关键：作出承诺" class="headerlink" title="一致的关键：作出承诺"></a>一致的关键：作出承诺</h4><p>一旦我们意识到人类的行动不可避免地要受保持一致的强大力量所指引，一个具有实际意义的重要问题就冒了出来：这种力量是从哪里来的呢？是什么东西按下了播放键，激活了难以抵挡的一致性磁带呢？社会心理学家认为他们已经找出了答案：<strong>承诺</strong> 。要是我能叫你作出承诺（也即选择立场，公开表明观点），我就帮你铺垫好了舞台，促使你不假思索地自动照着先前的承诺去做。只要立场站稳了，人就自然想要倔强地按照与该立场保持一致的方式去做。哪怕在作出最终决定之前已经有了一个初步的倾向，它也会让我们在这之后偏爱与之一致的选择。</p><p>一旦主动作出了承诺，自我形象就要承受来自内外两方面的一致性压力。<strong>一方面，是人们内心里有压力要把自我形象调整得与行为一致；另一方面，外部还存在一种更为鬼祟的压力，人们会按照他人对自己的感知来调整形象。</strong></p><blockquote><p>登门槛</p><p>这种以小请求开始、最终要人答应更大请求的手法，叫做“登门槛”。1966年，心理学家乔纳森·弗里德曼（Jonathan Freedman）和斯科特·弗雷泽（Scott Fraser）发表了一批令人吃惊的数据，社会科学家们这才首次意识到它是多么有效。这两位心理学家作了一次实验：派研究人员假扮成义工，到加利福尼亚州的一处居民区，当面向业主们提出一个荒谬的要求。</p><p>研究人员要业主们同意在自己的前院草坪上立一块公益告示牌。为了让业主们明白牌子是什么样子的，他们出示了一张照片，照片上的房子挺漂亮，可房子正面的视线完全给一块硕大的“小心驾驶”告示牌挡住了。出于可以理解的原因，该地区的绝大多数业主都拒绝了这个要求（只有17%的人答应下来），但有一组业主的反应却分外积极。这一组中，76%的人都答应把自家的前院贡献出来。</p><p>他们答应得如此爽快，主要原因跟两个星期前发生的一件事有关系：他们对保障驾驶员安全作了个小小的承诺。当时，有一位义工到了他们家，请他们同意在院前立一块三英寸大小的警示牌，上面写着“做一个安全的驾驶员”。这个要求实在太微不足道了，几乎所有人都答应了下来，但它给人造成的影响却极为惊人。由于几个星期前毫不知情地答应了一个有关安全驾驶的小小要求，这些业主对另一个分量重得多的要求居然也照单全收。</p><p>弗里德曼和弗雷泽并未止步于此。他们重新找了一组业主，尝试一种稍有不同的程序。</p><p>起初，业主们收到一份请愿书，要他们签名支持“保护加州的美丽环境”。显然，差不多人人都签了名，因为维持一个州的美丽环境，跟提高政府工作效率、进行合理的产前保健一类的议题一样，是不会有人反对的。过了大概两个星期，弗里德曼和弗雷泽派了一名新义工到这些家庭，请居民答应在自家前院草坪上立一块硕大的“小心驾驶”的告示牌。从某些方面来看，这些业主的反应是本次研究里最出人意料的。将近一半的人都同意在自家院子里设立“小心驾驶”的告示牌，尽管几个星期之前，他们作出的小小承诺跟小心驾驶毫无关系，只是另一项公共服务议题：保护环境。</p><p>起初，连弗里德曼和弗雷泽也被这样的研究结果弄糊涂了。为什么在支持保护本州美丽环境的请愿书上签了名，就可以让人乐意去做一项全然不同、分量更大的善举呢？经过思索，在排除了其他原因之后，弗里德曼和弗雷泽提出了一种解释：签署保护环境的请愿书，改变了这些人对自身的看法。他们把自己看成了具有公益精神、履行公民职责的好市民。这样一来，等到两周以后，有人要他们履行另一项公益使命——竖起“小心驾驶”告示牌的时候，为了符合新塑造起来的自我形象，他们乖乖地答应了下来。</p><p>弗里德曼和弗雷泽的发现告诉我们，<strong>在接受琐碎请求时务必小心谨慎，因为一旦同意了，它就有可能影响我们的自我认知。它不光能提高我们对分量更大的类似请求的顺从度，还能使我们更乐意去做一些跟先前答应的小要求毫不相关的事情。</strong> 正是后面这种藏在小小承诺里的普遍影响力叫我甚感惊恐。</p><p><strong>倒也不是所有的承诺都会影响自我形象。要想让承诺达到这样的效果，必须满足一定的条件：它们得是当事人积极地、公开地、经过一番努力后自由选择的。</strong></p></blockquote><ul><li><p><strong>周围的人认为我们什么样，对我们的自我认知起着十分重要的决定作用。</strong>（因为这适用于一致性原理）</p></li><li><p>定下目标，把它写下来。不管你的目标是什么，关键是你定了这个目标，这样你就有了努力的方向。接着，把它写出来。把东西写下来，有种神奇的力量。所以，定下目标，把它写下来。等你达到了这个目标，再定另一个，也写下来。你会进步如飞的。</p></li><li><p>一条重要的心理学原理：<strong>公开承诺往往具有持久的效力。</strong></p></li><li><p><strong>每当一个人当众选择了一种立场，他便会产生维持它的动机，因为这样才能显得前后一致。</strong> 我在本章前面的部分提到过，前后一致是一种很好的为人特点；不具备这一特点的人，会被视为浮躁、多变、优柔寡断、糊涂、欠缺稳定；具备这一特点的人，则显得理性、自信、可靠、值得信赖。考虑到这样的背景，也就怪不得人们总是避免显得前后不一了。故此，出于观感上的原因，一个立场越是公开，人就越不愿意对其作出改变。</p></li><li><p>社会科学家已经确定了一点：<strong>只有当我们认为外界不存在强大的压力时，我们才会为自己的行为发自内心地负起责任。</strong></p><blockquote><p>一个实验：</p><p>他给男孩儿依次看了5种玩具，并警告说：“玩机器人是不对的。要是你玩了它，我会很生气，那时候我做的事情恐怕会让你不好受。”之后，弗里德曼离开了房间几分钟。在此期间，他通过一面单向玻璃暗中观察男孩儿。他先后找了22个不同的男孩做此尝试，在他离开的那几分钟里，有21个孩子摸都没摸过机器人。</p><p>可以看出，只要孩子们觉得有可能被逮到挨罚，强大的威胁就管用。当然，弗里德曼早就猜到了这一点。他真正感兴趣的是，等过上一段时间，当他不在周围的时候，威胁还能不能有效指导孩子们的行为。出于这一目的，6个星期之后，他派了一名年轻的姑娘回到男孩儿们的学校。</p><p>姑娘把孩子们从班上逐一叫出来，参与一项实验。她并未提及自己跟弗里德曼有任何关系，只是陪着孩子回到那间放有5种玩具的房间，说要给他做个画画的测试。她一边给测试打分，一边告诉男孩儿，想玩房间里的任何玩具都行。当然了，几乎所有的男孩儿都玩了玩具。</p><p>有趣的地方在于，所有玩了玩具的孩子，77%都选了先前禁止他们玩的机器人。因为弗里德曼不能回来执行惩罚，6星期前非常管用的威胁，这下子差不多完全没用了。</p><p>弗里德曼的实验并未到此结束。他另选了一组男孩儿，把程序稍微调整了一下。</p><p>他仍然先给孩子们看了5种玩具，也对他们说，在自己离开房间期间，别玩机器人，因为“那是不对的”。这一次，他并未威胁孩子，非要他们服从。他只是离开房间，通过单向玻璃观察，看看他的指示是否管用。指示同样管用。和前一组男孩一样，弗里德曼短暂离开期间，22人里只有1个孩子碰了机器人。</p><p><strong>也就是说，这种理由里蕴含的可察外部压力越少，效果就越好。对家长而言，选择一个合适的理由并不容易，但这番努力应该是物有所值的。它决定了孩子是短期内顺从，还是作出了长久的承诺。</strong></p></blockquote></li><li><p><strong>承诺一旦作出，就开始长出腿来支撑自己</strong>。</p></li></ul><h4 id="反制手段-1"><a href="#反制手段-1" class="headerlink" title="反制手段"></a>反制手段</h4><ol><li>有效的防御措施来自一种思想上的觉悟：<strong>尽管保持一致一般而言是好的，甚至十分关键，我们也必须避免愚蠢的死脑筋。</strong></li><li>只需要一语道破他们在干嘛就行了，这是完美反击战术。</li></ol><h3 id="社会认同"><a href="#社会认同" class="headerlink" title="社会认同"></a>社会认同</h3><p>我们首先需要了解另一种强大影响力武器的性质：社会认同原理。该原理指出，<strong>在判断何为正确时，我们会根据别人的意见行事。</strong> 这一原理尤其适用于我们对正确行为的判断，特定情形下在判断某一行为是否正确时，我们的看法取决于其他人是怎么做的。</p><blockquote><p>销售兼励志顾问卡维特·罗伯特（Cavett Robert）在给销售学员的建议中准确总结了社会认同原理：“95%的人都爱模仿别人，只有5%的人能首先发起行动，所以，要想把人说服，我们提供任何证据的效果都比不上别人的行动。”</p></blockquote><p><strong>一般来说，在我们自己不确定、情况不明或含糊不清、意外性太大的时候，我们最有可能觉得别人的行为是正确的。</strong></p><blockquote><p>吉诺维斯事件。</p><p>一位20多岁的姑娘，凯瑟琳·吉诺维斯深夜下班回家，在住所所在的街道上遭到杀害。凯瑟琳·吉诺维斯并不是无声无息，一下子就死掉的。她遭受的攻击持续了很长时间，她受了许多折磨，弄出了很大的声响，而这一切就发生在大街上。袭击者追上她，攻击了她三次，她大喊救命，过了整整35分钟，袭击者的刀子才终于夺走了她的性命。令人难以置信的是，38名邻居从公寓的窗户里眼睁睁地看着，都不愿动动手指、打电话报警。</p><p>两位心理学家推测，<strong>现场有大量其他旁观者在场时，旁观者对紧急情况伸出援手的可能性最低，</strong> 原因至少有两个。第一个原因很浅显，<strong>周围有其他可以帮忙的人，单个人要承担的责任就减少了，</strong> “说不定其他人会帮忙或打电话，说不定其他所有人已经这么干了。”</p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com//NeatReader-1667032081210.png" alt="NeatReader-1667032081210"></p><p>类似图中的这种情况，无法肯定当事人是否需要紧急救助，因此就算此人真的需要帮助，人群中恐怕也很难有人会伸出援助之手。想想看，如果你是图中的第二个过路人，恐怕你也会受第一个过路人的影响，觉得倒在地上的人并不需要帮助。</p><p>尤其是在局面模糊不清的时候，人人都倾向于观察别人在做什么，这会导致一种叫做“多元无知”的有趣现象。所谓的“多元无知”状态，<strong>“每个人都得出判断：既然没人在乎，那就应该没什么问题。</strong></p><p>这里的关键是意识到，<strong>旁观者群体没能帮忙，不是因为他们无情，而是因为他们不能确定。</strong> </p><p>因此<strong>一般而言，在需要紧急救助的时候，你的最佳策略就是减少不确定性，让周围人注意到你的状况，搞清楚自己的责任。</strong> </p></blockquote><h4 id="社会认同原理发挥作用的重要条件"><a href="#社会认同原理发挥作用的重要条件" class="headerlink" title="社会认同原理发挥作用的重要条件"></a>社会认同原理发挥作用的重要条件</h4><ol><li><strong>我们会根据他人的行为来判断自己怎么做才合适，尤其是在我们觉得这些人跟自己相似的时候。</strong></li></ol><blockquote><p>倘若菲利普斯提供的自杀数据还不够触目惊心，他的另一些研究或许更加发人深省：在美国，只要媒体大肆报道暴力事件，就会有人群起效法。电视台晚间新闻转播重量级拳击冠军争霸赛，似乎能显著提高全美的凶杀案发生率。对重量级拳击冠军赛（1973年至1978年）做一番分析，可以看出仿效暴力行为的一个惊人特点：每当黑人拳手输了比赛，其后10天里，黑人男青年在凶杀案里死亡的比率就会大幅上升。反过来看，要是白人拳手输了比赛，未来10天里，就会有更多白人男青年频频死于暴力事件。把这些结果跟菲利普斯从自杀数据里发现的情况结合起来，我们可以很明显地看出，<strong>对暴力事件大加报道，会让可怕的结果落到相似的人身上——不管暴力行为的对象是自己，还是别人。</strong></p><p>事实上，他声称，轰动的自杀新闻之所以会引发事故热潮，原因其实是同一个：模仿自杀。知道别人自杀之后，一大批人觉得，对自己来说，自杀也是一条不错的出路。于是，有些人采取了直接的行动，不加掩饰地自杀了——自杀率就此猛增。\</p><p><strong>模仿是其中的关键。</strong></p><p><strong>报道自杀的消息，促使一部分跟自杀者类似的人走向了绝路——因为他们现在发现自杀的念头更加站得住脚了。</strong></p></blockquote><ul><li><strong>不确定性——这可是社会认同原理的左右臂膀啊！</strong> 我们已经看到，人们在不确定的时候，会根据他人的行动来指导自己的行动。故此，在圭亚那的陌生环境里，教派成员会很乐意追随别人的领导。也正如我们所知，人们最容易效法的是一种特别的人——跟自己类似的人的行为。</li></ul><h4 id="反制手段-2"><a href="#反制手段-2" class="headerlink" title="反制手段"></a>反制手段</h4><ol><li>不正确的数据导致社会认同原理导航失准，这分为两类情况。一类情况出现在社会证据是蓄意伪造而来的时候。这种情况全是牟利者制造出来的，他们想给我们留下一种印象——很多人都在怎样怎样做（实际上可能根本不是这么一回事），而他们正好也希望我们那样做。<ul><li><strong>面对明显是伪造的社会证据，我们只要多保持一点警惕感，就能很好地保护自己了。</strong></li></ul></li><li>还有另一种时候社会认同原理会导向失误。此时，一个纯属无心的失误会像雪球一样越滚越大，逼使我们作出错误的决定。多元无知现象——明明出现了紧急事件，可人人都觉得没什么好惊慌的，就是这种情况下的一个例子。<ul><li><strong>首先，我们似乎持有这样的假设：要是很多人在做相同的事情，他们必然知道一些我们不知道的事情。尤其在我们并不确定的时候，我们很乐意对这种集体智慧投入极大的信任。其次，人群很多时候都是错的，因为群体的成员并不是根据优势信息才采取行动，而只是基于社会认同原理在做反应。</strong></li></ul></li></ol><p>这里有一点教训：<strong>人绝对不应该完全信任类似社会认同这种自动导航装置，哪怕没有坏分子故意往里面添加错误信息，它自己有时候也会发生故障。</strong></p><h3 id="喜好"><a href="#喜好" class="headerlink" title="喜好"></a>喜好</h3><p>我们大多数人总是更容易答应自己认识和喜欢的人所提出的要求。</p><h4 id="光环效应"><a href="#光环效应" class="headerlink" title="光环效应"></a>光环效应</h4><p>指的是，<strong>一个人的一个正面特征就能主导其他人看待此人的眼光。</strong> 现有证据清楚地表明了，大多数时候外表魅力就是这样的一个特征。</p><p>研究表明，<strong>我们会自动给长得好看的人添加一些正面特点，比如有才华、善良、诚实和聪明等。而且我们在作出这些判断的时候并没有意识到外表魅力在其中发挥的作用。</strong></p><p><strong>长相好看的人更容易在需要的时候获得帮助，在改变听众意见时也更具说服力。</strong></p><p><strong>我们会下意识地向跟自己相似的人作出正面反应。</strong></p><p><strong>请求者还有另一种利用相似点提高好感、增加顺从概率的办法：他们假装跟我们有着相似的背景和兴趣。</strong></p><p><strong>我们特别喜欢听人恭维奉承。</strong></p><p><strong>由于熟悉会影响人的喜好，因此它对我们的各类决定都发挥了一定的作用，包括选举哪一位政客。</strong> </p><h4 id="反作用"><a href="#反作用" class="headerlink" title="反作用"></a>反作用</h4><ol><li><strong>虽然接触带来的熟悉往往能导致更大的好感，可要是接触本身蕴含了让人反感的体验，就会起到适得其反的作用。</strong> </li></ol><h4 id="条件反射与关联"><a href="#条件反射与关联" class="headerlink" title="条件反射与关联"></a>条件反射与关联</h4><ol><li><strong>糟糕的消息会让报信人也染上不祥。人总是自然而然地讨厌带来坏消息的人，哪怕报信人跟坏消息一点关系也没有。</strong> 光是两者之间存在联系，就足以引发我们的厌恶了。</li><li><strong>“物以类聚，人以群分”、“近朱者赤，近墨者黑”</strong></li></ol><p><strong>关联原理</strong>：不管是好事还是坏事，只要跟我们偶然联系在了一起，就都会影响人们对我们的感觉。</p><p>指导意义：</p><ol><li><strong>人们深明关联原理的奥妙，并努力把自己跟积极的事情联系起来，跟消极的事情保持距离——哪怕他们并非事情的起因。</strong></li><li><strong>根据关联原理，倘若我们能用一些哪怕是非常表面的方式（比如我们的居住地）让自己跟成功联系起来，我们的公共形象也会显得光辉起来。</strong></li></ol><h4 id="反制手段-3"><a href="#反制手段-3" class="headerlink" title="反制手段"></a>反制手段</h4><ol><li>不去压抑好感因素产生的影响力，听凭这些因素发挥力量，然后用这股力量反过来对付那些想从中获利的人。只要当心它们带来的过度好感就行。一旦我们觉得自己对顺从专家的好感超出了该场合下的正常程度，就是唤出防御机制的时机了。这股力量越大，其反作用也就越明显，对我们的戒备防御也就越有帮助。</li></ol><h3 id="权威"><a href="#权威" class="headerlink" title="权威"></a>权威</h3><p>人们普遍倾向于服从权威。</p><blockquote><p>打从出生之日起，社会就教导我们：顺从权威是正确的，违抗权威是不对的。父母的教诲、校舍里风传的小曲、故事和儿歌里，甚至我们成年后存在的法律、军事和政治制度中，都无不充斥着这条信息。而所有这些“教化”，无不将服从和忠于正当规则摆到极高的地位。</p><p><strong>服从权威人物的命令，总是能给我们带来一些实际的好处。</strong> </p><p><strong>很多情况下，只要有正统的权威说了话，其他本来应该考虑的事情就变得不相关了。</strong></p><p><strong>头衔比当事人的本质更能影响他人的行为。</strong></p><p><strong>头衔除了能让陌生人表现更恭顺，还能让有头衔的那个人在旁人眼里显得更高大。</strong></p><p>第二种可以触发我们机械顺从的权威象征是衣着。虽说相较于头衔，这种权威的外套更实在，可要伪造起来也很容易。</p><p>衣着除了可以发挥制服的作用，还可以用于装饰性目的，表现更广义上的权威。精致、昂贵的服装承载着地位和身份的光环，珠宝和汽车等类似的身份标志也是一样。</p></blockquote><h4 id="反制手段-4"><a href="#反制手段-4" class="headerlink" title="反制手段"></a>反制手段</h4><ol><li>解决这一问题的基本方法，就是提高对权威力量的警惕性。</li><li>为了帮助我们判断什么时候应该遵循权威指示，什么时候不应该，不妨向自己提两个问题。碰到貌似权威的人物在试图发挥影响力的时候，我们要问的第一个问题是：“这个权威是真正的专家吗？”这个问题能让我们把焦点放在两点关键信息上：<strong>权威的资格，以及这些资格是否跟眼前的主题相关。</strong> 通过这种简单的办法，着眼于权威地位的证据，我们就能避免自动顺从带来的大部分问题。</li></ol><h3 id="稀缺"><a href="#稀缺" class="headerlink" title="稀缺"></a>稀缺</h3><p>不管是什么东西,只要你晓得会失去它，自然就会爱上它了。——G.K.切斯特顿</p><p>就稀缺性原理而言，它的力量主要来自两个方面。第一点和其他影响力武器一样，稀缺性原理钻了我们思维捷径上的漏洞。这个漏洞本来也自有道理。我们都知道，难于得到的东西，一般都要比能轻松得到的东西好。故此，我们<strong>基本可以根据获得一样东西的难易程度，迅速准确地判断它的质量。</strong> 这也就是说，稀缺原理成立的一个原因在于，根据它来作出判断，大部分时候是正确的。此外，稀缺性原理的力量，还有第二种独特的来源：<strong>机会越来越少的话，我们的自由也会随之丧失。</strong> 而我们又痛恨失去本来拥有的自由。</p><ul><li><strong>对失去某种东西的恐惧，似乎要比对获得同一物品的渴望，更能激发人们的行动力。</strong></li><li><strong>机会越少见，价值似乎就越高</strong></li><li>讽刺的地方就在这儿：<strong>倘若瑕疵把一样东西变得稀缺了，垃圾也能化身成值钱的宝贝。</strong></li></ul><h4 id="逆反心理"><a href="#逆反心理" class="headerlink" title="逆反心理"></a>逆反心理</h4><p><strong>保住既得利益的愿望，是心理逆反理论的核心。</strong> 心理学家杰克·布雷姆（Jack Brehm）提出这个理论，以此解释人类在丧失个人控制权时作出的反应。根据这个理论，只要选择自由受到限制或威胁，保护自由的需求就会使我们想要它们（以及与其相关的商品和服务）的愿望愈发强烈。因此，一旦短缺——或其他因素妨碍我们获取某物，我们就会比从前更想得到它，更努力地想要占有它，跟这种妨碍对着干。</p><blockquote><p>尽管可怕的两岁可能是逆反心理最明显的时期，但面对限制行动自由的举措，我们一辈子都表现出了强烈的反抗倾向。另一个反叛倾向最为突出的年纪是青春期。一个深明此理的邻居曾经给我建议：“要是你很想做什么事情，有三种选择：自己做，出大价钱找人做，要不就故意禁止你家十几岁的孩子做。</p><p>研究人员发现，<strong>尽管家长干涉会令感情关系出现某些问题——如一方以更挑剔的眼光看待另一方，更多地报告另一方的负面行为，但干涉同时也让情侣双方觉得彼此更加相爱，更想结婚了。</strong></p><p>要理解逆反心理和稀缺原理的运作，理解这一点十分重要。<strong>每当有东西获取起来比从前难，我们拥有它的自由受了限制，我们就越发地想要得到它。</strong></p></blockquote><h4 id="最佳条件"><a href="#最佳条件" class="headerlink" title="最佳条件"></a>最佳条件</h4><p>新出现的稀缺更使人觉得迫切的适用范围。社会科学家已经确定，这种稀缺是造成国家政治动荡和暴乱的主要原因。这一观点最重要的支持者詹姆斯·戴维斯（James Davies）曾指出，一个国家在经济和社会条件改善后，要是在短期内出现剧烈逆转，最有可能爆发革命。</p><ul><li><strong>自由这种东西，给一点又拿走，比完全不给更危险。</strong></li><li><strong>到了手的自由，不经一战是没人会放弃的。</strong></li><li><p><strong>管教前后不一的父母，最容易教出反叛心强的孩子。</strong></p></li><li><p><strong>参与竞争稀缺资源的感觉，有着强大的刺激性。</strong></p></li><li><p><strong>渴望拥有一件众人争抢的东西，几乎是出于本能的身体反应。</strong></p></li></ul><h4 id="反制手段-5"><a href="#反制手段-5" class="headerlink" title="反制手段"></a>反制手段</h4><ol><li><strong>我们务必记住：稀缺的东西并不因为难以弄到手，就变得更好吃、更好听、更好看、更好用了。</strong></li></ol><h2 id="即时影响力"><a href="#即时影响力" class="headerlink" title="即时影响力"></a>即时影响力</h2><ul><li><strong>尽管只靠孤立数据容易作出愚蠢的决定，可现代生活的节奏又要求我们频繁使用这一捷径。</strong> </li><li><strong>靠着成熟而精密的大脑，我们建立了一个信息繁多的快节奏复杂世界，使得我们不得不越发依赖类似动物（我们早就超越了的动物！）的原始反应方式来应对它。</strong></li><li>因为技术的进化速度远远快于我们，所以我们处理信息的天然能力将有可能越来越难于应对当代生活中繁多的变化、选择和挑战。我们越来越频繁地发现自己陷入了跟低等动物一样的处境之中：外界环境的错综复杂超出了我们心智器官的处理性能。</li><li><strong>我们要采取一切合理的方法——抵制、威胁、对峙、谴责、抗议来报复以刺激我们的捷径反应为目的的虚假信号。</strong></li></ul>]]></content>
    
    
    <summary type="html">读书笔记</summary>
    
    
    
    <category term="读书笔记" scheme="http://example.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="读书笔记" scheme="http://example.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>费马大定理</title>
    <link href="http://example.com/2022/10/28/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E8%B4%B9%E9%A9%AC%E5%A4%A7%E5%AE%9A%E7%90%86/"/>
    <id>http://example.com/2022/10/28/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E8%B4%B9%E9%A9%AC%E5%A4%A7%E5%AE%9A%E7%90%86/</id>
    <published>2022-10-28T09:10:10.000Z</published>
    <updated>2023-03-30T02:32:37.419Z</updated>
    
    <content type="html"><![CDATA[<h1 id="费马大定理"><a href="#费马大定理" class="headerlink" title="费马大定理"></a>费马大定理</h1><p>费马大定理看上去如此简易，因为它立足于人人都能记住的一段数学术语——毕达哥拉斯（Pythagoras）定理：</p><p>在一个直角三角形中，斜边的平方等于两直角边的平方之和。</p><p><strong>从毕达哥拉斯定理到费马大定理</strong></p><p>在E. T.贝尔的《大问题》一书中谈到过毕达哥拉斯定理和三元组的无限性，图书馆中的这本书引起年幼的安德鲁·怀尔斯的注意。虽然兄弟会对于毕达哥拉斯三元组已经有了几乎完整的了解，但怀尔斯很快就发现这个表面上平淡无奇的方程<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="10.943ex" height="2.351ex" role="img" focusable="false" viewBox="0 -833.9 4836.7 1038.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(1008.6,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＋</text></g><g data-mml-node="msup" transform="translate(2008.6,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(523,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(2935.1,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＝</text></g><g data-mml-node="msup" transform="translate(3935.1,0)"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mn" transform="translate(498,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container>有着深藏的一面——贝尔的书描述了一头数学怪兽的存在。</p><p>在毕达哥拉斯方程中，3个数x，y和z都被平方了（即<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="8.893ex" height="2.339ex" role="img" focusable="false" viewBox="0 -833.9 3930.6 1033.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(1008.6,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＝</text></g><g data-mml-node="mi" transform="translate(2008.6,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(2580.6,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mi" transform="translate(3358.6,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g></g></svg></mjx-container>）：</p><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="10.943ex" height="2.351ex" role="img" focusable="false" viewBox="0 -833.9 4836.7 1038.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(1008.6,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＋</text></g><g data-mml-node="msup" transform="translate(2008.6,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(523,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(2935.1,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＝</text></g><g data-mml-node="msup" transform="translate(3935.1,0)"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mn" transform="translate(498,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container>。</p><p>然而，贝尔的书中描述了它的一个姐妹方程，其中x，y和z被立方了（即<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="11.947ex" height="2.338ex" role="img" focusable="false" viewBox="0 -833.2 5280.6 1033.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g><g data-mml-node="mi" transform="translate(1008.6,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＝</text></g><g data-mml-node="mi" transform="translate(2008.6,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(2580.6,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mi" transform="translate(3358.6,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(3930.6,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mi" transform="translate(4708.6,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g></g></svg></mjx-container>）。x在这方程中的幂指数不再是2，而是3：</p><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="10.943ex" height="2.349ex" role="img" focusable="false" viewBox="0 -833.2 4836.7 1038.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g><g data-mml-node="mi" transform="translate(1008.6,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＋</text></g><g data-mml-node="msup" transform="translate(2008.6,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(523,363) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g><g data-mml-node="mi" transform="translate(2935.1,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＝</text></g><g data-mml-node="msup" transform="translate(3935.1,0)"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mn" transform="translate(498,363) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g></g></svg></mjx-container>。</p><p>寻找最初那个方程的整数解，即毕达哥拉斯三元组，相对来说是容易的，但是将幂指数从“2”变成“3”再来求这个姐妹方程的整数解似乎是不可能的。多少代的数学家们在拍纸本上算了又算，却无法找到准确地适合这个方程的数。</p><p>原来的“平方”方程提出的挑战是重新安排2个正方形中的瓷砖以组成第3个较大的正方形。而“立方”方程的挑战则是重新安排由砌砖组成的2个立方体以组成第3个较大的立方体。明显地，不管选择哪2个立方体着手，当它们被组合起来时，要么是一个完整的立方体但留下一些多余的砖，要么就是一个不完整的立方体。与实现完美的重排最为接近的情形是多了1块或少了1块砖。例如，如果我们从立方体<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="8.926ex" height="2.338ex" role="img" focusable="false" viewBox="0 -833.2 3945.1 1033.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g><g data-mml-node="mi" transform="translate(936.6,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">（</text></g><g data-mml-node="msup" transform="translate(1936.6,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g><g data-mml-node="mi" transform="translate(2945.1,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">）</text></g></g></g></svg></mjx-container>和<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="8.74ex" height="2.349ex" role="img" focusable="false" viewBox="0 -833.2 3863.1 1038.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z"></path></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g><g data-mml-node="mi" transform="translate(936.6,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">（</text></g><g data-mml-node="msup" transform="translate(1936.6,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(523,363) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g><g data-mml-node="mi" transform="translate(2863.1,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">）</text></g></g></g></svg></mjx-container>着手，重新安排砌砖，那么我们只缺1块砖就能组成一个完整的9×9×9立方体，如图5所示。</p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com//00058.jpg" alt="img"></p><p>图5　能不能将砌砖从一个立方体加到另一个立方体以组成第3个较大的立方体？在图中的情形，一个6×6×6立方体加上一个8×8×8立方体仍无足够的砌砖组成一个9×9×9立方体。第一个立方体中有216（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="2.119ex" height="1.935ex" role="img" focusable="false" viewBox="0 -833.2 936.6 855.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g></g></svg></mjx-container>）块砌砖，第二个中有512（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="2.119ex" height="1.935ex" role="img" focusable="false" viewBox="0 -833.2 936.6 855.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z"></path></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g></g></svg></mjx-container>）块。总共是728块砌砖，这比<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="2.119ex" height="1.935ex" role="img" focusable="false" viewBox="0 -833.2 936.6 855.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z"></path></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g></g></svg></mjx-container>小1。</p><p>寻找3个准确地适合这个立方方程的数似乎是不可能的。也就是说，方程</p><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="10.943ex" height="2.349ex" role="img" focusable="false" viewBox="0 -833.2 4836.7 1038.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g><g data-mml-node="mi" transform="translate(1008.6,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＋</text></g><g data-mml-node="msup" transform="translate(2008.6,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(523,363) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g><g data-mml-node="mi" transform="translate(2935.1,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＝</text></g><g data-mml-node="msup" transform="translate(3935.1,0)"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mn" transform="translate(498,363) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g></g></svg></mjx-container></p><p>似乎没有整数解。更有甚者，如果幂指数从3（立方）改为任何更大的数n（即4，5，6，…），那么寻找解似乎仍是不可能的，即更一般的方程</p><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="11.423ex" height="2.161ex" role="img" focusable="false" viewBox="0 -750 5048.8 955"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,363) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mi" transform="translate(1079.3,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＋</text></g><g data-mml-node="msup" transform="translate(2079.3,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(523,363) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mi" transform="translate(3076.5,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＝</text></g><g data-mml-node="msup" transform="translate(4076.5,0)"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mi" transform="translate(498,363) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></svg></mjx-container>，当n＞2时，</p><p>似乎没有整数解。在毕达哥拉斯方程中仅仅将2改为任何更大的数，寻找整数解的工作就从相对简单变得令人难以想象地困难。事实上，伟大的17世纪法国人皮埃尔·德·费马令人惊讶地宣称，没有人能找到任何解的原因就在于根本没有解存在。</p><p>费马是历史上最杰出的和最有迷惑力的数学家之一。他不可能将无穷多个数一一核对，但是他绝对确信没有任何组合会准确地适合这个方程，因为他的结论是以证明为依据的。就像毕达哥拉斯也不是去核对每一个三角形才证明他的定理的正确一样，费马无须核对每一个数以证明他的定理的正确。<strong>著名的费马大定理说</strong></p><p><strong><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="11.423ex" height="2.161ex" role="img" focusable="false" viewBox="0 -750 5048.8 955"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,363) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mi" transform="translate(1079.3,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＋</text></g><g data-mml-node="msup" transform="translate(2079.3,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(523,363) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mi" transform="translate(3076.5,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＝</text></g><g data-mml-node="msup" transform="translate(4076.5,0)"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mi" transform="translate(498,363) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></svg></mjx-container>，当n＞2时没有整数解</strong>。</p><h2 id="毕达哥拉斯"><a href="#毕达哥拉斯" class="headerlink" title="毕达哥拉斯"></a>毕达哥拉斯</h2><p>萨摩斯岛（Samos）的毕达哥拉斯是数学史上最具影响但又是最神秘的人物之一。由于没有关于他的生活和工作的第一手资料，他被笼罩在神秘和传说之中，使得历史学家们难以分清事实与虚构。似乎可以肯定的一件事是毕达哥拉斯发展了关于数字的逻辑的思想，并且对数学发展的第一个黄金时期功不可没。由于他的天才，数不再仅仅用来记账和计算，其本身的价值受到了重视。他研究了一些特殊的数的性质、它们之间的关系以及它们的组成方式。他认识到数独立于有形世界而存在，因而他们的研究不会因感觉的差错而受影响。这意味着他能够发现独立于人们的印象或者说偏见的真理，这种真理比以前的任何知识更为绝对无疑。</p><p>生活在公元前6世纪，毕达哥拉斯的数学技能得益于他走遍了整个古代世界。某些传说使我们相信他的足迹曾远及印度和英国，但更为可靠的是他从埃及人和巴比伦人那里学到了许多数学技能和工具。这两个古老的民族当时已经超越了简单计数的范围而能够进行复杂的计算，这使他们能建立复杂的记账系统和建造独具匠心的建筑物。事实上，他们将数学看成仅仅是解决实际问题的一种工具；在发现几何学的某些基本规则的背后，其动机是能重建田地的边界，这些边界在尼罗河每年泛滥时常被毁掉。几何学这个词本身意指“测量土地”。</p><p>毕达哥拉斯注意到，埃及人和巴比伦人按照一种无须思索就能仿效的方法进行计算。这种可能已经沿袭了许多代人的方法总能给出正确的答案，因而没有人会费神去怀疑这种方法，或者去寻求隐藏在这些式子背后的逻辑。对这些文明古国来说，重要的是计算有效——至于它为什么有效则是无关紧要的。</p><p>经历20年的周游后，毕达哥拉斯已经吸收了他所知的那个世界中所有的数学法则。他扬帆起航回到他的家乡爱琴海中的萨摩斯岛，打算建立一所学校致力于哲学研究，特别是研究他新近获得的一些数学法则。他想要理解数字，而不是仅仅使用它们。他希望找到一大群思想无拘束的、能帮助他发展本质上全新的哲学的学生，但是在他外出期间，僭王波利克拉特斯（Polycrates）已经把曾经自由的萨摩斯岛变成了一个不容异说的保守的社会。波利克拉特斯邀请毕达哥拉斯加入他的宫廷，但是哲学家意识到这是一种策略，目的是使他保持沉默，于是拒绝了这份荣耀。相反，他离开了城市，选择了该岛边远地区的一个山洞，在那里他可以冥思苦想而不用害怕受迫害。</p><p>毕达哥拉斯并不喜欢孤独，最终他花钱使一个小男孩成为他的第一名学生。这个男孩的身份不甚清楚，但有些历史学家认为他的名字可能也叫毕达哥拉斯。这名学生后来是第一个建议运动员应该吃肉以增强自己体质的人，并因此而出名。老师毕达哥拉斯要为他的学生出席的每一节课付给他3个小银币。几个星期过去后，毕达哥拉斯注意到该男孩最初的对学习的勉强已转变成对知识的热情。为了试探他的学生，毕达哥拉斯佯装他不再有能力支付学生金钱，因而只能停止上课。这时候，男孩表示宁可付钱受教育也不愿就此结束。这个学生已经成为他的信徒。遗憾的是，这是毕达哥拉斯在萨摩斯仅有的一次使人成功皈依。他的确曾经短暂地办过一所学校，称为毕达哥拉斯半圆，但是他关于社会改革的观点不受欢迎，哲学家被迫与他的母亲和唯一的信徒一起逃离这块殖民地。</p><p>毕达哥拉斯动身去意大利南部（当时那里是希腊的属地），并定居于克罗敦（Groton）。在那里他幸运地得到了米洛（Milo）的理想的赞助，米洛是克罗敦最富有的人，也是历史上最强壮的人之一。虽然毕达哥拉斯作为萨摩斯的哲人已经闻名全希腊，但米洛的声望更高。米洛有着大力神赫丘利（Herculean）般的身材，曾经是奥林匹亚竞技会和皮托竞技会有12次记录的冠军。除了练习运动外，米洛还喜欢研究哲学和数学。他留出他家的一部分房子，供给毕达哥拉斯足够的房间来建立学校。于是，最有创造性的头脑和最有力量的身躯结成了伙伴关系。</p><p>安置好他的新家后，毕达哥拉斯建立了毕达哥拉斯兄弟会——一个有600名追随者的帮会，这些人不仅有能力理解他的课程，而且还能补充某些新的想法和证明。一旦参加兄弟会后，每个成员就必须将他们尘世间的一切财产捐献给公共基金。任何成员如果离开该会，那么他们可收到相当于他们最初捐献的两倍的财产，并为他们竖立一块墓碑以志纪念。兄弟会是一个奉行平等主义的学派，吸收了几名姐妹参加。毕达哥拉斯最喜欢的学生是米洛的女儿，美丽的西诺（Theano）。尽管年龄相差不少，他们最终还是结婚了。</p><p>建立兄弟会后不久，毕达哥拉斯撰造了一个名词“哲学家”（philo-sopher），与此同时规定了他的学派的目标。在一次出席奥林匹亚竞技会时，弗利尤斯（Phlius）的利昂（Leon）王子问毕达哥拉斯他会如何描述他自己，毕达哥拉斯回答道：“我是一个哲学家。”但是利昂以前没有听说过这个词，因而请他解释。</p><p>利昂王子，生活正好比这些公开的竞技会。在这里聚集的一大群人中，有些人受奖励物的诱惑而来，另一些人则因对名誉和荣耀的企求和受野心的驱使而来，但他们中间也有少数人来这里是为了观察和理解这里发生的一切。</p><p>生活同样如此。有些人因爱好财富而被左右，另一些人因热衷于权力和支配而盲从，但是最优秀的一类人则献身于发现生活本身的意义和目的。他设法揭示自然的奥秘。这就是我称之为哲学家的人。虽然没有一个人在各方面都是很有智慧的，但是他能热爱知识，视其为揭开自然界奥秘的钥匙。</p><p>虽然许多人知道毕达哥拉斯的抱负，但兄弟会圈外的人都不知道他成功的详情和程度。该学派的每个成员被迫宣誓永不向外界泄露他们的任何数学发现。甚至在毕达哥拉斯死后，还有一个兄弟会成员因为背弃了誓言而被淹死——他公开宣布发现了一种由12个正五边形构成的新的规则立体：正十二面体。毕达哥拉斯兄弟会的高度秘密性是一些神话故事围绕着他们可能举行过的奇异仪式来展开情节的部分原因；同样，这也是为什么关于他们的数学成就的可靠记载如此之少的原因。</p><p>可以确认的是毕达哥拉斯缔造了一种社会精神，它改变了数学的进程。兄弟会实际上是一个宗教性社团组织。他们崇拜的偶像之一是数，他们相信，通过了解数与数之间的关系，他们能够揭示宇宙的神圣的秘密，使他们自己更接近神。特别是，兄弟会将注意力集中于“计数数”（1，2，3，…）和分数的研究。计数数有时也叫“整数”，它们与分数（整数之间的比）一起可称之为“有理数”。在这无穷多个数中间，兄弟会寻找那些有特殊重要意义的数，其中某些最特殊的数就是所谓的“完满”数。</p><blockquote><p>按照毕达哥拉斯的说法，数的完满取决于它的因数（能整除原数的那些数）。例如：12的因数是1，2，3，4和6。当一个数的各因数之和大于该数本身时，该数称为“盈”数。于是12是一个盈数，因为它的因数加起来等于16。另一方面，当一个数的因数之和小于该数本身时，该数称为“亏”数。所以10是一个亏数，因为它的因数（1，2和5）加起来只等于8。</p><p>最有意义和最少见的数是那些其因数之和恰好等于其本身的数，这些数就是完满数。数字6有因数1，2和3，结果它是一个完满数，因为1＋2＋3＝6。下一个完满数是28，因为1＋2＋4＋7＋14＝28。</p><p>如同6和28的完满对兄弟会来说具有数学上的意义一样，还有从事别的文化的人也确认它们的完满，有人观察到月亮每28天绕地球一圈，有人声称上帝用了6天创造世界。在《天堂》（The City of God）一书中，圣奥古斯丁（St. Augustine）辩说道：“虽然上帝能够在瞬间创造世界，但为了表现天地万物的完满，他还是用了6天。”圣奥古斯丁认为6并不是因为上帝选择了它才是完满的，而恰恰相反，完满是数的性质中固有的：“6是一个数，因其本身而完满，并非因上帝在6天中创造了万物；倒过来说才是真实的——上帝在6天中创造万物是因为这个数是完满的。”</p><p>当计数数变得更大时，完满数变得难于寻找。第三个完满数是496，第四个是8128，第五个是33550336，而第六个则是8589869056。除了是它们的因数之和外，毕达哥拉斯还指出所有的完满数显示出另外几个美妙性质。例如，完满数总等于一系列相邻的计数数之和。我们有</p><p>6＝1＋2＋3，</p><p>28＝1＋2＋3＋4＋5＋6＋7，</p><p>496＝1＋2＋3＋4＋5＋6＋7＋8＋9＋…＋30＋31，</p><p>8128＝1＋2＋3＋4＋5＋6＋7＋8＋9＋…＋126＋127。</p><p>毕达哥拉斯因完满数而欣喜，但他并不满足于只是收集这些特殊的数；相反，他想要发现它们更深层的意义。其中之一，他察觉到完满性与“倍2性”有密切关系。数4（2×2），8（2×2×2），16（2×2×2×2）等称为2的幂，可写成2n，这里n表示相乘在一起的2的个数。所有这些2的幂刚巧不能成为完满数，因为它们的因数之和总是比它们本身小1。它们只是微亏：</p><div class="table-container"><table><thead><tr><th><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="8.404ex" height="2.339ex" role="img" focusable="false" viewBox="0 -833.9 3714.6 1033.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(936.6,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＝</text></g><g data-mml-node="mn" transform="translate(1936.6,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(2436.6,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(3214.6,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></svg></mjx-container></th><th>＝4，</th><th>因数1，2</th><th>和＝3，</th></tr></thead><tbody><tr><td><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="11.295ex" height="2.338ex" role="img" focusable="false" viewBox="0 -833.2 4992.6 1033.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g><g data-mml-node="mi" transform="translate(936.6,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＝</text></g><g data-mml-node="mn" transform="translate(1936.6,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(2436.6,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(3214.6,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(3714.6,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(4492.6,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></svg></mjx-container></td><td>＝8，</td><td>因数1，2，4</td><td>和＝7，</td></tr><tr><td><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="14.187ex" height="2.357ex" role="img" focusable="false" viewBox="0 -841.7 6270.6 1041.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g><g data-mml-node="mi" transform="translate(936.6,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＝</text></g><g data-mml-node="mn" transform="translate(1936.6,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(2436.6,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(3214.6,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(3714.6,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(4492.6,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(4992.6,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(5770.6,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></svg></mjx-container></td><td>＝16，</td><td>因数1，2，4，8</td><td>和＝15，</td></tr><tr><td><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="17.078ex" height="2.339ex" role="img" focusable="false" viewBox="0 -833.9 7548.6 1033.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path></g></g><g data-mml-node="mi" transform="translate(936.6,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＝</text></g><g data-mml-node="mn" transform="translate(1936.6,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(2436.6,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(3214.6,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(3714.6,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(4492.6,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(4992.6,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(5770.6,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(6270.6,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(7048.6,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></svg></mjx-container></td><td>＝32，</td><td>因数1，2，4，8，16</td><td>和＝31。</td></tr></tbody></table></div><p>两个世纪之后，欧几里得（Euclid）使毕达哥拉斯发现的“倍2性”和完满性之间的联系更臻精美。欧几里得发现完满数总是两个数的乘积，其中一个数是2的幂，而另一个数则是下一个2的幂减去1。这就是说：</p><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="17.31ex" height="2.339ex" role="img" focusable="false" viewBox="0 -833.9 7651.1 1033.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＝</text></g><g data-mml-node="msup" transform="translate(1500,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mi" transform="translate(2436.6,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mi" transform="translate(3214.6,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">（</text></g><g data-mml-node="msup" transform="translate(4214.6,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(5151.1,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">－</text></g><g data-mml-node="mn" transform="translate(6151.1,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(6651.1,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">）</text></g></g></g></svg></mjx-container>，</p><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="18.441ex" height="2.339ex" role="img" focusable="false" viewBox="0 -833.9 8151.1 1033.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z" transform="translate(500,0)"></path></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＝</text></g><g data-mml-node="msup" transform="translate(2000,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(2936.6,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mi" transform="translate(3714.6,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">（</text></g><g data-mml-node="msup" transform="translate(4714.6,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g><g data-mml-node="mi" transform="translate(5651.1,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">－</text></g><g data-mml-node="mn" transform="translate(6651.1,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(7151.1,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">）</text></g></g></g></svg></mjx-container>，</p><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="19.573ex" height="2.357ex" role="img" focusable="false" viewBox="0 -841.7 8651.1 1041.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(500,0)"></path><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z" transform="translate(1000,0)"></path></g><g data-mml-node="mi" transform="translate(1500,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＝</text></g><g data-mml-node="msup" transform="translate(2500,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g><g data-mml-node="mi" transform="translate(3436.6,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mi" transform="translate(4214.6,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">（</text></g><g data-mml-node="msup" transform="translate(5214.6,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path></g></g><g data-mml-node="mi" transform="translate(6151.1,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">－</text></g><g data-mml-node="mn" transform="translate(7151.1,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(7651.1,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">）</text></g></g></g></svg></mjx-container>，</p><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="20.704ex" height="2.355ex" role="img" focusable="false" viewBox="0 -841 9151.1 1041"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(500,0)"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(1000,0)"></path><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z" transform="translate(1500,0)"></path></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＝</text></g><g data-mml-node="msup" transform="translate(3000,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path></g></g><g data-mml-node="mi" transform="translate(3936.6,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mi" transform="translate(4714.6,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">（</text></g><g data-mml-node="msup" transform="translate(5714.6,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><path data-c="37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z"></path></g></g><g data-mml-node="mi" transform="translate(6651.1,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">－</text></g><g data-mml-node="mn" transform="translate(7651.1,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(8151.1,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">）</text></g></g></g></svg></mjx-container>。</p><p>当代的计算机继续搜索完满数，发现了像<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="16.041ex" height="1.887ex" role="img" focusable="false" viewBox="0 -833.9 7090.3 833.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(500,0)"></path><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z" transform="translate(1000,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(1500,0)"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(2000,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(2500,0)"></path></g></g></g><g data-mml-node="mi" transform="translate(2704.3,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="msup" transform="translate(3482.3,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(500,0)"></path><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z" transform="translate(1000,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(1500,0)"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(2000,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(2500,0)"></path></g><g data-mml-node="mo" transform="translate(3000,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(3778,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g></g></svg></mjx-container>这样巨大的数的例子，这是一个130000位以上的数，它仍符合欧几里得法则。</p><p>毕达哥拉斯为完满数具有的丰富的模式和性质所吸引，他赞赏它们的精妙。初看之下，完满性是相当容易掌握的概念，然而古希腊人并未能探知这个问题中的某些基本要点。例如，虽然有许多数的因数之和只比该数本身小1，即只是微亏，但似乎不存在微盈的数。令人沮丧的是，虽然他们没有发现微盈的数，却不能证明这种数不存在。只知道表面上没有微盈的数是没有任何实际价值的；但尽管如此，它却是一个可能启示这种数的性质的问题，因而值得研究。这样的谜引起了毕达哥拉斯兄弟会的兴趣，但2500年后数学家们仍然未能证明微盈数不存在。</p><p><strong>凡物皆数</strong></p><p>除了研究数之间的关系之外，数与自然之间的关系也引起了毕达哥拉斯的兴趣。他认识到自然现象是由规律支配的，这些规律可以用数学方程式来描述。他首先发现的联系之一是音乐的和声与数的调和之间的基本关系。</p><p>古希腊早期的音乐中最重要的乐器是四弦琴，或者叫四弦里拉。在毕达哥拉斯之前，音乐家们就注意到当几个特定的音一起发声时会产生悦耳的效果，他们调里拉的音直到齐拨两根弦时会产生这种和声为止。然而，早先的音乐家并不理解为什么特定的几个音会是和谐的，乐器调音也没有客观的方法。他们纯粹凭耳朵来调里拉的音，直到处于和声状态为止——柏拉图（Plato）称这个过程为折磨弦轴。</p><p>公元4世纪时的学者扬勃里柯斯（Iamblichus）写过9本关于毕达哥拉斯学派的书，他描述了毕达哥拉斯怎么会发现音乐和声的基本原理的：</p><p>一次，他全神贯注地思考着他是否能够设计出一种既可信又精巧的听觉方面的机械辅助物。这种辅助物要类似于圆规、直尺和为视觉方面设计的光学器具。同样地，触觉方面有秤以及关于重量和量度的概念。真是天赐好运，他碰巧走过一个铁匠铺，除了一片混杂的声响外，他听到了锤子敲打着铁块，发出多彩的和声在其间回响。</p><p>按照扬勃里柯斯的描写，毕达哥拉斯立即跑进铁匠铺去研究锤子的和声。他注意到，大多数锤子可以同时敲打而产生和谐的声响，而当加入某一把锤子一起敲打时总是产生令人不快的噪声。他对锤子进行分析，认识到那些彼此间音调和谐的锤子有一种简单的数学关系——它们的质量彼此之间成简单比，或者说简分数。就是说，那些重量等于某一把锤子重量的1/2，1/3或1/4的锤子都能产生和谐的声响。另一方面，那把和任何别的锤子一起敲打时总发出噪声的锤子，它的重量和别的锤子的重量之间不存在简比关系。</p><p>毕达哥拉斯已经发现数值的简比在音乐的和声中起决定作用。科学家们对扬勃里柯斯关于这个故事的描述表示某种怀疑，但是毕达哥拉斯通过研究单弦的性质将他关于乐声比的新理论应用于里拉这种乐器这件事是确确实实的。单单拨弦会产生一个标准音，它是由那根振动着的弦的整个长度产生的。如图1所示，通过将弦在其长度的某处固定，就可能产生不同的振动和不同的音。关键之处在于和音只在非常特殊的一些位置上出现。例如，在弦上恰为一半处固定弦，再拨弦会产生一个与原来的音和谐的高八度的音。类似地，在弦上恰为1/3，1/4或1/5处固定弦，就会产生其他的和音。然而，如果在整个弦的长度的非简分数处固定弦，那么产生的音是不会与上述这些音和谐的。</p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com//00041.jpg" alt="img"></p><p>图1　一根自由振动的空弦产生一个基音。设法在弦上正好一半处形成一个节，那么产生的音则是与原来的基音和谐的高八度的音。通过移动节的位置至弦上不同的简分数距离（例如1/3，1/4，1/5）处，可以产生不同的和音。</p><p>毕达哥拉斯首次发现了支配物理现象的数学法则，显示了数学与其他科学之间有着根本的关联。从这个发现以后，科学家们一直在探究那些似乎支配着各个物理过程的数学法则，并且发现数会意外地出现在各种各样的自然现象中。例如，一个特殊的数似乎操纵着弯弯曲曲的河流的长度。剑桥大学的地球科学家汉斯－亨利克·斯多勒姆（Hans-Henrik Stolum）教授计算了从河源头到河出口之间河流的实际长度与它们的直接距离之比。虽然这一比率因不同的河流而变化，但是它们的平均值只比3略微大一点，也就是说大致上是直接距离的3倍。事实上，这个比近似等于3.14，接近于数π的值，即圆的周长与直径之比。</p><p>数π原本来自圆的几何学，但它还反复出现在各种各样的科学现象中。在河长比的情形中，π的出现是有序与紊乱相争的结果。爱因斯坦（Einstein）第一个提出，河流有一种走出更多的环形路径的倾向，这是因为最细微的弯曲就会使外侧的水流变快，这反过来造成对河岸更大的侵蚀和更急剧的转弯。转弯越急剧，外侧的水流就越快，侵蚀也就越大，于是河流更为曲折……然而，有一个自然的进程会中止这种紊乱：渐增的绕圈状态的结果将是河流绕回原处而最终短路。河流将变得比较平直，而环路被放弃，形成一个U字形湖。这两种相反的因素之间的平衡导致河流从源头到出口之间的实际长度与直接距离之比的平均值为π。对于那些在坡度很小的平原上穿越的河流，诸如在巴西和西伯利亚冻土带可以找到的那些河流，这个比为π是极常见的。</p><p>毕达哥拉斯意识到从音乐的和声到行星的轨道，一切事物中皆藏有数。这导致他宣布“凡物皆数”（Everything is number）。通过探究数学的内涵，毕达哥拉斯发展着使他和其他人能描述宇宙性质的这种语言。此后，数学上的每一次突破都会给科学家们带来为了更好地解释他们周围的现象而需要的词汇。事实上，数学的进展会唤起科学的革命。</p><p>除了发现引力定律外，艾萨克·牛顿（Isaac Newton）也是个数学家。他对数学的最大贡献是对微积分的发展。在稍后的年代里，物理学家使用微积分的语言来更好地描述引力定律和解决引力论问题。牛顿的经典引力论幸存了几个世纪未受触动，直到它被阿尔伯特·爱因斯坦的广义相对论所替代；广义相对论对引力作出了更详细的、新的解释。只是由于新的数学概念为他提供了更精妙的语言来表达他的极复杂的科学思想，爱因斯坦本人的思想才可能形成。今天，对引力的解释再一次被数学的突破所影响。最新的量子引力理论和数学中的“弦”的发展密不可分，在弦这种理论中“管”的几何和拓扑性质似乎最好地解释了各种自然力。</p></blockquote><h3 id="毕达哥拉斯定理"><a href="#毕达哥拉斯定理" class="headerlink" title="毕达哥拉斯定理"></a>毕达哥拉斯定理</h3><p>在毕达哥拉斯兄弟会研究的数与自然之间的所有关系之中，最重要的是以他们的奠基者的名字命名的那个关系。毕达哥拉斯定理为我们提供了一个方程，它对一切直角三角形都成立，因而它也定义了直角三角形本身。接着，直角定义垂直，即竖直与水平的关系；最后定义我们熟悉的宇宙的三维之间的关系。数学（利用直角）定义了我们生活着的空间的结构。</p><p>它是一种深刻的了解，但是为掌握毕达哥拉斯定理所需的数学则是相对简单的。为了理解它，就从测量直角三角形两条短的边的长度（x和y）开始，然后将它们各自加以平方（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.282ex" height="1.912ex" role="img" focusable="false" viewBox="0 -833.9 1008.6 844.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container>，<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="2.096ex" height="2.351ex" role="img" focusable="false" viewBox="0 -833.9 926.6 1038.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(523,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container>）。那么这两个平方数加起来（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.282ex" height="1.912ex" role="img" focusable="false" viewBox="0 -833.9 1008.6 844.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container>，<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="2.096ex" height="2.351ex" role="img" focusable="false" viewBox="0 -833.9 926.6 1038.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(523,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container>）就给你一个最终数。如果你对图2中的直角三角形算出这个数，那么答案是25。</p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com//NeatReader-1666951278129.png" alt="NeatReader-1666951278129"></p><p>x＝3，y＝4，z＝5</p><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="10.943ex" height="2.351ex" role="img" focusable="false" viewBox="0 -833.9 4836.7 1038.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(1008.6,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＋</text></g><g data-mml-node="msup" transform="translate(2008.6,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(523,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(2935.1,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＝</text></g><g data-mml-node="msup" transform="translate(3935.1,0)"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mn" transform="translate(498,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container></p><p>9＋16＝25</p><p>图2　所有的直角三角形都符合毕达哥拉斯定理。</p><p>你现在可以测量那条最长的边z（所谓的斜边），将它的长度平方一下。引人注目的结果是这个数<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.04ex" height="1.912ex" role="img" focusable="false" viewBox="0 -833.9 901.6 844.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mn" transform="translate(498,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container>与你刚才算出的那个数完全相同，即<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="6.644ex" height="2.339ex" role="img" focusable="false" viewBox="0 -833.9 2936.6 1033.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(936.6,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＝</text></g><g data-mml-node="mn" transform="translate(1936.6,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(500,0)"></path></g></g></g></svg></mjx-container>。这就是说：</p><p>在一个直角三角形中，斜边的平方等于两直角边的平方之和。</p><p>换句话说（或者说换个记法）：</p><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="11.446ex" height="2.351ex" role="img" focusable="false" viewBox="0 -833.9 5059.1 1038.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(1230.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(2231,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(523,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(3157.6,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＝</text></g><g data-mml-node="msup" transform="translate(4157.6,0)"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mn" transform="translate(498,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container>。</p><p>显然这很符合图2中的三角形的情况，但出乎意外的是毕达哥拉斯定理对每一个任意画出的直角三角形都是对的。它是数学中一条普遍的定律。无论何时你遇到任何一个有一个直角的三角形时，你都可以应用它。反过来，如果你有一个符合毕达哥拉斯定理的三角形，那么你可以绝对地相信它是一个直角三角形。</p><p>虽然这个定理将永远与毕达哥拉斯联系在一起，但中国人和巴比伦人实际上使用这个定理还要早1000年。在这方面，注意到这一点是重要的。然而，这些文明并不知道这个定理对一切直角三角形都是对的。对于他们测试的三角形而言，它肯定是对的，但是他们无法证明它对于他们尚未测试的所有直角三角形都是对的。这个定理归属于毕达哥拉斯的理由是他第一个证明了它的普遍正确。</p><p>但是毕达哥拉斯怎样知道这个定理对于每一个直角三角形都是对的呢？他不可能期望测试无限个不同的直角三角形，然而他仍然百分之百地确信这个定理绝对正确。使他有这种信念的理由是数学证明了这个概念。寻找一个数学证明就是寻找一种认识，这种认识比任何别的训练所积累的认识都更不容置疑。最近2500年以来，驱使着数学家们的正是这种以证明的方法发现最终真理的欲望。</p><h3 id="毕达哥拉斯定理的意义"><a href="#毕达哥拉斯定理的意义" class="headerlink" title="毕达哥拉斯定理的意义"></a>毕达哥拉斯定理的意义</h3><p>毕达哥拉斯的证明是无可辩驳的，它表明他的定理对世界上一切直角三角形都是对的。这个发现是如此重要以致人们用一百头公牛作为祭品来表示对诸神的感恩。这个发现是数学史上的一个里程碑和文明史上最重要的突破之一。它有两方面的重要意义。首先，它发展了证明的思想。一个被证明了的数学结果具有比任何别的真理更可靠的真实性，因为它是一步接一步的逻辑结果。虽然哲学家泰勒斯（Thales）已经开创了某种朴素的几何证明，但毕达哥拉斯大大推进了这种思想，他能够证明深奥得多的数学结果。毕达哥拉斯定理的第二个重要性是将抽象的数学方法与有形的实体结合起来了。</p><h3 id="数学证明与科学证明"><a href="#数学证明与科学证明" class="headerlink" title="数学证明与科学证明"></a>数学证明与科学证明</h3><p>费马大定理的故事以寻找遗失的证明为中心。数学证明比我们在日常用语中非正式使用的证明概念，甚至比物理学家或化学家所理解的证明概念都远为有力和严格。科学证明和数学证明之间的差别既是极细微的，又是很深奥的。这种差别是理解自毕达哥拉斯以来每个数学家的工作的关键点。</p><p>经典的数学证明的办法是从一系列公理、陈述出发，这些陈述有些可以是假定为真的，有些则是显然真的；然后通过逻辑论证，一步接一步，最后就可能得到某个结论。如果公理是正确的，逻辑也无缺陷，那么得到的结论将是不可否定的。这个结论就是一个定理。</p><p>数学证明依靠这个逻辑过程，而且一经证明就永远是对的。数学证明是绝对的。为了正确地判断这种证明的价值，应该将它们与比其差一些的同类证明，即科学证明做一比较。在科学中，一个假设被提出来用以解释某一物理现象。如果对物理现象的观察结果与这个假设相符，这就成为这个假设成立的证据。进一步，这个假设应该不仅能描述已知的现象，而且能预言其他现象的结果。可以做实验来测试这个假设的预言能力，如果它再次继续成功，那么就有更多的证据支持这个假设。最终，证据的数量可能达到压倒性的程度，于是这个假设被接受为一个科学理论。</p><h2 id="一些有趣的数学问题"><a href="#一些有趣的数学问题" class="headerlink" title="一些有趣的数学问题"></a>一些有趣的数学问题</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com//NeatReader-1666953318613.png" alt="NeatReader-1666953318613"></p><h3 id="图3-缺损棋盘问题。"><a href="#图3-缺损棋盘问题。" class="headerlink" title="图3　缺损棋盘问题。"></a>图3　缺损棋盘问题。</h3><p>我们有一张移走两个对角方块的棋盘，它只剩下62个方块。现在我们取31张多米诺骨牌，每一张骨牌恰好能覆盖住2个方块。要问的是：是否可能将这31张多米诺骨牌摆得使它们覆盖住棋盘上的62个方块？</p><p>对这个问题有两种处理方法：</p><p>（1）科学的处理</p><p>科学家将试图通过试验来解答这个问题，在试过几十种摆法后会发现都失败了。最终，科学家相信有足够的证据说棋盘不能被覆盖。然而，科学家永远也不能肯定确实是这种情形，因为可能有某种还没有试过的摆法却能获得成功。摆法有几百万种，只可能尝试其中的一小部分。“这个覆盖不可能做到”的结论是一种基于试验得出的结论，而科学家将不得不承认有这种前景：某天这个理论可能被推翻。</p><p>（2）数学的处理</p><p>数学家试图通过逻辑论证来回答这个问题，这种论证将推导出无可怀疑地正确并且永远不会引起争议的结论。下面就是一个这样的论证：</p><p>●　棋盘上被移去的两个角都是白色的。于是现在有32个黑方块而只有30个白方块。</p><p>●　每块多米诺骨牌覆盖2个相邻的方块，而相邻方块的颜色总是不同的，即1块黑色和1块白色。</p><p>●　于是，不管如何摆骨牌，最先放在棋盘上的30张多米诺骨牌必定覆盖30个白色方块和30个黑色方块。</p><p>●　结果，总是留给你1张多米诺骨牌和2个剩下的黑色方块。</p><p>●　但是，请记住每张多米诺骨牌覆盖2个相邻的方块，而相邻方块的颜色是不同的。可是这2个剩下的方块颜色是相同的，所以它们不可能被剩下的1张多米诺骨牌覆盖。于是，覆盖这棋盘是不可能的！</p><hr><h3 id="概率问题"><a href="#概率问题" class="headerlink" title="概率问题"></a>概率问题</h3><p>概率问题有时是会引起争议的，因为对这种问题数学的答案（也即正确的答案）常常会与直觉所暗示的相反。直觉的这种失败很可能会使人感到惊奇，因为“适者生存”的法则应该提供强烈的进化压力，使人脑自然而然地有能力分析概率问题。你可以想象我们的祖先悄悄地靠近一头幼鹿并盘算着是否发动进攻时的情景。附近有一头成年牡鹿，它准备保卫其后代并使攻击者受到伤害的危险率是多少？另一方面，如果经判断这一次太危险，那么，出现更好的觅食时机的机会又是多少？分析概率的才智应该是我们的遗传构成之一，不过我们的直觉常常误导我们。</p><p>最违背直觉的概率问题之一是关于共有生日的可能性问题。假想有一个足球场上运动员和裁判一起共23人。那么，这23人中的任何2个人有相同的生日的概率是多少？23个人，而可选择的生日有365个，似乎极不可能会有人共有同一个生日。如果请人估计这个概率是多少的话，绝大多数人恐怕会猜至多是10％。事实上，正确的回答是刚好超过50％——这就是说，根据概率的测算，球场上有2个人有相同生日的可能性比没有人共有生日的可能性更大。</p><p>出现这么高概率的原因是将人们配成一对对的方式的总数总是大于人的总数。当我们寻找共有的生日时，我们需要找成对的人而不是单个的人。因为球场上只有23个人，所以有253种配对。例如，第一个人可以与其余的22个人中的任何一个配对，这样一开始就给出22种配对。然后，第二个人可以与剩下的21人中的任何一个配对（我们已经计算过第二个人与第一个人的配对，所以可能的配对数要减去1），这样给出另外的21种配对。接着，第三个人可以与剩下的20人中的任何一个配对，再给出另外的20种配对，以此类推直到最终我们得到总共253种配对。</p><p>在23人的人群中出现一个共有的生日的概率大于50％这个事实，凭直觉似乎是不正确的，但它在数学上则是无可否认的。诸如此类的奇怪的概率恰恰是赌注登记经纪人和赌棍们赖以掠取粗心上当者钱财的依据。当你下次参加一个23人以上的聚会时，你可以押赌注来赌房间中一定有2个人的生日是相同的。请注意对23个人的人群来说这个概率只是略大于50％，而当人数增加时这个概率迅速上升。因此，对一个有30人的聚会来说，赌其中将有2人有相同的生日肯定是值得的。</p><hr><h3 id="关于-pi"><a href="#关于-pi" class="headerlink" title="关于 $\pi$"></a>关于 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.29ex" height="1ex" role="img" focusable="false" viewBox="0 -431 570 442"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D70B" d="M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z"></path></g></g></g></svg></mjx-container></h3><p>真正的值接近于3.14159265358979323846，但即使这个值也只不过是一个近似值。事实上，π不可能被精确地写出，因为小数位会永远延续下去且无任何模式。这种随机的模式有一个美妙的特点，即它可以利用一个极有规则的方程来计算：</p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com//NeatReader-1666954929737.png" alt="NeatReader-1666954929737"></p><p>通过计算开首的几项，你会得到π的一个非常粗糙的值，但若计算越来越多的项，就会达到越来越准确的值。</p><hr><h3 id="关于质数"><a href="#关于质数" class="headerlink" title="关于质数"></a>关于质数</h3><p>所有的质数（除2外）可以分成两类，一类等于4n＋1，另一类等于4n－1，其中n等于某个整数。所以13属于前面的一类（4×3＋1），而19属于后面的一类（4×5－1）。</p><hr><h3 id="关于蝉"><a href="#关于蝉" class="headerlink" title="关于蝉"></a>关于蝉</h3><p>然而，实际上我公布的非质数将会有100位以上的数字，这就使找出它的质因数的任务变得几乎是不可能的。即使用世界上最快的计算机来将这个巨大的非质数（打乱信息的密钥）分解成它的两个质因数（整理信息的密钥），也要花几年时间才能得到答案。于是，为挫败外国间谍，我仅仅需要每年一次更改我的密钥。每年一次我宣布我的巨大的非质数，任何人要想尝试整理我的信息，就必须从头开始设法算出这两个质因数。</p><p>除了在谍报活动中发现应用外，质数也出现在自然界中。在昆虫中十七年蝉的生命周期是最长的。它们独有的生命周期开始于地下，蝉蛹在地下耐心地吮吸树根中的汁水。然后，经过17年的等待，成年的蝉钻出地面，无数的蝉密集在一起，一时间掩盖了一切景色。在几个星期中，它们交配，产卵，然后死去。</p><p>使生物学家困惑的问题是：“为什么这种蝉的生命周期如此之长？”以及“生命周期的年数是质数这一点有无特殊的意义？”另一种昆虫十三年蝉，每隔13年密集一次，也暗示生命周期的年数为质数也许有着某种进化论意义上的优势。</p><p>有一种理论假设蝉有一种生命周期也较长的寄生物，蝉要设法避开这种寄生物。如果这种寄生物的生命周期比方说是2年，那么蝉就要避开能被2整除的生命周期，否则寄生物和蝉就会定期相遇。类似地，如果寄生物的生命周期是3年，那么蝉要避开能被3整除的生命周期，否则寄生物和蝉又会定期相遇。所以最终为了避免遇到它的寄生物，蝉的最佳策略是使它的生命周期的年数延长为一个质数。由于没有数能整除17，十七年蝉将很难得遇上它的寄生物。如果寄生物的生命周期为2年，那么它们每隔34年才遇上一次；倘若寄生物的生命周期更长一些，比方说16年，那么它们每隔272（16×17）年才遇上一次。</p><hr><h3 id="14-15难题的证明"><a href="#14-15难题的证明" class="headerlink" title="14-15难题的证明"></a>14-15难题的证明</h3><p>洛伊德却始终坚信他永远不需要付出这1000美元奖金，因为他知道不可能做到只把两块塑料片调换好而不破坏游戏中其他塑料片之间的次序。采用数学家用来证明某个特定的方程无解所用的同样方法，洛伊德能够证明他的“14—15”难题也是不能解的。</p><p>洛伊德的证明首先要定义一个用来衡量游戏中无次序程度的量——错序参数Dp。一个给定排列的错序参数等于次序错误的塑料片对的个数。所以，对正确的排列，如图15（a）中所示，Dp＝0。因为任何两片之间的次序都是对的。</p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com//00060.jpg" alt="img"></p><p>图15　通过滑动调换各片，可以做出各种各样的错序排列。对每种排列可以用错序参数Dp来衡量错序的程度。</p><p>如果从次序正常的排列开始，然后将塑料片滑动调换，那么达到图15（b）中所示的排列是比较容易的。看一下片12和11，它们之间的次序是错的。显然，片11应该在片12之前，所以这一对片的次序错误。次序错误的片对一共有下面这些：（12，11），（15，13），（15，14），（15，11），（13，11）和（14，11）。这个排列中次序错误的片对有6对，所以Dp＝6。（注意：片10和片12彼此相邻，这也是不正确的，但是它们的次序并没有错，因而这种片对在错序参数中不予计算。）</p><p>再多做一些滑动，我们就到达图15（c）中所示的排列。如果你算一下次序错误的片对的个数，那么你将发现Dp＝12。需注意的要点是，在所有的情形（a）、（b）和（c）中，错序参数的值均为偶数（0，6和12）。事实上，如果你从正确的排列开始，对它进行重新排列，那么上述结论总是对的。只要那个空着的方格在结束时位于右下角，那么不管滑动调换多少次，最后Dp总是偶数值。因此，对于从最初的正确的排列出发而得的排列来说，错序参数的值为偶数是一个共同的性质。在数学中，对于所述对象不管施行多少次变换仍然能保持成立的性质称为不变性质或不变量。</p><p>然而，请仔细研究一下洛伊德出售的那种排列，其中14和15被调换了次序，所以它的错序参数是1，即Dp＝1，唯一的次序错误的片对是14和15。对于洛伊德的排列，错序参数是一个奇数值！但是我们知道，从正确的排列出发而得的排列其错序参数值应是偶数。于是，结论是洛伊德的排列不可能是从正确的排列出发得到的，反过来说，也不可能从洛伊德的排列返回到正确的排列——洛伊德的1000美元是安全的。</p><h2 id="证明费马大定理的逻辑链"><a href="#证明费马大定理的逻辑链" class="headerlink" title="证明费马大定理的逻辑链"></a>证明费马大定理的逻辑链</h2><p>1984年秋，一群优秀的数论家聚集在一起参加在德国黑森林州中部的一个小城奥伯沃尔法赫举行的讨论会。他们聚在一起讨论椭圆方程研究中的各种突破性工作，自然也有些演说者会偶尔报告他们在证明谷山－志村猜想上所取得的小进展。其中一位演说者——来自萨尔布吕肯的格哈德·弗赖（Gerhard Frey）虽然没有对如何解决这个猜想提供任何新的想法，但是他确实提出了引人注目的论断，即如果有人能证明谷山－志村猜想，那么他们也立即能证明费马大定理。</p><p>当弗赖站起来准备演讲时，他先写下了费马方程：</p><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="11.423ex" height="2.161ex" role="img" focusable="false" viewBox="0 -750 5048.8 955"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,363) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mi" transform="translate(1079.3,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＋</text></g><g data-mml-node="msup" transform="translate(2079.3,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(523,363) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mi" transform="translate(3076.5,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＝</text></g><g data-mml-node="msup" transform="translate(4076.5,0)"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mi" transform="translate(498,363) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></svg></mjx-container>，这里n＞2。</p><p>费马大定理说这个方程不存在整数解，但弗赖则探索如果大定理是错的，即至少有一个解，那么会出现什么结果。弗赖对于他的这个假设的不寻常的解可能是怎样的毫无想法，所以他把这些未知数用字母编号为A，B和C：</p><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="14.602ex" height="2.366ex" role="img" focusable="false" viewBox="0 -846 6454 1046"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mi" transform="translate(783,363) scale(0.707)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g></g><g data-mml-node="mi" transform="translate(1460.9,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＋</text></g><g data-mml-node="msup" transform="translate(2460.9,0)"><g data-mml-node="mi"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mi" transform="translate(792,363) scale(0.707)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g></g><g data-mml-node="mi" transform="translate(3930.8,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＝</text></g><g data-mml-node="msup" transform="translate(4930.8,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mi" transform="translate(845.3,363) scale(0.707)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g></g></g></g></svg></mjx-container>。</p><p>然后弗赖开始“重新安排”这个方程。这是一个严格的数学程序，它改变这个方程的外貌但保持它的完整。通过一系列熟练的复杂的演算，弗赖使具有这个假设解的费马方程变成为：</p><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="33.496ex" height="2.378ex" role="img" focusable="false" viewBox="0 -846 14805.3 1051"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(523,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(926.6,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＝</text></g><g data-mml-node="msup" transform="translate(1926.6,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g><g data-mml-node="mi" transform="translate(2935.1,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＋</text></g><g data-mml-node="mi" transform="translate(3935.1,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">（</text></g><g data-mml-node="msup" transform="translate(4935.1,0)"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mi" transform="translate(783,363) scale(0.707)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g></g><g data-mml-node="mi" transform="translate(6396,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">－</text></g><g data-mml-node="msup" transform="translate(7396,0)"><g data-mml-node="mi"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mi" transform="translate(792,363) scale(0.707)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g></g><g data-mml-node="mi" transform="translate(8865.9,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">）</text></g><g data-mml-node="msup" transform="translate(9865.9,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(10874.5,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">－</text></g><g data-mml-node="msup" transform="translate(11874.5,0)"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mi" transform="translate(783,363) scale(0.707)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g></g><g data-mml-node="msup" transform="translate(13335.4,0)"><g data-mml-node="mi"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mi" transform="translate(792,363) scale(0.707)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g></g></g></g></svg></mjx-container>。</p><p>虽然这种重新安排似乎与原来的方程非常地不同，但它是假设有解的直接结果。也就是说，如果（注意这是一个大假设）费马方程有一个解，即如果费马大定理是错的，那么这个重新排列得到的方程也一定存在。起初，弗赖的听众并未对他的重新排列特别留神，但接着，他指出这个新方程事实上是一个椭圆方程，尽管它相当复杂和古怪。椭圆方程的形式为：</p><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="20.151ex" height="2.351ex" role="img" focusable="false" viewBox="0 -833.9 8906.7 1038.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(523,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(926.6,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＝</text></g><g data-mml-node="msup" transform="translate(1926.6,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g><g data-mml-node="mi" transform="translate(2935.1,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＋</text></g><g data-mml-node="mi" transform="translate(3935.1,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="msup" transform="translate(4464.1,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(5472.7,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＋</text></g><g data-mml-node="mi" transform="translate(6472.7,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mi" transform="translate(6901.7,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(7473.7,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＋</text></g><g data-mml-node="mi" transform="translate(8473.7,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g></g></g></svg></mjx-container>，</p><p>但如果我们令</p><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="18.979ex" height="2.366ex" role="img" focusable="false" viewBox="0 -846 8388.8 1046"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(529,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＝</text></g><g data-mml-node="msup" transform="translate(1529,0)"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mi" transform="translate(783,363) scale(0.707)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g></g><g data-mml-node="mi" transform="translate(2989.9,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">－</text></g><g data-mml-node="msup" transform="translate(3989.9,0)"><g data-mml-node="mi"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mi" transform="translate(792,363) scale(0.707)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g></g><g data-mml-node="mi" transform="translate(5459.8,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(6459.8,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mi" transform="translate(6888.8,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＝</text></g><g data-mml-node="mn" transform="translate(7888.8,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></svg></mjx-container>，<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="12.639ex" height="2.366ex" role="img" focusable="false" viewBox="0 -846 5586.3 1046"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(433,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＝</text></g><g data-mml-node="mo" transform="translate(1655.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(2655.4,0)"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mi" transform="translate(783,363) scale(0.707)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g></g><g data-mml-node="msup" transform="translate(4116.4,0)"><g data-mml-node="mi"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mi" transform="translate(792,363) scale(0.707)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g></g></g></g></svg></mjx-container>，</p><p>则很容易理解弗赖方程的椭圆性质。</p><p>通过将费马方程转变为一个椭圆方程，弗赖将费马大定理和谷山－志村猜想联系了起来。然后，弗赖向他的听众指出，他的由费马方程的一个解做出的椭圆方程是非常稀奇古怪的。事实上，弗赖声称他的椭圆方程是如此不可思议以至于它的存在产生的影响将毁灭谷山－志村猜想。</p><p>记住弗赖的椭圆方程只不过是一个虚拟的方程，它的存在是以费马大定理是错的这个事实为条件的。然而，如果弗赖的椭圆方程确实存在，那么它是如此地古怪以至于它似乎不可能与一个模形式相关。但是谷山－志村猜想断言每一个椭圆方程必定与一个模形式相关。于是，弗赖方程的存在就否定了谷山－志村猜想。</p><p>换言之，弗赖的推理如下：</p><p>（1）当（且仅当）费马大定理是错的，弗赖的椭圆方程存在。</p><p>（2）弗赖的椭圆方程是如此地古怪以致它绝不可能被模形式化。</p><p>（3）谷山－志村断言每一个椭圆方程必定可以模形式化。</p><p>（4）因而，谷山－志村猜想必定是错的！</p><p>另一种选择，也是更重要的，弗赖能够反方向进行他的推理：</p><p>（1）如果谷山－志村猜想能被证明是对的，那么每一个椭圆方程必定可以模形式化。</p><p>（2）如果每一个椭圆方程必定可以模形式化，那么弗赖的椭圆方程就不可能存在。</p><p>（3）如果弗赖的椭圆方程不存在，那么费马方程不能有解。</p><p>（4）因而费马大定理是对的！</p><p>格哈德·弗赖最终得到了戏剧性的结论：费马大定理的真实性将是谷山－志村猜想一经证明之后的直接结果。弗赖断言，如果数学家能证明谷山－志村猜想，那么他们将自动地证明了费马大定理。几百年来第一次，世界上最坚硬的数学问题看起来变得脆弱了。根据弗赖的说法，证明谷山－志村猜想是证明费马大定理的唯一障碍。</p><p>费马大定理现在已经不可摆脱地与谷山－志村猜想联系在一起了，如果有人能证明每一个椭圆方程是模形式，那么这就隐含费马方程无解，于是立即证明了费马大定理。</p><h2 id="安德鲁·怀尔斯"><a href="#安德鲁·怀尔斯" class="headerlink" title="安德鲁·怀尔斯"></a>安德鲁·怀尔斯</h2><p>在1963年，当时10岁的安德鲁·怀尔斯已经着迷于数学了。他说道：“在学校里我喜欢做题目，我把它们带回家，编写成我自己的新题目。不过我以前找到的最好的题目是在我们的地区图书馆发现的。”</p><p>一天，当他从学校漫步回家时，小怀尔斯决定到弥尔顿路上的图书馆去。与大学里的图书馆相比，这里的图书相当匮乏，但它却藏有大量智力测验的书籍，正是这些书籍常常引起安德鲁的注意。这些书中含有各种难解的科学难题和数学之谜，而每个问题的解答可能会扼要地展示在最后几页的某个地方。但是这一次安德鲁被一本书吸引住了，这本书只有一个问题而没有解答。</p><p>这本书就是埃里克·坦普尔·贝尔（Eric Temple Bell）写的《大问题》（The Last Problem），它叙述了一个数学问题的历史，这个问题的根子在古希腊，但是达到成熟是在17世纪。正是在那个时候，伟大的法国数学家皮埃尔·德·费马（Pierre de Fermat）于无意之中使它成了此后岁月中的一个挑战性问题。</p><h3 id="费马大定理的破解者"><a href="#费马大定理的破解者" class="headerlink" title="费马大定理的破解者"></a>费马大定理的破解者</h3><p>那是1986年夏末的一个傍晚,怀尔斯在一个顶楼秘密地开始了对谷山-志村猜想的证明，通过运用和改造科利瓦金－弗莱切方法（这个方法可以将怀尔斯的论证从椭圆方程的第一项扩展到椭圆方程的所有各项，并且有可能它对每一个椭圆方程都有效。），用时8年完成了对谷山-志村猜想的证明，从而也证明了费马大定理。并于1994年送出证明论文手稿，这两篇论文总共有130页，是历史上核查得最彻底的数学稿件，最终发表在《数学年刊》（Annals of Mathematics）上（1995年5月）。</p><h3 id="对费马大定理证明地意义"><a href="#对费马大定理证明地意义" class="headerlink" title="对费马大定理证明地意义"></a>对费马大定理证明地意义</h3><p>在怀尔斯经受严峻考验的8年中，他实际上汇集了20世纪数论中所有的突破性工作，并把它们融合成一个万能的证明。他创造了全新的数学技术，并将它们和传统的技术以人们从未考虑过的方式结合起来。通过这样的做法，他开辟了处理为数众多的其他问题的新思路。按照肯·里贝特的说法，这个证明是现代数学的完美综合，并将对未来产生影响：“我想假如有人被遗弃在一个无人的荒岛上，而他只带着这篇论文，那么他会有大量的精神食粮。随意翻到某一页，上面可能是对德利涅（Deligne）的某个基本定理的简明描述；再翻到另一页，也许是赫勒古阿切（Hellegouarch）的一个定理——所有这些内容都只被短暂地使用一下就继续转向下一个环节。”</p><h2 id="附录：一些其他的证明"><a href="#附录：一些其他的证明" class="headerlink" title="附录：一些其他的证明"></a>附录：一些其他的证明</h2><h3 id="1．毕达哥拉斯定理的证明"><a href="#1．毕达哥拉斯定理的证明" class="headerlink" title="1．毕达哥拉斯定理的证明"></a>1．毕达哥拉斯定理的证明</h3><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com//00004.jpg" alt="img"></p><p>这个证明的目的是证明毕达哥拉斯定理对一切直角三角形都是对的。上图所示的三角形可以代表任何直角三角形，因为它的边长并未具体指明，而是用字母x，y和z来代表。</p><p>同样如上图，四个恒等的直角三角形和一个倾斜的正方形一起组合成一个大的正方形，正是这个大正方形的面积是证明的关键。</p><p>这个大正方形的面积可以用两种方法来计算。</p><p>方法1：将这个大的正方形作为一个整体来计算它的面积。它的每条边长是x＋y。所以，<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="28.277ex" height="2.351ex" role="img" focusable="false" viewBox="0 -833.9 12498.6 1038.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">大</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">正</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">方</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">形</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(5000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">面</text></g><g data-mml-node="mi" transform="translate(6000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">积</text></g><g data-mml-node="mi" transform="translate(7000,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＝</text></g><g data-mml-node="mi" transform="translate(8000,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">（</text></g><g data-mml-node="mi" transform="translate(9000,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(9572,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＋</text></g><g data-mml-node="mi" transform="translate(10572,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="msup" transform="translate(11062,0)"><g data-mml-node="mi"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">）</text></g><g data-mml-node="mn" transform="translate(1033,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container>。</p><p>方法2：计算出大正方形各个部分的面积。每个三角形的面积是<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex;" xmlns="http://www.w3.org/2000/svg" width="1.795ex" height="2.737ex" role="img" focusable="false" viewBox="0 -864.9 793.6 1209.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(220,394) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mn" transform="translate(220,-345) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><rect width="553.6" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container>xy，即<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex;" xmlns="http://www.w3.org/2000/svg" width="1.795ex" height="2.737ex" role="img" focusable="false" viewBox="0 -864.9 793.6 1209.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(220,394) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mn" transform="translate(220,-345) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><rect width="553.6" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container>×底×高。倾斜的正方形的面积是<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.04ex" height="1.912ex" role="img" focusable="false" viewBox="0 -833.9 901.6 844.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mn" transform="translate(498,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container>。于是，</p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com//00052.jpg" alt="img"></p><p>方法1和方法2给出两个不同的表达式。然而，这两个表达式必须是等价的，因为它们代表同一个面积。于是，</p><p>方法1得出的面积＝方法2得出的面积</p><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex;" xmlns="http://www.w3.org/2000/svg" width="26.597ex" height="2.737ex" role="img" focusable="false" viewBox="0 -864.9 11755.7 1209.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">（</text></g><g data-mml-node="mi" transform="translate(1000,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(1572,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＋</text></g><g data-mml-node="mi" transform="translate(2572,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="msup" transform="translate(3062,0)"><g data-mml-node="mi"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">）</text></g><g data-mml-node="mn" transform="translate(1033,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(4498.6,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＝</text></g><g data-mml-node="mn" transform="translate(5498.6,0)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g><g data-mml-node="mi" transform="translate(5998.6,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">（</text></g><g data-mml-node="mfrac" transform="translate(6998.6,0)"><g data-mml-node="mn" transform="translate(220,394) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mn" transform="translate(220,-345) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><rect width="553.6" height="60" x="120" y="220"></rect></g><g data-mml-node="mi" transform="translate(7792.1,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(8364.1,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(8854.1,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">）</text></g><g data-mml-node="mi" transform="translate(9854.1,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＋</text></g><g data-mml-node="msup" transform="translate(10854.1,0)"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mn" transform="translate(498,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container>。</p><p>括弧可以被展开并简化。于是，</p><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="22.535ex" height="2.351ex" role="img" focusable="false" viewBox="0 -833.9 9960.7 1038.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(1008.6,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＋</text></g><g data-mml-node="msup" transform="translate(2008.6,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(523,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(2935.1,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＋</text></g><g data-mml-node="mn" transform="translate(3935.1,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(4435.1,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(5007.1,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(5497.1,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＝</text></g><g data-mml-node="mn" transform="translate(6497.1,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(6997.1,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(7569.1,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(8059.1,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＋</text></g><g data-mml-node="msup" transform="translate(9059.1,0)"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mn" transform="translate(498,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container></p><p>两边的2xy可以抵消。所以，我们得到</p><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="10.943ex" height="2.351ex" role="img" focusable="false" viewBox="0 -833.9 4836.7 1038.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(1008.6,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＋</text></g><g data-mml-node="msup" transform="translate(2008.6,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(523,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(2935.1,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＝</text></g><g data-mml-node="msup" transform="translate(3935.1,0)"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mn" transform="translate(498,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container>，</p><p>这就是毕达哥拉斯定理！</p><p>上面的论证基于这样一个事实：不论用什么方法计算，大正方形的面积必须是相同的。于是我们从逻辑上推导出这相同的面积的两个表达式，使它们相等起来，最终，必然的结论是<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="58.084ex" height="2.351ex" role="img" focusable="false" viewBox="0 -833.9 25673.3 1038.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(1008.6,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＋</text></g><g data-mml-node="msup" transform="translate(2008.6,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(523,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(2935.1,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＝</text></g><g data-mml-node="msup" transform="translate(3935.1,0)"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mn" transform="translate(498,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(4836.7,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(5836.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">即</text></g><g data-mml-node="mi" transform="translate(6836.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">斜</text></g><g data-mml-node="mi" transform="translate(7836.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">边</text></g><g data-mml-node="mi" transform="translate(8836.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(9836.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">平</text></g><g data-mml-node="mi" transform="translate(10836.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">方</text></g><g data-mml-node="msup" transform="translate(11836.7,0)"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mn" transform="translate(498,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(12738.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">等</text></g><g data-mml-node="mi" transform="translate(13738.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">于</text></g><g data-mml-node="mi" transform="translate(14738.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">其</text></g><g data-mml-node="mi" transform="translate(15738.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">他</text></g><g data-mml-node="mi" transform="translate(16738.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">两</text></g><g data-mml-node="mi" transform="translate(17738.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">边</text></g><g data-mml-node="mi" transform="translate(18738.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(19738.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">平</text></g><g data-mml-node="mi" transform="translate(20738.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">方</text></g><g data-mml-node="mi" transform="translate(21738.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">和</text></g><g data-mml-node="msup" transform="translate(22738.2,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(23746.8,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＋</text></g><g data-mml-node="msup" transform="translate(24746.8,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(523,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container>。</p><p>这个论证对一切直角三角形成立。在我们的论证中，三角形的边是用x，y和z表示的，因而可以代表任何直角三角形的边。</p><h3 id="2．-sqrt-2-是无理数的欧几里得证明"><a href="#2．-sqrt-2-是无理数的欧几里得证明" class="headerlink" title="2．$\sqrt{2}$是无理数的欧几里得证明"></a>2．<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.225ex;" xmlns="http://www.w3.org/2000/svg" width="3.061ex" height="2.398ex" role="img" focusable="false" viewBox="0 -960.5 1353 1060"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msqrt"><g transform="translate(853,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(0,100.5)"><path data-c="221A" d="M95 178Q89 178 81 186T72 200T103 230T169 280T207 309Q209 311 212 311H213Q219 311 227 294T281 177Q300 134 312 108L397 -77Q398 -77 501 136T707 565T814 786Q820 800 834 800Q841 800 846 794T853 782V776L620 293L385 -193Q381 -200 366 -200Q357 -200 354 -197Q352 -195 256 15L160 225L144 214Q129 202 113 190T95 178Z"></path></g><rect width="500" height="60" x="853" y="840.5"></rect></g></g></g></svg></mjx-container>是无理数的欧几里得证明</h3><p>欧几里得的目的是证明<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.225ex;" xmlns="http://www.w3.org/2000/svg" width="3.061ex" height="2.398ex" role="img" focusable="false" viewBox="0 -960.5 1353 1060"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msqrt"><g transform="translate(853,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(0,100.5)"><path data-c="221A" d="M95 178Q89 178 81 186T72 200T103 230T169 280T207 309Q209 311 212 311H213Q219 311 227 294T281 177Q300 134 312 108L397 -77Q398 -77 501 136T707 565T814 786Q820 800 834 800Q841 800 846 794T853 782V776L620 293L385 -193Q381 -200 366 -200Q357 -200 354 -197Q352 -195 256 15L160 225L144 214Q129 202 113 190T95 178Z"></path></g><rect width="500" height="60" x="853" y="840.5"></rect></g></g></g></svg></mjx-container>不能写成一个分数。由于他使用的是反证法，所以第一步是假定相反的事实是真的，即<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.225ex;" xmlns="http://www.w3.org/2000/svg" width="3.061ex" height="2.398ex" role="img" focusable="false" viewBox="0 -960.5 1353 1060"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msqrt"><g transform="translate(853,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(0,100.5)"><path data-c="221A" d="M95 178Q89 178 81 186T72 200T103 230T169 280T207 309Q209 311 212 311H213Q219 311 227 294T281 177Q300 134 312 108L397 -77Q398 -77 501 136T707 565T814 786Q820 800 834 800Q841 800 846 794T853 782V776L620 293L385 -193Q381 -200 366 -200Q357 -200 354 -197Q352 -195 256 15L160 225L144 214Q129 202 113 190T95 178Z"></path></g><rect width="500" height="60" x="853" y="840.5"></rect></g></g></g></svg></mjx-container>可以写成某个未知的分数。用p/q来代表这个假设的分数，其中p和q是两个整数。</p><p>在开始证明本身之前，需要对分数和偶数的某些性质有个基本的了解。</p><p>（1）如果任取一个非零整数并且用2去乘它，那么得到的新数一定是偶数。这基本上就是偶数的定义。</p><p>（2）如果已知一个整数的平方是偶数，那么这个整数本身一定是偶数。</p><p>（3）最后，分数可以简化：<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex;" xmlns="http://www.w3.org/2000/svg" width="2.595ex" height="2.737ex" role="img" focusable="false" viewBox="0 -864.9 1147.1 1209.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(220,394) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z" transform="translate(500,0)"></path></g><g data-mml-node="mn" transform="translate(220,-345) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" transform="translate(500,0)"></path></g><rect width="907.1" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container>与<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex;" xmlns="http://www.w3.org/2000/svg" width="2.595ex" height="2.737ex" role="img" focusable="false" viewBox="0 -864.9 1147.1 1209.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(396.8,394) scale(0.707)"><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z"></path></g><g data-mml-node="mn" transform="translate(220,-345) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(500,0)"></path></g><rect width="907.1" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container>是相等的，只要用公因数2去除<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex;" xmlns="http://www.w3.org/2000/svg" width="2.595ex" height="2.737ex" role="img" focusable="false" viewBox="0 -864.9 1147.1 1209.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(220,394) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z" transform="translate(500,0)"></path></g><g data-mml-node="mn" transform="translate(220,-345) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" transform="translate(500,0)"></path></g><rect width="907.1" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container>的分子和分母。进一步，<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex;" xmlns="http://www.w3.org/2000/svg" width="2.595ex" height="2.737ex" role="img" focusable="false" viewBox="0 -864.9 1147.1 1209.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(396.8,394) scale(0.707)"><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z"></path></g><g data-mml-node="mn" transform="translate(220,-345) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(500,0)"></path></g><rect width="907.1" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container>与<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.816ex;" xmlns="http://www.w3.org/2000/svg" width="1.795ex" height="2.79ex" role="img" focusable="false" viewBox="0 -872.7 793.6 1233.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(220,394) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g><g data-mml-node="mn" transform="translate(220,-345) scale(0.707)"><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path></g><rect width="553.6" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container>是相等的，而!<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.816ex;" xmlns="http://www.w3.org/2000/svg" width="1.795ex" height="2.79ex" role="img" focusable="false" viewBox="0 -872.7 793.6 1233.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(220,394) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g><g data-mml-node="mn" transform="translate(220,-345) scale(0.707)"><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path></g><rect width="553.6" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container>又与<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.816ex;" xmlns="http://www.w3.org/2000/svg" width="1.795ex" height="2.773ex" role="img" focusable="false" viewBox="0 -864.9 793.6 1225.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(220,394) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mn" transform="translate(220,-345) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g><rect width="553.6" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container>是相等的。然而，<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.816ex;" xmlns="http://www.w3.org/2000/svg" width="1.795ex" height="2.773ex" role="img" focusable="false" viewBox="0 -864.9 793.6 1225.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(220,394) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mn" transform="translate(220,-345) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g><rect width="553.6" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container>不能再简化，因为2和3没有公因数。即不可能将一个分数永远不断地简化。</p><p>现在，记住欧几里得相信<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.225ex;" xmlns="http://www.w3.org/2000/svg" width="3.061ex" height="2.398ex" role="img" focusable="false" viewBox="0 -960.5 1353 1060"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msqrt"><g transform="translate(853,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(0,100.5)"><path data-c="221A" d="M95 178Q89 178 81 186T72 200T103 230T169 280T207 309Q209 311 212 311H213Q219 311 227 294T281 177Q300 134 312 108L397 -77Q398 -77 501 136T707 565T814 786Q820 800 834 800Q841 800 846 794T853 782V776L620 293L385 -193Q381 -200 366 -200Q357 -200 354 -197Q352 -195 256 15L160 225L144 214Q129 202 113 190T95 178Z"></path></g><rect width="500" height="60" x="853" y="840.5"></rect></g></g></g></svg></mjx-container>不可能写成一个分数。然而，由于他采用反证法，所以他先假定分数p/q确实存在，然后他去揭示它的存在所产生的结果：</p><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.225ex;" xmlns="http://www.w3.org/2000/svg" width="3.061ex" height="2.398ex" role="img" focusable="false" viewBox="0 -960.5 1353 1060"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msqrt"><g transform="translate(853,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(0,100.5)"><path data-c="221A" d="M95 178Q89 178 81 186T72 200T103 230T169 280T207 309Q209 311 212 311H213Q219 311 227 294T281 177Q300 134 312 108L397 -77Q398 -77 501 136T707 565T814 786Q820 800 834 800Q841 800 846 794T853 782V776L620 293L385 -193Q381 -200 366 -200Q357 -200 354 -197Q352 -195 256 15L160 225L144 214Q129 202 113 190T95 178Z"></path></g><rect width="500" height="60" x="853" y="840.5"></rect></g></g></g></svg></mjx-container>＝p/q，</p><p>如果我们将两边平方，那么</p><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="8.794ex" height="2.452ex" role="img" focusable="false" viewBox="0 -833.9 3886.8 1083.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＝</text></g><g data-mml-node="msup" transform="translate(1500,0)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mn" transform="translate(536,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2439.6,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"></path></g></g><g data-mml-node="msup" transform="translate(2939.6,0)"><g data-mml-node="mi"><path data-c="1D45E" d="M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mn" transform="translate(543.7,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container>，</p><p>这个等式很容易重新安排，得出</p><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="7.662ex" height="2.339ex" role="img" focusable="false" viewBox="0 -833.9 3386.8 1033.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="msup" transform="translate(500,0)"><g data-mml-node="mi"><path data-c="1D45E" d="M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mn" transform="translate(543.7,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(1447.3,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＝</text></g><g data-mml-node="msup" transform="translate(2447.3,0)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mn" transform="translate(536,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container>。</p><p>现在根据第（1）点我们知道p2必定是偶数。此外，根据第（2）点我们知道p本身也必须是偶数。但是，如果p是偶数，那么它可以写成2m，其中m是某个别的整数。这是从第（1）点可以得出的结论。将这再代回到等式中，我们得到</p><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="20.535ex" height="2.339ex" role="img" focusable="false" viewBox="0 -833.9 9076.4 1033.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="msup" transform="translate(500,0)"><g data-mml-node="mi"><path data-c="1D45E" d="M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mn" transform="translate(543.7,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(1447.3,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＝</text></g><g data-mml-node="mi" transform="translate(2447.3,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">（</text></g><g data-mml-node="mn" transform="translate(3447.3,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(3947.3,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="msup" transform="translate(4825.3,0)"><g data-mml-node="mi"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">）</text></g><g data-mml-node="mn" transform="translate(1033,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(6261.8,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＝</text></g><g data-mml-node="mn" transform="translate(7261.8,0)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g><g data-mml-node="msup" transform="translate(7761.8,0)"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(911,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container>，</p><p>用2除两边，我们得到</p><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="10.773ex" height="2.339ex" role="img" focusable="false" viewBox="0 -833.9 4761.8 1033.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D45E" d="M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mn" transform="translate(543.7,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(947.3,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＝</text></g><g data-mml-node="mn" transform="translate(1947.3,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="msup" transform="translate(2447.3,0)"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(911,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(3761.8,0)"><g data-mml-node="mo"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">。</text></g></g></g></g></svg></mjx-container></p><p>但是根据我们前面用过的同样的论证，我们知道q2必须是偶数，因而q本身必须是偶数。如果确实是这样，那么q可以写成2n，其中n是某个别的整数。如果我们回到开始的地方，那么</p><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.225ex;" xmlns="http://www.w3.org/2000/svg" width="3.061ex" height="2.398ex" role="img" focusable="false" viewBox="0 -960.5 1353 1060"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msqrt"><g transform="translate(853,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(0,100.5)"><path data-c="221A" d="M95 178Q89 178 81 186T72 200T103 230T169 280T207 309Q209 311 212 311H213Q219 311 227 294T281 177Q300 134 312 108L397 -77Q398 -77 501 136T707 565T814 786Q820 800 834 800Q841 800 846 794T853 782V776L620 293L385 -193Q381 -200 366 -200Q357 -200 354 -197Q352 -195 256 15L160 225L144 214Q129 202 113 190T95 178Z"></path></g><rect width="500" height="60" x="853" y="840.5"></rect></g></g></g></svg></mjx-container>＝p/q＝2m/2n。</p><p>用2除分子和分母就可以简化2m/2n，我们得到</p><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.225ex;" xmlns="http://www.w3.org/2000/svg" width="3.061ex" height="2.398ex" role="img" focusable="false" viewBox="0 -960.5 1353 1060"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msqrt"><g transform="translate(853,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(0,100.5)"><path data-c="221A" d="M95 178Q89 178 81 186T72 200T103 230T169 280T207 309Q209 311 212 311H213Q219 311 227 294T281 177Q300 134 312 108L397 -77Q398 -77 501 136T707 565T814 786Q820 800 834 800Q841 800 846 794T853 782V776L620 293L385 -193Q381 -200 366 -200Q357 -200 354 -197Q352 -195 256 15L160 225L144 214Q129 202 113 190T95 178Z"></path></g><rect width="500" height="60" x="853" y="840.5"></rect></g></g></g></svg></mjx-container>＝m/n。</p><p>我们现在得到一个分数m/n，它比p/q简单。</p><p>然而，我们发现对m/n可以精确地重复以上同一个过程，在结束时我们将产生一个更简单的分数，比方说g/h。然后又可以对这个分数再重复相同的过程，而新的分数，比方说e/f，将是更为简单的。我们可以对它再作同样的处理，并且一次次地重复这个过程，不会结束。但是根据第（3）点我们知道任何分数不可能永远简化下去，总是必须有一个最简单的分数存在，而我们最初假定的分数p/q似乎不服从这条法则。于是，我们可以有正当的理由说我们得出了矛盾。如果<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.225ex;" xmlns="http://www.w3.org/2000/svg" width="3.061ex" height="2.398ex" role="img" focusable="false" viewBox="0 -960.5 1353 1060"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msqrt"><g transform="translate(853,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(0,100.5)"><path data-c="221A" d="M95 178Q89 178 81 186T72 200T103 230T169 280T207 309Q209 311 212 311H213Q219 311 227 294T281 177Q300 134 312 108L397 -77Q398 -77 501 136T707 565T814 786Q820 800 834 800Q841 800 846 794T853 782V776L620 293L385 -193Q381 -200 366 -200Q357 -200 354 -197Q352 -195 256 15L160 225L144 214Q129 202 113 190T95 178Z"></path></g><rect width="500" height="60" x="853" y="840.5"></rect></g></g></g></svg></mjx-container>可以写成一个分数，其结果将是不合理的，所以，说<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.225ex;" xmlns="http://www.w3.org/2000/svg" width="3.061ex" height="2.398ex" role="img" focusable="false" viewBox="0 -960.5 1353 1060"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msqrt"><g transform="translate(853,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(0,100.5)"><path data-c="221A" d="M95 178Q89 178 81 186T72 200T103 230T169 280T207 309Q209 311 212 311H213Q219 311 227 294T281 177Q300 134 312 108L397 -77Q398 -77 501 136T707 565T814 786Q820 800 834 800Q841 800 846 794T853 782V776L620 293L385 -193Q381 -200 366 -200Q357 -200 354 -197Q352 -195 256 15L160 225L144 214Q129 202 113 190T95 178Z"></path></g><rect width="500" height="60" x="853" y="840.5"></rect></g></g></g></svg></mjx-container>不可能写成一个分数是对的。于是，<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.225ex;" xmlns="http://www.w3.org/2000/svg" width="3.061ex" height="2.398ex" role="img" focusable="false" viewBox="0 -960.5 1353 1060"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msqrt"><g transform="translate(853,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(0,100.5)"><path data-c="221A" d="M95 178Q89 178 81 186T72 200T103 230T169 280T207 309Q209 311 212 311H213Q219 311 227 294T281 177Q300 134 312 108L397 -77Q398 -77 501 136T707 565T814 786Q820 800 834 800Q841 800 846 794T853 782V776L620 293L385 -193Q381 -200 366 -200Q357 -200 354 -197Q352 -195 256 15L160 225L144 214Q129 202 113 190T95 178Z"></path></g><rect width="500" height="60" x="853" y="840.5"></rect></g></g></g></svg></mjx-container>是一个无理数。</p><h3 id="3．误入荒谬"><a href="#3．误入荒谬" class="headerlink" title="3．误入荒谬"></a>3．误入荒谬</h3><p>下面是一个经典的例证，说明很容易从一个非常简单的命题出发，经过几步看上去直截了当的合乎逻辑的推理来证明2＝1。</p><p>首先，我们从很普通的命题</p><p>a＝b</p><p>开始。然后，两边乘以a，得出</p><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="6.614ex" height="2.339ex" role="img" focusable="false" viewBox="0 -833.9 2923.6 1033.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mn" transform="translate(562,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(965.6,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＝</text></g><g data-mml-node="mi" transform="translate(1965.6,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(2494.6,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g></svg></mjx-container>。</p><p>接着两边加上<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="7.746ex" height="2.339ex" role="img" focusable="false" viewBox="0 -833.9 3423.6 1033.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mn" transform="translate(562,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(965.6,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">－</text></g><g data-mml-node="mn" transform="translate(1965.6,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(2465.6,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(2994.6,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g></svg></mjx-container>：</p><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="26.63ex" height="2.339ex" role="img" focusable="false" viewBox="0 -833.9 11770.7 1033.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mn" transform="translate(562,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(965.6,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＋</text></g><g data-mml-node="msup" transform="translate(1965.6,0)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mn" transform="translate(562,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(2931.1,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">－</text></g><g data-mml-node="mn" transform="translate(3931.1,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(4431.1,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(4960.1,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mi" transform="translate(5389.1,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＝</text></g><g data-mml-node="mi" transform="translate(6389.1,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(6918.1,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mi" transform="translate(7347.1,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＋</text></g><g data-mml-node="msup" transform="translate(8347.1,0)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mn" transform="translate(562,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(9312.7,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">－</text></g><g data-mml-node="mn" transform="translate(10312.7,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(10812.7,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(11341.7,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g></svg></mjx-container>。</p><p>这就可以简化为</p><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="21.147ex" height="2.339ex" role="img" focusable="false" viewBox="0 -833.9 9347.1 1033.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">（</text></g><g data-mml-node="msup" transform="translate(1500,0)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mn" transform="translate(562,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(2465.6,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">－</text></g><g data-mml-node="mi" transform="translate(3465.6,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(3994.6,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mi" transform="translate(4423.6,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">）</text></g><g data-mml-node="mi" transform="translate(5423.6,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">＝</text></g><g data-mml-node="msup" transform="translate(6423.6,0)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mn" transform="translate(562,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(7389.1,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">－</text></g><g data-mml-node="mi" transform="translate(8389.1,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(8918.1,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g></svg></mjx-container>。</p><p>最后，两边被a2－ab除，我们得到</p><p>2＝1。</p><p>最初的命题似乎是，也确实是完全无疑的；但是在对等式的逐步处理中，某个地方有一个微妙的，却是灾难性的错误，它导致了最后的命题陈述中的矛盾。</p><p>事实上，致命的错误出现在最后一步，其中用<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="6.614ex" height="2.339ex" role="img" focusable="false" viewBox="0 -833.9 2923.6 1033.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mn" transform="translate(562,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(965.6,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">－</text></g><g data-mml-node="mi" transform="translate(1965.6,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(2494.6,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g></svg></mjx-container>去除两边。我们从最初的命题知道a＝b，因而用<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="6.614ex" height="2.339ex" role="img" focusable="false" viewBox="0 -833.9 2923.6 1033.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mn" transform="translate(562,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(965.6,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">－</text></g><g data-mml-node="mi" transform="translate(1965.6,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(2494.6,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g></svg></mjx-container>去除等价于用零去除。</p><p>用零去除任何东西是很危险的一步，因为零可以在任何有限的量中出现无穷多次。由于在两边产生了无穷大，我们实际上彻底破坏了等式的两边，不知不觉中使论证产生了矛盾。</p><p>这个微妙的错误是在许多沃尔夫斯凯尔奖的参赛论文中可以发现的典型的一类因粗枝大叶造成的错误。</p>]]></content>
    
    
    <summary type="html">读书笔记</summary>
    
    
    
    <category term="读书笔记" scheme="http://example.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="读书笔记" scheme="http://example.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>棋王-阿城</title>
    <link href="http://example.com/2022/10/28/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E6%A3%8B%E7%8E%8B-%E9%98%BF%E5%9F%8E/"/>
    <id>http://example.com/2022/10/28/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E6%A3%8B%E7%8E%8B-%E9%98%BF%E5%9F%8E/</id>
    <published>2022-10-28T02:10:10.000Z</published>
    <updated>2022-12-03T03:24:22.852Z</updated>
    
    <content type="html"><![CDATA[<h1 id="棋王-阿城"><a href="#棋王-阿城" class="headerlink" title="棋王-阿城"></a>棋王-阿城</h1><p>作者介绍：</p><p>​        阿城，原名钟阿城，中国当代作家。北京人，出生于一九四九年清明节。十二三岁时就已遍览曹雪芹、罗贯中、施耐庵、托尔斯泰、巴尔扎克、陀斯妥耶夫斯基、雨果等中外文学名著。中学未读完，“文化大革命”开始，去山西农村插队，此时开始习画。为到草原写生，转往内蒙，而后去云南建设兵团农场落户。在云南时，与著名画家范曾结识，两人超过“代沟”而成莫逆之交。“文革”后，经范曾推荐，《世界图书》编辑部破格录用阿城，作者重返北京。回城后曾在中国图书进出口公司、东方造型艺术中心、中华国际技术开发总公司工作。现旅居国外。 一九七九年后，阿城曾协助父亲钟惦棐(fei)先生撰写《电影美学》。从马克思的《资本论》、黑格尔《美学》到中国的《易经》、儒学、道家、禅宗，古今中外、天文地理，阿城在与父亲的切磋研讨、耳濡目染中，博古通今，为其此后创作风格的形成进一步奠定基础。</p><p> 故事大略：</p><p>​        文革时期，在下乡做知青的路上，“我”遇到一个对象棋迷恋的如痴似狂般的人，别人都叫他“棋疯子”。“棋疯子”拉着我和他下棋，我也就和他相识。后来，我们帮助棋疯子参加比赛，棋疯子一人与十人同时下盲棋，并获胜。（以棋疯子参加棋赛为主要线索，中间穿插这“我”下乡插队时的经历）</p><p>​        文中对棋疯子人物的刻画是很到位的，既写了他对下棋“痴”的一面，又写了他对粮食过分的珍视，后面也都给出了原因，合情合理，情节连贯，既有铺垫、又有高潮。也有引人深思的部分：棋疯子难道是天生的下棋天才么？不是的。他从小就开始下棋，有一定的天分，后来遇到个捡垃圾的老头，老头对他进行了点拨，起到了点石成金的作用，再加上棋疯子的那股子“痴”劲，终成大家。天分、机遇、专一 三者缺一不可。例如三天学下棋，两天学打球，最后也不会成为某一方面的顶尖人物，因为人的精力总是有限的。</p><p>文中的一些句子：</p><ul><li>人一迷上什麽，吃饭倒是不重要的事。大约能干出什麽事儿的人，总免不了有这种傻事。</li><li>老头儿棋路猛，听头几步，没什麽，可着子真阴真狠，打闪一般，网得开，收得又紧又快。</li><li>老头儿说，棋就是这麽几个子儿，棋盘就是这麽大，无非是道同势不同，可这子儿你全能看在眼底。天下的事，不知道的太多。这每天的大字报，张张都新鲜，虽看出点道儿，可不能究底。子儿不全摆上，这棋就没法儿下。”</li><li>王一生孤身一人坐在大屋子中央，瞪眼看着我们，双手支在膝上，铁铸一个细树桩，似无所见，似无所闻。高高的一盏电灯，暗暗地照在他脸上，眼睛深陷进去，黑黑的似俯视大千世界，茫茫宇宙。那生命像聚在一头乱发中，久久不散，又慢慢弥漫开来，灼得人脸热。</li><li>我忽然觉得这山像人脑的沟回，只不知其中思想着什麽。</li><li>於是我也常常练着沉思，确实有些收益，只是觉得累，马脚又多。</li><li>我一个屁眼大的官，管不了。你还在我屁眼里，你发什麽疯？</li><li>火越来越大，开始有巨大的爆裂声，热气腾升上去，山颤动起来。烟开始逃离火，火星追着烟，上去十多丈，散散乱乱。</li><li>牛馋咸，尿咸，於是牛们攒头攒脑地聚来接尿吃，极是快活。我甚至常憋了尿，专门到山上时喂给牛们，那是一滴也不会浪费的。凡是给牛喂过尿的，牛便死心塌地地听你吆喝，敬如父母。我也常常是领了一群朋党，快快乐乐以尿做领袖。</li><li>不识字，大约是文字盲，读不懂，大约是文化盲。</li></ul>]]></content>
    
    
    <summary type="html">读书笔记</summary>
    
    
    
    <category term="读书笔记" scheme="http://example.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="读书笔记" scheme="http://example.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>阅读的方法</title>
    <link href="http://example.com/2022/10/26/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E9%98%85%E8%AF%BB%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>http://example.com/2022/10/26/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E9%98%85%E8%AF%BB%E7%9A%84%E6%96%B9%E6%B3%95/</id>
    <published>2022-10-26T02:10:10.000Z</published>
    <updated>2022-12-03T03:24:22.853Z</updated>
    
    <content type="html"><![CDATA[<h1 id="阅读的方法"><a href="#阅读的方法" class="headerlink" title="阅读的方法"></a>阅读的方法</h1><p>作者:罗振宇</p><h2 id="让我们爱上阅读"><a href="#让我们爱上阅读" class="headerlink" title="让我们爱上阅读"></a>让我们爱上阅读</h2><p>我的语言的界限，意味着我的世界的界限。——〔奥〕维特根斯</p><p>举个例子。有一次吴军老师参加一个关于“一带一路”的座谈会，有领导问：“吴教授，咱们关起门来讲，中国输出了那么多资本，最后钱能回来吗？” 吴军老师的回答是：“挣得回来、挣不回来，我不知道，因为这里面牵扯太多的因素。但是资本输出和帮助其他国家富裕这两件事都必须做。我可以从数学上证明这两件事的必要性。”数学能证明投资的必要性？听起来很怪。 吴军老师继续讲： 今天（以2018年为准），中国人均GDP已经达到了世界的平均水平，总的经济体量已经居世界第二，占全世界经济总量的18%。那么中国还能不能维持过去的增长速度呢？从数学上讲，根本做不到。 我们就假定中国经济能够按照每年6.2%的速度增长，再过40年，中国GDP大约能增长10倍。而中国以外的其他国家和地区的经济增长速度只有2.34%左右，那时中国的GDP大约能占到全世界的50%。这时候矛盾就出现了。那时，全世界都没有足够的财富买得起中国不断制造的产品和不断提供的服务。</p><hr><p>这当然很过瘾，我们也会对主人公极强的观察力和归因能力佩服至极。但与之相比，我更喜欢另一类推理小说——以阿加莎·克里斯蒂（Agatha Christie）为代表人物的“本格推理”。 在这类小说里，没有陌生地带，所有线索和嫌疑人都被摆在台面上，只要你能找出文中隐含的证据，就能准确地找出真凶。但阿加莎厉害的地方在于，即便告诉你所有的事情，你还是猜不到真凶是谁。</p><hr><p>举两个例子： 说作者写《红楼梦》有反清复明的政治意图。 为什么呢？因为贾宝玉说过，“女儿是水作的骨肉，男人是泥作的骨肉”。“汉”字是水字旁，所以曹雪芹在肯定汉人；而满人又称“達達”人，你看这个“達”字，起笔是个“土”啊，所以曹雪芹是在贬低满人。说作者写《红楼梦》是在怀念明朝。为什么呢？因为贾宝玉喜欢红色。红色不就是“朱”色吗？想想，“朱”是谁家的姓？明朝皇帝的姓嘛。破案了。 我看到这些段落时，经常哈哈大笑。不是嘲笑，是真心的佩服，“亏他想得出来”。 虽然这不是推理，但还是给了我做数学题的快感：这里捅捅，那边戳戳，突然通了，世界忽然间变成了井井有条的样子。好玩。至于它是不是真相，不重要。</p><hr><p>正如朱利安·巴恩斯（JulianBarnes）说的：“不可靠的记忆与不充分的材料相遇所产生的确定性就是历史。”</p><hr><p>在绝大部分场景下，这个世界都是在和我们“打明牌”：把所有线索都摊在桌面上，就看你有没有本事找到独特的路径，把它们串联起来。</p><hr><p>那就从一个故事说起吧。一名教徒在祈祷时犯了烟瘾，于是问神父：“祈祷时可以抽烟吗？”神父瞪了他一眼说：“不可以。”另一个教徒正在抽烟，就也问神父：“抽烟时可以祈祷吗？”神父赞赏地说：“可以。”这个故事是想讽刺人类的荒唐：明明是一模一样的行为，为什么会做出不一样的判断？ 但我们知道，神父说的其实有道理。一个人是在懈怠地祷告，还是抽烟时都不忘祈祷，他自己心里清楚，旁观者也清楚。行为看起来虽然一模一样，但背后的观念、状态不一样，行动的本质当然也不一样。 年轻的时候，我也有一个想不清楚的问题：为什么一个杀人如麻的盗贼，放下屠刀就能立地成佛；而一个老实人，一失足就成千古恨？如果从作恶的总量来看，难道不是前者的罪孽更深吗？后来有了些社会经验，我才知道：那些未经世事但又满脑子欲望的人，恰恰是风险很高的人。和他们相比，我们宁可信任一个渡尽劫波，最后放下屠刀的人。</p><hr><p>我曾经请教过一位历史学者，读历史读到什么程度就算入门了。他说，“当你不再认为谁是坏人、谁是蠢货的时候，当你能读出所有事件当事人的‘不得已’的时候，当你看到事实的复杂性的时候，就算是跨过了入门的门槛”。</p><hr><p>998年，克林顿身陷莱温斯基事件。这一丑闻给他带来了致命打击。他不仅要在陪审团面前做证，还不得不发表电视讲话，向全国民众道歉。一般人在这种情况下早就狼狈不堪了，可是克林顿照样正常工作。他曾与50位国会议员开会，其中一半都是弹劾他的共和党人。会上，克林顿专注而高效，就像没什么事情发生一样。 彼时的财政部长罗伯特·鲁宾对此感到非常好奇，他曾在自传中写道：“我确实非常赞赏克林顿处理危机的方式，尽管这一危机是他自己制造出来的。他的精力集中、专注，在身旁风暴肆虐时仍继续工作……”克林顿之后告诉鲁宾，说他启用了一项“精神装置”，帮助自己度过了那段时间。你可以把这项“精神装置”想象成电脑的重启机制——在系统快要崩溃的时候按下重启键复活。 本质而言，“精神装置”其实是一种每个人都可以学习的“大脑方法”，帮助我们从那些无法改变的糟糕事情里挣脱出来，像是什么都没发生似的，专注于做好当下最重要的事情。 ——喻颖正：《人生算法》 克林顿所谓的“精神装置”，类似于曾国藩说的“未来不迎，当时不杂，既过不恋”。把自己的大脑变成一部可以用按键切换的机器，遇到什么场合，就用什么思维方式。</p><hr><p>美国《纽约时报》专栏作家戴维·布鲁克斯（David Brooks）的《品格之路》里，提出了一对概念：“简历美德”和“悼词美德”。 我一直在思考“简历美德”与“悼词美德”之间到底有哪些不同。 “简历美德”是你在简历中列出的那些美德，也就是你贡献给就业市场或者有助于你在外部世界功成名就的那些技能。 而“悼词美德”则涉及更深层次的内容，是未来人们在你的葬礼上谈论的美德。无论你是否和蔼、勇敢、诚实或忠诚，无论你与人相处得是否融洽，“悼词美德”都存在于你的灵魂深处。 ——〔美〕戴维·布鲁克斯：《品格之路》</p><hr><p>“如果钱不成问题的话，你会做什么？”乔布斯提的这个问题非常高明。道理很简单，一个对的产品，当然就能挣到钱，所以钱本来就不成问题。而具体做事的人，总是受到“钱不够”这个假象的干扰。与其在现实的资源约束中为难，不如干脆设想一个“钱不成问题”的条件，彻底解放做事之人的想象力。</p><hr><p>你参加生日聚会，到了大家一起吃蛋糕的环节，这时存在一个问题：蛋糕要怎么分才公平呢？ 最直接的做法就是平均分，而且你肯定知道，要让切蛋糕的人最后选，这样才能分得最平均。 但有人反对，说每个人胃口大小不一样，应该按照需求来分才合理。 又有人说，蛋糕也不是天上掉下来的，是我们自己做的呀，应该按照做蛋糕的贡献大小来分配，这才公平。 马上就有人不同意了，他说，我没参加做蛋糕，可是整个聚会都是我张罗的，今天最辛苦的人就是我了，你们不觉得应该按照努力辛苦的程度来分配吗？ 这时，寿星终于忍不住了：今天是我过生日好吗，分蛋糕为什么不是我说了算啊？ ——刘擎：《刘擎西方现代思想讲义》</p><p> 罗尔斯通过一个思想实验，解决了这个问题：假设我们不知道自己在生日宴会里的角色，我们既可能是普通来宾，也可能是做蛋糕的，也可能就是寿星本人，我们都处在一道“无知之幕”的遮蔽之下，那我们会倾向于蛋糕怎么分？</p><p> 我们可以把这个局面推想得极端一点—— 假设，人真的是从天上投胎到人间的小天使。在投胎之前，老天爷给我一个机会，让我来安排一下人间的秩序。在这个时候，我无法知道自己将来是生在穷人家还是富人家，也无法知道自己将来的性别、种族、相貌、智力和禀赋，那我该怎么办？ 我想，我不可能主张富人用钱就可以买到一切，因为我可能是穷人；我也不可能主张富人的钱都充公，因为我也可能是富人。在这道“无知之幕”后面，我只能战战兢兢、小心谨慎地安排着人间的秩序，生怕一点点不公平将来有机会落在我的头上。最后，我拿出来的那个方案，就有可能是一个接近合理的方案。</p><hr><p>读懂了进化论，让我不再妄想世界上有简单的万应良药，也让我真正理解了“凡有收益，必有代价”这个朴素的道理。</p><hr><p>很多年前，有人跟我讲了一句特别扎心的话：“富人看不起穷人，穷人能知道。有知识的人看不起无知的人，无知者压根儿就不知道。”</p><hr><p>象征的凝结需要过程。 我们日常用的语言也经历了这样一个凝结的过程。要知道，人类的文化现象，大多是从简到繁地演化。语言则相反，是从繁到简。 </p><p>《信息简史》这本书，记录了非洲原始部落的“鼓语”。 一个女婴的降生通知可能会是这样的：“接生的衬垫已经卷起，我们感到浑身充满力量，一个女人从森林里来，来到这个开放的村庄。这次就说到这里吧。” </p><p>而召集村民参加一次聚会的通知是这样的：“在黎明时分，我们不要集结去劳作，我们要在河边举行聚会。波棱吉村的男人们，不要去狩猎，也不要去打鱼。我们要在河边举行聚会，在黎明时分。” 啰唆吧？但是没办法。先民们还没有来得及发展出那么多简洁的“象征”词语，只好用繁复的语言来表达自己的意思。 用鼓说话时，没人会说得直截了当。鼓手们不会说“回家吧”，而会说： 让你的脚沿它去时的路返回， 让你的腿沿它去时的路返回， 让你的腿脚驻立于此， 在这属于我们的村庄。 他们不会简单说“尸首”，而会展开详述成“仰面躺在土堆中的人”。如果想表达“别害怕”的意思，他们会说“把你的心从嗓子眼放回原处，你的心提到了嗓子眼，现在把它放回原处”。这些鼓说得叠床架屋，似乎表达效率相当成问题。这到底是卖弄辞藻，还是另有妙用呢？ ——〔美〕詹姆斯·格雷克：《信息简史》</p><hr><p>藏地以其精神力量驯化蒙古。藏传佛教的信徒一般都会从属于某一个寺庙，牧民可以移动，但寺庙无法移动，于是蒙古游牧民的游牧半径便被寺庙固定下来，从而形成某种意义上的定居化。所以康熙曾说“一座庙胜十万兵”。统治者在藏地以文殊菩萨转世的身份出现。</p><hr><p>金庸的《天龙八部》所讲的，不只是一个热闹的故事，其实还是一场有关人生选择的大型思想实验。</p><p>在中国古代，一个心里有梦的人，能有多少种选择？ 自古忠义难两全，让萧峰来选，他选择苍生大义，只不过代价是他自己的生命。江山和美人，让慕容复来选，他幻想自己有机会得江山，于是硬生生把绝代佳人逼进了别人的怀抱。清规戒律与红尘繁华，让虚竹来选，他头也不回，只想要清规戒律。但没想到最后出了岔子，一个梦姑把他拽到了温柔乡里。爱恨情仇，让天山童姥、李秋水这些人来选，她们都选择了恨。结果呢？人生尽头只看到一场闹剧。 </p><p>他们都没想到，故事中结局最好的人，恰恰是只喜欢男欢女爱的段誉。原来，温柔乡中，心无大志，也是一种可行的选择。</p><hr><p>《论语》里有这样一句话：“君子怀德，小人怀土。”你肯定会奇怪，“德”的反面怎么会是“土”呢？ 宋代的朱熹做了个解释：“怀德，谓存其固有之善。怀土，谓溺其所处之安。”原来如此。一个普通人，如果只是沉溺在自己所处的环境中，他的一切成败利钝，都是环境使然，这就是“土”。我们今天讲“土豪”，也是这个意思。</p><hr><p>身在局中，每个人的处境，都远比局外人看到的复杂。 </p><p>比如，蜀汉丞相诸葛亮。我们都曾被《后出师表》中“鞠躬尽瘁，死而后已”的精神感动。他身负先主刘备托孤之重，仅凭四川一地的兵力、财力，一次次向曹魏发起进攻，最后身死五丈原。 </p><p>在这个故事中，诸葛亮的敌人似乎只有一个，就是窃据中原的曹魏。所谓“汉贼不两立，王业不偏安”嘛。但是，如果你设身处地地站在诸葛亮的角度去想，事情又没有那么简单。 </p><p>有关国际政治的常识告诉我们，一个国家对外发动攻击，既可能是为了获取外部利益，也可能是为了缓和内部矛盾。 </p><p>在刘备死后不到四年，诸葛亮就开始第一次北伐，明显很仓促。为什么呢？读了饶胜文老师的著作《大汉帝国在巴蜀》，我觉得豁然开朗——因为刘备留给诸葛亮的，是一个内部矛盾重重的蜀汉。 </p><p>刘备从河北起兵，跟着他的有关羽、张飞、赵云。然后在徐州的时候，又有糜竺、糜芳兄弟加入，就是他的大小舅子。到了荆州，又有诸葛亮、黄忠、魏延等人加入。占据益州之后，又有法正、李严这些刘璋旧部加入。但是，刘璋在益州也是外来户啊，所以还有一大批益州本地的士族。 </p><p>这么粗粗一算，当时的蜀汉政权内部，至少有河北集团、徐州集团、荆州集团、刘璋集团、“土著”集团，一共是五拨人。另外，还有像马超这种哪个集团都不算的。所以，蜀汉集团的内部政治结构十分复杂。诸葛亮和李严之间、魏延和杨仪之间，都曾有过争斗。 </p><p>那么，刘备去世后，诸葛亮作为丞相，怎么才能保证内部的凝聚力？除了北伐，似乎也没有什么好办法。国家长期处于对外战争的状态，既能使军政大权不旁落，还可以对各个集团进行强有力的动员，又能趁机吸收姜维这样的外部人才，近乎“三赢”。</p><p> 事实也证明，诸葛亮去世后，蒋琬继任，对外战争少了，对内大赦多了，看起来符合“与民休息”的政治理性，但是结果适得其反。 </p><p>诸葛亮“用法峻密”“赦不妄下”，蜀人却如此追思他；蒋琬和费祎在制度上沿袭诸葛成规，社会矛盾却愈演愈剧。其间的差异，当缘于信念认同上的变化。 </p><p>诸葛亮主政的灵魂是复兴汉室的信念。他以开诚布公、用心平允、科教严明、赏罚必信的为政风格，鼓励吏民“尽忠益时”，将复兴汉室的信念变成蜀汉吏民的一种政治认同。正是由于对他信念的认同，所以，他虽然“用法峻密”“赦不妄下”，蜀人却“畏而爱之”，“人怀自厉”。他军旅屡兴，频频北伐——这意味着对蜀汉的人力、物力资源的大量动员和征用，蜀人却劳而不怨。 </p><p>当认同感渐渐疏离，即使不再大举出兵，各种“奸巧非一”触犯网禁的问题还是出现了；只能频繁用赦，缓解社会矛盾。 ——饶胜文：《大汉帝国在巴蜀》</p><hr><p>老师说，“你可以说。但是只能说以前你自己遇到类似的情况是怎么处理的。这段经历有没有用，让对方自行去判断”，“所有人的建议，都是毒药，而所有人的经历，都是宝藏”。</p><hr><p>住宅是个极其复杂的博物馆。我发现，无论世界上发生了什么——不管人们发现了什么，创造了什么，或激烈争夺了什么——最终都以这种或那种方式落实到你的家里，这大大出乎我的意料。战争、饥荒、工业革命、启蒙运动等，它们都在你的沙发里和五斗橱里，在你窗帘的皱褶里，在你松软的枕头里，在你家墙上的油漆里，在你家的自来水里。因此，家庭生活的历史，不仅是床、沙发和厨房炉灶的历史，就像我起初无知地以为的那样，而且是坏血病和鸟粪的历史、埃菲尔铁塔的历史、臭虫的历史、盗尸的历史，一切其他已经发生过的事的历史。住宅不是躲避历史的避难所，它们是历史的最终归宿。——〔英〕比尔·布莱森：《趣味生活简史》</p><hr><p>有意思的是，《塞拉菲尼抄本》的内容不在我们的经验体系之内，但又与我们的经验有着某种若合符节的默契。它已经尽力作怪了，但作为一个中国人，我还是能一眼看出来，那是西方式的想象力的产物。文字模型是西方的，图片风格也是西方的。它不但没能脱离人类文明的范围，甚至连西方文明的范围也没能突破。</p><p>所以，《塞拉菲尼抄本》暴露了所有“怪谈”书籍的困境：越是离奇的想象，就越是暴露了想象力的边界；越是想脱离地面，反而越是显现出地心引力的强大。</p><hr><p>无论任何流派的文学，在各种奇巧变幻、怪诞荒唐等对现实的变形的描写背后，是社会生活的原形，是历史和时代的脉搏在跳动，是人性的强烈表现。文学的本质归根到底是现实主义的。文学的根本目的在于反映人类对世界、对社会、对人性的认知，书写人类的恐惧和希望。</p><p>为了“尽可能完美”地反映现实，作家需要借助“幻想”。世界上最虚幻、最富有幻想的事情，往往是真实的事情，而看起来虚幻的道理，往往是至真的道理。——莫言：《幻想与现实》，载《散文海外版》2021年第12期</p><p>比如“输赢”的这个“输”字，左边是车，右边是船，是“运输”的意思。为什么“输”后来又衍生出“败”的意思呢？因为打仗打败了的后果，就是把财货、子女给对方运送过去。所以，败家也就是输家。</p><hr><p>蒋百里生前遗留的话也在振聋发聩：“中国对日本，打不了，亦要打；打败了，就退；退了还是打。五年、八年、十年总坚持打下去；不论打到什么天地，穷尽输光不要紧，千千万万就是不要向日寇妥协，最后胜利定是我们的。你不相信，可以睁眼看着。” ——曹聚仁：《将将之将：蒋百里评传》 </p><p>后来读的书多了才知道，蒋百里的这句话，讲出的是一个全新的战争逻辑。在这个逻辑里，出现了一个全新的设定： 可以败，但是不认输。 后面的事情我们都知道了。中国一败再败，但是绝不认输，也绝不和谈，导致日本在战略上陷入绝境，随后发动了珍珠港事变。日本侵华的故事，既是一个血泪悲剧，也是一个抱着过时的设定，自寻死路的闹剧。 有很长一段时间，我非常热衷于阅读战争史方面的书。读得越多，我就越知道—— 人世间的竞争，往往并不是力量和智慧的决胜。博弈双方虽然在下同一盘棋，但是各自脑子里的“设定”并不相通。最后决定胜负的，其实是谁的“设定”更符合时代潮流。</p><hr><p>著名摇滚乐手大卫·李·罗斯，每次签订巡演合同的时候，都会坚持在合同中包含这样一个条款：后台化妆间里必须摆放一碗M&amp;M’s巧克力豆，而且里面不能有一粒棕色巧克力豆，如果主办方没有做到的话，演唱会将被取消，而且主办方还要对乐队进行全额赔偿。 </p><p>至少有那么一次，乐队因为上述原因霸道地取消了科罗拉多的一场演唱会，因为罗斯在化妆间里找到了棕色的巧克力豆。 </p><p>有人或许会认为大明星总是喜欢摆谱，提出不近人情的苛刻要求。但其实不然，这是罗斯用来保障演唱会安全的一块试金石。</p><p> “如果在后台放置巧克力的碗里发现了棕色巧克力豆，我们就会对各项装配工作逐一进行检查。我保证会发现技术错误，会碰到各种各样的问题。” ——〔美〕阿图·葛文德：《清单革命》</p><hr><p>有些人能感受雨，而其他人只是被淋湿。 ——〔美〕罗杰·米勒</p><p>我问过一位朋友，什么是爱好。他哈哈大笑说，“费劲、费时间、挣钱的事，叫上班；费劲、费时间，还花钱的事，叫爱好”。</p><p>有一个很有趣的思维方式，叫“10加10加10思维模型”。意思是，当我们要做一个决定时，我们需要想象另外三个自己：10分钟之后的自己、10个月后的自己和10年后的自己。想象一下，他们会如何看待当前的这件事？如果我要和朋友发一次飚，大概率10分钟后我就后悔了。那个10分钟之后的自己会出面劝解：算了算了，何必逞口舌之快？如果我发愿要学一门外语，10个月后的自己会觉得非常难受，而10年后的自己会觉得自己当年真是好样的。</p><hr><p>有一个故事是这么说的——有人问上帝：“假如你碰到两头恶魔，其中一头一箭就可以射死，另一头则需要两箭才能射死。它们同时向你扑来，而你只有两支箭，你怎么办？”看起来这是一个无解之局，上帝不管怎么选，都会面对其中一个麻烦。 上帝说：“那头两箭才能射死的，先射它一箭。然后告诉两头恶魔，我还有一支箭，谁不听话，我就招呼谁。这样，我就有两个奴隶可以用了。” 面对外来之物，我们的本能是利用或者征服。但还有一种更高明的办法：驯化它们，和它们共存，让它们成为自己的一部分。</p>]]></content>
    
    
    <summary type="html">读书笔记</summary>
    
    
    
    <category term="读书笔记" scheme="http://example.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="读书笔记" scheme="http://example.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>c与指针3</title>
    <link href="http://example.com/2022/04/21/c%E8%AF%AD%E8%A8%80%E7%9A%84%E4%B8%93%E6%8E%A5%E6%9C%AC%E5%AD%A6%E4%B9%A0/c%E4%B8%8E%E6%8C%87%E9%92%883/"/>
    <id>http://example.com/2022/04/21/c%E8%AF%AD%E8%A8%80%E7%9A%84%E4%B8%93%E6%8E%A5%E6%9C%AC%E5%AD%A6%E4%B9%A0/c%E4%B8%8E%E6%8C%87%E9%92%883/</id>
    <published>2022-04-21T08:40:20.000Z</published>
    <updated>2023-03-30T02:32:37.471Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h1><h2 id="1-字符操作-区别于字符串"><a href="#1-字符操作-区别于字符串" class="headerlink" title="1.字符操作,区别于字符串"></a>1.字符操作,区别于字符串</h2><p>标准库包含了两组函数，用于操作单独的字符，它们的原型位于头文件ctype.h。</p><h3 id="字符分类"><a href="#字符分类" class="headerlink" title="字符分类"></a>字符分类</h3><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204211643355.png" alt="image-20220327130618954"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204211643691.png" alt="image-20220327130629281"></p><h2 id="2-字符转换"><a href="#2-字符转换" class="headerlink" title="2.字符转换"></a>2.字符转换</h2><p>转换函数把大写字母转换为小写字母或者把小写字母转换为大写字母。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span>　<span class="title">tolower</span><span class="params">( <span class="keyword">int</span> ch )</span></span>;<span class="comment">//tolower函数返回其参数的对应小写形式</span></span><br><span class="line"><span class="function"><span class="keyword">int</span>　<span class="title">toupper</span><span class="params">( <span class="keyword">int</span> ch )</span></span>;<span class="comment">//toupper函数返回其参数的对应大写形式</span></span><br></pre></td></tr></table></figure><p>如果函数的参数并不是一个处于适当大小写状态的字符（即toupper的参数不是小写字母或tolower的参数不是个大写字母），函数将不修改参数直接返回。</p><blockquote><p>直接测试或操纵字符将会降低程序的可移植性。例如，考虑下面这条语句，它试图测试ch是否是一个大写字符。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>( ch &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;Z&#x27;</span> )</span><br></pre></td></tr></table></figure><p>这条语句在使用ASCII字符集的机器上能够运行，但在使用EBCDIC字符集的机器上将会失败。另一方面，下面这条语句</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>( <span class="built_in">isupper</span>( ch ) )</span><br></pre></td></tr></table></figure><p>无论机器使用哪个字符集，它都能顺利运行。</p></blockquote><h2 id="3-内存操作"><a href="#3-内存操作" class="headerlink" title="3.内存操作"></a>3.内存操作</h2><h3 id="处理字符串内部包含NUL的字符。"><a href="#处理字符串内部包含NUL的字符。" class="headerlink" title="处理字符串内部包含NUL的字符。"></a>处理字符串内部包含NUL的字符。</h3><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204211643326.png" alt="image-20220327142954277"></p><p>1.memcpy从src的起始位置复制length个字节到dst的内存起始位置。你可以用这种方法复制任何类型的值，第3个参数指定复制值的长度（以字节计）。如果src和dst以任何形式出现了重叠，它的结果是未定义的。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span>　　temp[SIZE], values[SIZE];</span><br><span class="line">...</span><br><span class="line"><span class="built_in">memcpy</span>( temp, values, SIZE );<span class="comment">//它从数组values复制SIZE个字节到</span></span><br><span class="line"><span class="comment">//数组temp。</span></span><br></pre></td></tr></table></figure><p>如果两个数组都是整型数组该怎么办呢？</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">memcpy</span>( temp, values, <span class="keyword">sizeof</span>( values ) );</span><br></pre></td></tr></table></figure><p>前两个参数并不需要使用强制类型转换，因为在函数的原型中，参数的类型是void<em>型指针，而任何类型的指针都可以转换为void\</em>型指针.</p><p>2.memmove函数的行为和memcpy差不多，只是它的源和目标操作数可以重叠。memmove通常无法使用某些机器所提供的特殊的字节-字符串处理指令来实现，所以它可能比memcpy慢一些。但是，如果源和目标参数真的可能存在重叠，就应该使用memmove，如下例所示：</p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204211643925.png" alt="image-20220327145644724"></p><p>3.memcmp对两段内存的内容进行比较，这两段内存分别起始于a和b，共比较length个字节。这些值按照无符号字符逐字节进行比较，函数的返回类型和strcmp函数一样——负值表示a小于b，正值表示a大于b，零表示a等于b。由于这些值是根据一串无符号字节进行比较的，所以如果memcmp函数用于比较不是单字节的数据如整数或浮点数时就可能给出不可预料的结果。</p><p>4.memchr从a的起始位置开始查找字符ch第1次出现的位置，并返回一个指向该位置的指针，它共查找length个字节。如果在这length个字节中未找到该字符，函数就返回一个NULL指针。</p><p>5.memset函数把从a开始的length个字节都设置为字符值ch。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">memset</span>( buffer, <span class="number">0</span>, SIZE );<span class="comment">//把buffer的前SIZE个字节都初始化</span></span><br><span class="line"><span class="comment">//为0。</span></span><br></pre></td></tr></table></figure><h2 id="4-结构体声明"><a href="#4-结构体声明" class="headerlink" title="4.结构体声明"></a>4.结构体声明</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204211644480.png" alt="image-20220327153401913"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204211644589.png" alt="image-20220327153439713"></p><p>这两个声明被编译器当作两种截然不同的类型，即使它们的成员列表完全相同。因此，变量y和z的类型和x的类型不同，所以下面这条语句</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">z = &amp;x;<span class="comment">//非法的</span></span><br></pre></td></tr></table></figure><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204211644740.png" alt="image-20220327174510474"></p><p>这个技巧和声明一个结构标签的效果几乎相同。区别在于Simple现在是个类型名而不是个结构标签，所以后续的声明可能像下面这个样子：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Simple　x;</span><br><span class="line">Simple　y[<span class="number">20</span>], *z;</span><br></pre></td></tr></table></figure><h2 id="5-结构体访问"><a href="#5-结构体访问" class="headerlink" title="5.结构体访问"></a>5.结构体访问</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204211339227.png" alt="image-20220421133926172"></p><p>等价于</p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204211339349.png" alt="image-20220421133947319"></p><blockquote><p>-&gt;操作符（也称箭头操作符）。</p><p>和点操作符一样，箭头操作符接受两个操作数，但左操作数必须是一个指向结构的指针 。</p><p>箭头操作符对左操作数执行间接访问取得指针所指向的结构，然后和点操作符一样，根据右操作数选择一个指定的结构成员。</p><p>但是，间接访问操作内建于箭头操作符中，所以我们不需要显式地执行间接访问或使用括号。</p></blockquote><ul><li>结构体中应该相同的变量类型生命在一起，这样可以减少因对齐带来的空间损失；但为了可读性和可维护性可以不对结构体成员进行重排。</li></ul><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span>　<span class="title">ALIGN</span> &#123;</span></span><br><span class="line">　　　　 <span class="keyword">char</span>　 a;</span><br><span class="line">　　　　 <span class="keyword">int</span>　 b;</span><br><span class="line">　　　　 <span class="keyword">char</span>　 c;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>重排后：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ALIGN2</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span>　　　　　b;</span><br><span class="line"><span class="keyword">char</span>　　　　 a;</span><br><span class="line"><span class="keyword">char</span>　　　　 c;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="6-sizeof操作符"><a href="#6-sizeof操作符" class="headerlink" title="6.sizeof操作符"></a>6.sizeof操作符</h2><ol><li>sizeof操作符能够得出一个结构的整体长度，包括因边界对齐而跳过的那些字节。</li><li>如果你必须确定结构某个成员的实际位置，应该考虑边界对齐因素，可以使用offsetof宏（定义于stddef.h）。</li></ol><p>函数原型：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">offsetof( type, member )</span><br></pre></td></tr></table></figure><ul><li><p>type就是结构的类型，member就是你需要的那个成员名。</p></li><li><p>表达式的结果是一个size_t值，表示这个指定成员开始存储的位置距离结构开始存储的位置偏移几个字节。</p></li></ul><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">offsetof( struct ALIGN, b ) <span class="comment">//返回值是4</span></span><br></pre></td></tr></table></figure><h2 id="7-结构体调用"><a href="#7-结构体调用" class="headerlink" title="7.结构体调用"></a>7.结构体调用</h2><ul><li>C语言的参数传值调用方式要求把参数的一份拷贝传递给函数，所以调用结构时使用指针效率更高。</li><li>向函数传递指针的缺陷在于函数现在可以对调用程序的结构变量进行修改。如果我们不希望如此，可以在函数中使用const关键字来防止这类修改。</li></ul><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print_receipt</span><span class="params">( <span class="keyword">register</span> Transaction <span class="keyword">const</span> *trans )</span>；</span></span><br></pre></td></tr></table></figure><blockquote><p>什么时候你应该向函数传递一个结构而不是一个指向结构的指针呢？很少有这种情况。</p><p>只有当一个结构特别的小（长度和指针相同或更小）时，结构传递方案的效率才不会输给指针传递方案。</p><p>但对于绝大多数结构，传递指针显然效率更高。</p><p>如果你希望函数修改结构的任何成员，也应该使用指针传递方案。</p></blockquote><h2 id="8-位段"><a href="#8-位段" class="headerlink" title="8.位段"></a>8.位段</h2><blockquote><p>位段的声明和结构类似，但它的成员是一个或多个位的字段。这些不同长度的字段实际上存储于一个或多个整型变量中。</p><p>位段的声明和任何普通的结构成员声明相同，但有两个例外。</p><p>首先，位段成员必须声明为int、signed int或unsigned int类型。</p><p>其次，在成员名的后面是一个冒号和一个整数，这个整数指定该位段所占用的位的数目。</p></blockquote><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204211419637.png" alt="image-20220421141910592"></p><ul><li>注重可移植性的程序应该避免使用位段。</li></ul><p>这个声明取自一个文本格式化程序，它可以处理多达128个不同的字符值（需要7个位）、</p><p>64种不同的字体（需要6个位）以及0到524 287个单位的长度。</p><h3 id="使用位段的好理由"><a href="#使用位段的好理由" class="headerlink" title="使用位段的好理由"></a>使用位段的好理由</h3><ol><li><p>它能够把长度为奇数的数据包装在一起，节省存储空间。</p><p>当程序需要使用成千上万的这类结构时，这种节省方法就会变得相当重要。</p></li><li><p>另一个使用位段的理由是由于它们可以很方便地访问一个整型值的部分内容。</p></li></ol><h2 id="9-联合"><a href="#9-联合" class="headerlink" title="9.联合"></a>9.联合</h2><p>联合的所有成员引用的是内存中的相同位置 。</p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204211424353.png" alt="image-20220421142452314"></p><p>在一个浮点型和整型都是32位的机器上，变量fi只占据内存中一个32位的字。如果成员f被使用，这个字就作为浮点值访问；如果成员i被使用，这个字就作为整型值访问。</p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204211427396.png" alt="image-20220421142739326"></p><p>现在，对于整型变量，你将在type字段设置为INT，并把整型值存储于value.i字段。对于浮点值，你将使用value.f字段。当以后得到这个变量的值时，对type字段进行检查决定使用哪个值字段。这个选择决定内存位置如何被访问，所以同一个位置可以用于存储这三种不同类型的值。注意编译器并不对type字段进行检查证实程序使用的是正确的联合成员。维护并检查type字段是程序员的责任。</p><p>在一个成员长度不同的联合里，分配给联合的内存数量取决于它的最长成员的长度。</p><p>如果这些成员的长度相差悬殊，当存储长度较短的成员时，浪费的空间是相当可观的。在这种情况下，更好的方法是在联合中存储指向不同成员的指针而不是直接存储成员本身。所有指针的长度都是相同的，这样就解决了内存浪费的问题。</p><h3 id="联合的初始化"><a href="#联合的初始化" class="headerlink" title="联合的初始化"></a>联合的初始化</h3><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204211435577.png" alt="image-20220421143553539"></p>]]></content>
    
    
    <summary type="html">自学</summary>
    
    
    
    <category term="c语言学习" scheme="http://example.com/categories/c%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="c语言" scheme="http://example.com/tags/c%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>图的最短路径-c语言</title>
    <link href="http://example.com/2022/04/20/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84/"/>
    <id>http://example.com/2022/04/20/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84/</id>
    <published>2022-04-20T09:42:00.000Z</published>
    <updated>2023-03-30T02:32:37.452Z</updated>
    
    <content type="html"><![CDATA[<h1 id="最短路径"><a href="#最短路径" class="headerlink" title="最短路径"></a>最短路径</h1><h2 id="只有五行的算法——Floyd-Warshall"><a href="#只有五行的算法——Floyd-Warshall" class="headerlink" title="只有五行的算法——Floyd-Warshall"></a>只有五行的算法——Floyd-Warshall</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201612229.png" alt="image-20220420161223170"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201613282.png" alt="image-20220420161309239"></p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201615983.png" alt="image-20220420161515897"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201615666.png" alt="image-20220420161546585"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201616548.png" alt="image-20220420161644437"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201616646.png" alt="image-20220420161659570"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201617075.png" alt="image-20220420161715981"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201617455.png" alt="image-20220420161735392"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201617044.png" alt="image-20220420161756947"></p><h2 id="代码实现（Floyd-Warshall）"><a href="#代码实现（Floyd-Warshall）" class="headerlink" title="代码实现（Floyd-Warshall）"></a>代码实现（Floyd-Warshall）</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123; <span class="comment">//解决多源最短路径</span></span><br><span class="line"><span class="keyword">int</span> e[<span class="number">51</span>][<span class="number">51</span>] ;</span><br><span class="line"><span class="keyword">int</span> i, j,a,b, k,c,n,m;</span><br><span class="line"><span class="keyword">int</span> inf = <span class="number">9999999</span>;</span><br><span class="line"></span><br><span class="line">scanf_s(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (i == j)</span><br><span class="line">e[i][j] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">e[i][j] = inf;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line">scanf_s(<span class="string">&quot;%d %d %d&quot;</span>, &amp;a, &amp;b,&amp;c);</span><br><span class="line">e[a][b] = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(k=<span class="number">1</span>;k&lt;=n;k++)</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (e[i][j] &gt; e[i][k] + e[k][j])</span><br><span class="line">e[i][j] = e[i][k] + e[k][j];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%10d&quot;</span>, e[i][j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">getchar(); getchar();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：</p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201621265.png" alt="image-20220420162127182"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201621065.png" alt="image-20220420162150024"></p><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span> <span class="number">8</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">3</span> <span class="number">6</span></span><br><span class="line"><span class="number">1</span> <span class="number">4</span> <span class="number">4</span></span><br><span class="line"><span class="number">2</span> <span class="number">3</span> <span class="number">3</span></span><br><span class="line"><span class="number">3</span> <span class="number">1</span> <span class="number">7</span></span><br><span class="line"><span class="number">3</span> <span class="number">4</span> <span class="number">1</span></span><br><span class="line"><span class="number">4</span> <span class="number">1</span> <span class="number">5</span></span><br><span class="line"><span class="number">4</span> <span class="number">3</span> <span class="number">12</span></span><br></pre></td></tr></table></figure><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span>         <span class="number">2</span>         <span class="number">5</span>         <span class="number">4</span></span><br><span class="line"><span class="number">9</span>         <span class="number">0</span>         <span class="number">3</span>         <span class="number">4</span></span><br><span class="line"><span class="number">6</span>         <span class="number">8</span>         <span class="number">0</span>         <span class="number">1</span></span><br><span class="line"><span class="number">5</span>         <span class="number">7</span>        <span class="number">10</span>         <span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>时间复杂度O(N^3^)。</p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201623503.png" alt="image-20220420162337450"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201624891.png" alt="image-20220420162403850"></p><h2 id="Dijkstra-算法——通过边实现松弛"><a href="#Dijkstra-算法——通过边实现松弛" class="headerlink" title="Dijkstra 算法——通过边实现松弛"></a>Dijkstra 算法——通过边实现松弛</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201626090.png" alt="image-20220420162603014"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201626375.png" alt="image-20220420162629272"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201626526.png" alt="image-20220420162643445"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201627246.png" alt="image-20220420162706159"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201627245.png" alt="image-20220420162722163"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201627342.png" alt="image-20220420162740290"></p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> e[<span class="number">51</span>][<span class="number">51</span>] ;</span><br><span class="line"><span class="keyword">int</span> i, j, n, m,a,b,c,min,u,inf=<span class="number">999999</span>;</span><br><span class="line"><span class="keyword">int</span> book[<span class="number">51</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dis[<span class="number">51</span>];</span><br><span class="line">scanf_s(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)<span class="comment">//二维数组初始化</span></span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (i == j)e[i][j] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">e[i][j] = inf;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= m; i++) &#123;<span class="comment">//读入</span></span><br><span class="line">scanf_s(<span class="string">&quot;%d %d %d&quot;</span>, &amp;a, &amp;b,&amp;c);</span><br><span class="line">e[a][b] = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//初始化dis数组，1号到各个顶点的初始路程</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">dis[i] = e[<span class="number">1</span>][i];</span><br><span class="line">book[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//Dijkstra算法核心</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n<span class="number">-1</span>; i++) &#123;<span class="comment">//需要重复n-1次</span></span><br><span class="line"><span class="comment">//找到离1号顶点最近的点</span></span><br><span class="line">min = inf;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= n ; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (book[j]==<span class="number">0</span>&amp;&amp;dis[j] &lt; min) &#123;</span><br><span class="line">min = dis[j];</span><br><span class="line">u = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">book[u] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= n ; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (e[u][j] &lt; inf) &#123;</span><br><span class="line"><span class="keyword">if</span> (dis[j] &gt; e[u][j] + dis[u]) &#123;</span><br><span class="line">dis[j] = e[u][j] + dis[u];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, dis[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">6</span> <span class="number">9</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">3</span> <span class="number">12</span></span><br><span class="line"><span class="number">2</span> <span class="number">3</span> <span class="number">9</span></span><br><span class="line"><span class="number">2</span> <span class="number">4</span> <span class="number">3</span></span><br><span class="line"><span class="number">3</span> <span class="number">5</span> <span class="number">5</span></span><br><span class="line"><span class="number">4</span> <span class="number">3</span> <span class="number">4</span></span><br><span class="line"><span class="number">4</span> <span class="number">5</span> <span class="number">13</span></span><br><span class="line"><span class="number">4</span> <span class="number">6</span> <span class="number">15</span></span><br><span class="line"><span class="number">5</span> <span class="number">6</span> <span class="number">4</span></span><br></pre></td></tr></table></figure><h3 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">8</span> <span class="number">4</span> <span class="number">13</span> <span class="number">17</span></span><br></pre></td></tr></table></figure><h3 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h3><p>时间复杂度O(N^2^)</p><blockquote><p>Dijkstra算法 是处理单源最短路径的有效算法，但它局限于边的权值非负的情况，<br>若图中出现权值为负的边，Dijkstra算法就会失效，求出的最短路径就可能是错的。这时候，<br>就需要使用其他的算法来求解最短路径， Bellman-Ford算法就是其中最常用的一个。</p></blockquote><h2 id="Bellman-Ford一解决负权边"><a href="#Bellman-Ford一解决负权边" class="headerlink" title="Bellman-Ford一解决负权边"></a>Bellman-Ford一解决负权边</h2><blockquote><h2 id="用邻接表表示法存储图"><a href="#用邻接表表示法存储图" class="headerlink" title="用邻接表表示法存储图"></a>用邻接表表示法存储图</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201635819.png" alt="image-20220420163559715"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201636083.png" alt="image-20220420163616022"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201636448.png" alt="image-20220420163639371"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201637104.png" alt="image-20220420163701983"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201637648.png" alt="image-20220420163730580"></p></blockquote><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201639273.png" alt="image-20220420163951199"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201639068.png" alt="image-20220420163920967"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201640749.png" alt="image-20220420164025663"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201640444.png" alt="image-20220420164044353"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201641268.png" alt="image-20220420164105199"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201641945.png" alt="image-20220420164121860"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201641726.png" alt="image-20220420164144654"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201642546.png" alt="image-20220420164230479"></p><h2 id="代码实现-1"><a href="#代码实现-1" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> dis[<span class="number">51</span>],bak[<span class="number">51</span>] , u[<span class="number">51</span>], v[<span class="number">51</span>], w[<span class="number">51</span>], first[<span class="number">50</span>], next[<span class="number">51</span>];</span><br><span class="line"><span class="keyword">int</span> n, m, i, j ,check,flog; </span><br><span class="line"><span class="keyword">int</span> inf = <span class="number">999999</span>;</span><br><span class="line">scanf_s(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line">scanf_s(<span class="string">&quot;%d %d %d&quot;</span>, &amp;u[i], &amp;v[i], &amp;w[i]);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">dis[i] = inf;</span><br><span class="line"><span class="comment">//printf(&quot;%d &quot;, dis[i]);</span></span><br><span class="line">&#125;</span><br><span class="line">dis[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//最多进行n-1轮更新，但不一定就要循环n-1轮，因为可能未到n-1轮就已经计算出了最短路径</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n - <span class="number">1</span>; i++) &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//对数组进行复制</span></span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= m; j++) &#123;</span><br><span class="line">bak[i] = dis[i];</span><br><span class="line">&#125;</span><br><span class="line">check = <span class="number">0</span>;<span class="comment">//用于标记数组是否更新</span></span><br><span class="line"><span class="comment">//如果到v[j]顶点距离大于从u[j]顶点出发+w[i](路程)的话，就对dis[]数组的v[j]路程进行更新</span></span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= m; j++) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (dis[v[j]] &gt; dis[u[j]] + w[j]) &#123;</span><br><span class="line">dis[v[j]] = dis[u[j]] + w[j];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= m; j++) &#123;<span class="comment">//检查数组是否有更新</span></span><br><span class="line"><span class="keyword">if</span> (bak[i] != dis[i]) &#123;<span class="comment">//如果没有更新标记为未更新并结束</span></span><br><span class="line">check = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (check = <span class="number">1</span>) &#123;<span class="comment">//如果没有更新了，就退出循环</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">flog = <span class="number">0</span>;<span class="comment">//用于标记是否有负权回路</span></span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= m; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (dis[v[i]] &gt; dis[u[i]] + w[i]) &#123;<span class="comment">//如果有负权回路</span></span><br><span class="line">flog = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出</span></span><br><span class="line"><span class="keyword">if</span> (flog == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;有负权回路。&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, dis[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">getchar(); getchar();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span> <span class="number">5</span></span><br><span class="line"><span class="number">2</span> <span class="number">3</span> <span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">-3</span></span><br><span class="line"><span class="number">1</span> <span class="number">5</span> <span class="number">5</span></span><br><span class="line"><span class="number">4</span> <span class="number">5</span> <span class="number">2</span></span><br><span class="line"><span class="number">3</span> <span class="number">4</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">有负权回路。</span><br></pre></td></tr></table></figure><blockquote><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201648134.png" alt="image-20220420164810012"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201648304.png" alt="image-20220420164850256"></p></blockquote><h2 id="Bellman-Ford的队列优化"><a href="#Bellman-Ford的队列优化" class="headerlink" title="Bellman-Ford的队列优化"></a>Bellman-Ford的队列优化</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201729017.png" alt="image-20220420172948963"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201730039.png" alt="image-20220420173049942"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201731444.png" alt="image-20220420173102361"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201731293.png" alt="image-20220420173124210"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201734699.png" alt="image-20220420173437603"></p><h2 id="代码实现-2"><a href="#代码实现-2" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n, m, i,k;</span><br><span class="line"><span class="keyword">int</span> dis[<span class="number">6</span>] = &#123; <span class="number">0</span> &#125;, book[<span class="number">6</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> u[<span class="number">8</span>], v[<span class="number">8</span>], w[<span class="number">8</span>];</span><br><span class="line"><span class="keyword">int</span> first[<span class="number">6</span>] ;</span><br><span class="line"><span class="keyword">int</span> next[<span class="number">8</span>];</span><br><span class="line"><span class="keyword">int</span> que[<span class="number">101</span>] = &#123; <span class="number">0</span> &#125;, tail = <span class="number">1</span>, head = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> inf = <span class="number">999999</span>;</span><br><span class="line">scanf_s(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)first[i] = <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line">scanf_s(<span class="string">&quot;%d %d %d&quot;</span>, &amp;u[i], &amp;v[i], &amp;w[i]);</span><br><span class="line">next[i] = first[u[i]];</span><br><span class="line">first[u[i]] = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">dis[i] = inf;</span><br><span class="line">dis[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)book[i] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">que[tail] = <span class="number">1</span>;</span><br><span class="line">book[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">tail++;</span><br><span class="line"><span class="keyword">while</span> (head &lt; tail) &#123;</span><br><span class="line">k = first[que[head]];</span><br><span class="line"><span class="keyword">while</span> (k != <span class="number">-1</span>) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (dis[v[k]] &gt; dis[u[k]] + w[k]) &#123;</span><br><span class="line">dis[v[k]] = dis[u[k]] + w[k];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (book[v[k]] == <span class="number">0</span>) &#123;</span><br><span class="line">que[tail] = v[k];</span><br><span class="line"></span><br><span class="line">tail++;</span><br><span class="line">book[v[k]] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">k = next[k];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">book[que[head]] = <span class="number">0</span>;</span><br><span class="line">head++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, dis[i]);</span><br><span class="line">getchar(); getchar();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a>输入</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span> <span class="number">7</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">5</span> <span class="number">10</span></span><br><span class="line"><span class="number">2</span> <span class="number">3</span> <span class="number">3</span></span><br><span class="line"><span class="number">2</span> <span class="number">5</span> <span class="number">7</span></span><br><span class="line"><span class="number">3</span> <span class="number">4</span> <span class="number">4</span></span><br><span class="line"><span class="number">4</span> <span class="number">5</span> <span class="number">5</span></span><br><span class="line"><span class="number">5</span> <span class="number">3</span> <span class="number">6</span></span><br></pre></td></tr></table></figure><h3 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span> <span class="number">2</span> <span class="number">5</span> <span class="number">9</span> <span class="number">9</span></span><br></pre></td></tr></table></figure><h2 id="总结-2"><a href="#总结-2" class="headerlink" title="总结"></a>总结</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201738901.png" alt="image-20220420173859784"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201739452.png" alt="image-20220420173913376"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201739379.png" alt="image-20220420173930250"></p>]]></content>
    
    
    <summary type="html">Floyd-Warshall算法、Dijkstra 算法与Bellman-Ford算法</summary>
    
    
    
    <category term="算法笔记" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="c语言" scheme="http://example.com/tags/c%E8%AF%AD%E8%A8%80/"/>
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>CityMap-c语言</title>
    <link href="http://example.com/2022/04/20/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/CityMap/"/>
    <id>http://example.com/2022/04/20/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/CityMap/</id>
    <published>2022-04-20T09:41:00.000Z</published>
    <updated>2023-03-30T02:32:37.459Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CityMAP"><a href="#CityMAP" class="headerlink" title="CityMAP"></a>CityMAP</h1><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201551073.png" alt="image-20220420155158003"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201552856.png" alt="image-20220420155226747"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201552429.png" alt="image-20220420155246373"></p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201558402.png" alt="image-20220420155853277"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201559909.png" alt="image-20220420155904869"></p><h2 id="代码实现（dfs）"><a href="#代码实现（dfs）" class="headerlink" title="代码实现（dfs）"></a>代码实现（dfs）</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> e[<span class="number">51</span>][<span class="number">51</span>] ;<span class="comment">//邻接矩阵表示法存储地图的二维数组</span></span><br><span class="line"><span class="keyword">int</span> book[<span class="number">51</span>] ;<span class="comment">//标记遍历的点</span></span><br><span class="line"><span class="keyword">int</span> n, m,dis,min=<span class="number">9999999</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> cur, <span class="keyword">int</span> dis)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (cur == n) &#123;<span class="comment">//如果当前点是终点</span></span><br><span class="line"><span class="keyword">if</span> (dis &lt; min) &#123;</span><br><span class="line">min = dis;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (dis &gt; min)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">int</span> j;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= n; j++) &#123;<span class="comment">//从1~n依次遍历</span></span><br><span class="line"><span class="keyword">if</span> (e[cur][j] != <span class="number">0</span> &amp;&amp; book[j] == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="comment">//判断当前点到j点是否有路且未标记</span></span><br><span class="line">book[j] = <span class="number">1</span>;</span><br><span class="line">dfs(j, dis + e[cur][j]);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">book[cur] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> i, j, a,b,c;</span><br><span class="line"></span><br><span class="line">scanf_s(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line">scanf_s(<span class="string">&quot;%d %d %d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line">e[a][b] = c;</span><br><span class="line">&#125;</span><br><span class="line">book[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">dfs(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, min);</span><br><span class="line">getchar(); getchar();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span> <span class="number">8</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">5</span> <span class="number">10</span></span><br><span class="line"><span class="number">2</span> <span class="number">3</span> <span class="number">3</span></span><br><span class="line"><span class="number">2</span> <span class="number">5</span> <span class="number">7</span></span><br><span class="line"><span class="number">3</span> <span class="number">1</span> <span class="number">4</span></span><br><span class="line"><span class="number">3</span> <span class="number">4</span> <span class="number">4</span></span><br><span class="line"><span class="number">4</span> <span class="number">5</span> <span class="number">5</span></span><br><span class="line"><span class="number">5</span> <span class="number">3</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">9</span></span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201603332.png" alt="image-20220420160315284"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201603518.png" alt="image-20220420160344443"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201604286.png" alt="image-20220420160409224"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201605030.png" alt="image-20220420160507989"></p><h1 id="最少转机"><a href="#最少转机" class="headerlink" title="最少转机"></a>最少转机</h1><h2 id="问题描述-1"><a href="#问题描述-1" class="headerlink" title="问题描述"></a>问题描述</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201607086.png" alt="image-20220420160748005"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201608803.png" alt="image-20220420160814756"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201608049.png" alt="image-20220420160837969"></p><h2 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201609006.png" alt="image-20220420160913917"></p><h2 id="代码实现（bfs）"><a href="#代码实现（bfs）" class="headerlink" title="代码实现（bfs）"></a>代码实现（bfs）</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">note</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="keyword">int</span> s;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i, j, n, m, a,b,start, end,tail,head,flag=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> e[<span class="number">51</span>][<span class="number">51</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> book[<span class="number">51</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">note</span> <span class="title">que</span>[2501];</span></span><br><span class="line">scanf_s(<span class="string">&quot;%d %d %d %d&quot;</span>, &amp;n, &amp;m, &amp;start, &amp;end);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line">scanf_s(<span class="string">&quot;%d %d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">e[a][b] = <span class="number">1</span>;</span><br><span class="line">e[b][a] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">tail = <span class="number">1</span>;</span><br><span class="line">head = <span class="number">1</span>;</span><br><span class="line">que[tail].x = start;</span><br><span class="line">que[tail].s = <span class="number">0</span>;</span><br><span class="line">book[start] = <span class="number">1</span>;</span><br><span class="line">tail++;<span class="comment">//不要忘记！！</span></span><br><span class="line"><span class="keyword">while</span> (head &lt; tail) &#123;</span><br><span class="line"><span class="keyword">int</span> cur;</span><br><span class="line">cur = que[head].x;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (e[cur][i] == <span class="number">1</span> &amp;&amp; book[i] == <span class="number">0</span>) &#123;</span><br><span class="line">book[i] = <span class="number">1</span>;</span><br><span class="line">que[tail].x = i;</span><br><span class="line">que[tail].s = que[head].s + <span class="number">1</span>;</span><br><span class="line">tail++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (que[tail].x == end) &#123;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag == <span class="number">1</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">head++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, que[tail<span class="number">-1</span>].s);</span><br><span class="line">getchar(); getchar();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span> <span class="number">7</span> <span class="number">1</span> <span class="number">5</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">3</span></span><br><span class="line"><span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="number">2</span> <span class="number">4</span></span><br><span class="line"><span class="number">3</span> <span class="number">4</span></span><br><span class="line"><span class="number">3</span> <span class="number">5</span></span><br><span class="line"><span class="number">4</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><h3 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">dfs与bfs</summary>
    
    
    
    <category term="算法笔记" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="c语言" scheme="http://example.com/tags/c%E8%AF%AD%E8%A8%80/"/>
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>图的遍历-c语言</title>
    <link href="http://example.com/2022/04/20/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/%E5%9B%BE%E7%9A%84%E9%81%8D%E5%8E%86/"/>
    <id>http://example.com/2022/04/20/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/%E5%9B%BE%E7%9A%84%E9%81%8D%E5%8E%86/</id>
    <published>2022-04-20T09:40:00.000Z</published>
    <updated>2023-03-30T02:32:37.453Z</updated>
    
    <content type="html"><![CDATA[<h1 id="图的遍历"><a href="#图的遍历" class="headerlink" title="图的遍历"></a>图的遍历</h1><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201537944.png" alt="image-20220420153712863"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201537783.png" alt="image-20220420153738745"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201538667.png" alt="image-20220420153816571"></p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201540061.png" alt="image-20220420154057981"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201541232.png" alt="image-20220420154118178"></p><h2 id="代码实现（dfs）"><a href="#代码实现（dfs）" class="headerlink" title="代码实现（dfs）"></a>代码实现（dfs）</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> e[<span class="number">101</span>][<span class="number">101</span>],book[<span class="number">101</span>];<span class="comment">//e为存储图的邻接矩阵表示法的二维数组，book为图中的点</span></span><br><span class="line"><span class="keyword">int</span> n, m,sum;<span class="comment">//sum表示顶点数</span></span><br><span class="line"><span class="comment">//n为顶点数，m是边的个数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;<span class="comment">//x为当前所在顶点的编号</span></span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="comment">//if(book[x]==1)</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, x);</span><br><span class="line">sum++;<span class="comment">//每访问一个顶点sum就加1</span></span><br><span class="line"><span class="keyword">if</span> (sum == n)<span class="comment">//如果所有定点都遍历到了</span></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (e[x][i] == <span class="number">1</span> &amp;&amp; book[i] == <span class="number">0</span>) &#123;</span><br><span class="line">book[i] = <span class="number">1</span>;</span><br><span class="line">dfs(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//book[x] = 0;</span></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> i, a,b;</span><br><span class="line">scanf_s(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line"><span class="comment">//m是用来告诉程序要输入几条边的</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= m; i++) &#123;<span class="comment">//i&lt;=m</span></span><br><span class="line">scanf_s(<span class="string">&quot;%d %d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">e[a][b] = <span class="number">1</span>;</span><br><span class="line">e[b][a] = <span class="number">1</span>;<span class="comment">//因为邻接矩阵表示法是沿对角线对称的</span></span><br><span class="line">&#125;</span><br><span class="line">book[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">dfs(<span class="number">1</span>);</span><br><span class="line">getchar(); getchar();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>图的表示方法：邻接矩阵表示法</p></blockquote><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span> <span class="number">5</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">3</span></span><br><span class="line"><span class="number">1</span> <span class="number">5</span></span><br><span class="line"><span class="number">2</span> <span class="number">4</span></span><br><span class="line"><span class="number">3</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">4</span> <span class="number">3</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201548437.png" alt="image-20220420154833363"></p><h2 id="代码实现（bfs）"><a href="#代码实现（bfs）" class="headerlink" title="代码实现（bfs）"></a>代码实现（bfs）</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">51</span>][<span class="number">51</span>];<span class="comment">//邻接矩阵表示法的二维数组</span></span><br><span class="line"><span class="keyword">int</span> book[<span class="number">100</span>] = &#123;<span class="number">0</span>&#125;;<span class="comment">//做标记，表示这个点已经遍历过了。一定要初始化！！</span></span><br><span class="line"><span class="keyword">int</span> i, j, n, m,c,b,tail,head,cur;</span><br><span class="line"><span class="keyword">int</span> que[<span class="number">100</span>];<span class="comment">//把遍历的点按顺序记下来</span></span><br><span class="line">scanf_s(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;m);<span class="comment">//n表示几个点，m表示几条边</span></span><br><span class="line"><span class="comment">//循环输入m条边到二维数组</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line">scanf_s(<span class="string">&quot;%d %d&quot;</span>, &amp;c, &amp;b);</span><br><span class="line">a[c][b] = <span class="number">1</span>;</span><br><span class="line">a[b][c] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//初始化记录的数组</span></span><br><span class="line">tail = <span class="number">1</span>;</span><br><span class="line">head = <span class="number">1</span>;</span><br><span class="line">que[tail] = <span class="number">1</span>;<span class="comment">//从编号1开始，将1号顶点加入队列</span></span><br><span class="line">tail++;<span class="comment">//队尾变化</span></span><br><span class="line">book[<span class="number">1</span>] = <span class="number">1</span>;<span class="comment">//对1进行标记</span></span><br><span class="line"><span class="comment">//当队列不为空时</span></span><br><span class="line"><span class="keyword">while</span> (head &lt; tail) &#123;</span><br><span class="line">cur = que[head];<span class="comment">//记录当前正在遍历的顶点号</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++) &#123;<span class="comment">//从1~n依次尝试</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//如果有边且未标记  </span></span><br><span class="line"><span class="keyword">if</span> (a[cur][i]==<span class="number">1</span> &amp;&amp; book[i] == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="comment">//入队，并标记</span></span><br><span class="line">book[i] = <span class="number">1</span>;</span><br><span class="line">que[tail] = i;</span><br><span class="line">tail++;<span class="comment">//队尾变化</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (tail &gt; n)<span class="comment">//如果所有顶点都遍历到了就结束</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">head++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, que[i]);</span><br><span class="line">getchar(); getchar();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span> <span class="number">5</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">3</span></span><br><span class="line"><span class="number">1</span> <span class="number">5</span></span><br><span class="line"><span class="number">2</span> <span class="number">4</span></span><br><span class="line"><span class="number">3</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><h2 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">5</span> <span class="number">4</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">dfs与bfs</summary>
    
    
    
    <category term="算法笔记" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="c语言" scheme="http://example.com/tags/c%E8%AF%AD%E8%A8%80/"/>
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>水管工游戏-c语言</title>
    <link href="http://example.com/2022/04/20/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/%E6%B0%B4%E7%AE%A1%E5%B7%A5%E6%B8%B8%E6%88%8F/"/>
    <id>http://example.com/2022/04/20/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/%E6%B0%B4%E7%AE%A1%E5%B7%A5%E6%B8%B8%E6%88%8F/</id>
    <published>2022-04-20T09:39:00.000Z</published>
    <updated>2023-03-30T02:32:37.452Z</updated>
    
    <content type="html"><![CDATA[<h1 id="水管工游戏"><a href="#水管工游戏" class="headerlink" title="水管工游戏"></a>水管工游戏</h1><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201516817.png" alt="image-20220420151631766"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201516802.png" alt="image-20220420151651747"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201518701.png" alt="image-20220420151826646"></p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201518156.png" alt="image-20220420151840116"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201519791.png" alt="image-20220420151920723"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201521715.png" alt="image-20220420152129666"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201521543.png" alt="image-20220420152151463"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201528078.png" alt="image-20220420152854022"></p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> n, m, front,top,flag;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">51</span>][<span class="number">51</span>];</span><br><span class="line"><span class="keyword">int</span> book[<span class="number">51</span>][<span class="number">51</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">note</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="keyword">int</span> y;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">note</span> <span class="title">s</span>[101];</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> front)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">if</span> (x == n &amp;&amp; y == m + <span class="number">1</span>) &#123;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; top; i++) &#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;(%d,%d)&quot;</span>, s[i].x, s[i].y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n---------------------\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (x&lt;<span class="number">1</span> || x&gt;n || y&lt;<span class="number">1</span> || y&gt;m)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">if</span> (a[x][y] == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">if</span> (book[x][y] == <span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">s[top].x = x;</span><br><span class="line">s[top].y = y;</span><br><span class="line">top++;</span><br><span class="line">book[x][y] = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//直管</span></span><br><span class="line"><span class="keyword">if</span> (a[x][y] &gt;= <span class="number">5</span> ) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (front == <span class="number">1</span>) &#123;</span><br><span class="line">dfs(x , y+<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (front == <span class="number">2</span>) &#123;</span><br><span class="line">dfs(x+<span class="number">1</span>, y , <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (front == <span class="number">3</span>) &#123;</span><br><span class="line">dfs(x, y - <span class="number">1</span>, <span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (front == <span class="number">4</span>) &#123;</span><br><span class="line">dfs(x - <span class="number">1</span>, y, <span class="number">4</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (a[x][y] &lt;= <span class="number">4</span> &amp;&amp; a[x][y] &gt;= <span class="number">1</span> ) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (front == <span class="number">1</span>) &#123;</span><br><span class="line">dfs(x+<span class="number">1</span>, y , <span class="number">2</span>);</span><br><span class="line">dfs(x - <span class="number">1</span>, y, <span class="number">4</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (front == <span class="number">2</span>) &#123;</span><br><span class="line">dfs(x , y+<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">dfs(x , y<span class="number">-1</span>, <span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (front == <span class="number">3</span>) &#123;</span><br><span class="line">dfs(x<span class="number">-1</span>, y , <span class="number">4</span>);</span><br><span class="line">dfs(x + <span class="number">1</span>, y, <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (front == <span class="number">4</span>) &#123;</span><br><span class="line">dfs(x , y+<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">dfs(x , y<span class="number">-1</span>, <span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">book[x][y] = <span class="number">0</span>;</span><br><span class="line">top--;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> i, j;</span><br><span class="line">scanf_s(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">scanf_s(<span class="string">&quot;%d&quot;</span>, &amp;a[i][j]);</span><br><span class="line"></span><br><span class="line">dfs(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span> (flag == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;找不到路径。&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">getchar(); getchar();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span> <span class="number">4</span></span><br><span class="line"><span class="number">5</span> <span class="number">3</span> <span class="number">5</span> <span class="number">3</span></span><br><span class="line"><span class="number">1</span> <span class="number">5</span> <span class="number">3</span> <span class="number">0</span></span><br><span class="line"><span class="number">2</span> <span class="number">3</span> <span class="number">5</span> <span class="number">1</span></span><br><span class="line"><span class="number">6</span> <span class="number">1</span> <span class="number">1</span> <span class="number">5</span></span><br><span class="line"><span class="number">1</span> <span class="number">5</span> <span class="number">5</span> <span class="number">4</span></span><br></pre></td></tr></table></figure><h2 id="输出（直接输出路径）"><a href="#输出（直接输出路径）" class="headerlink" title="输出（直接输出路径）"></a>输出（直接输出路径）</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="number">1</span>,<span class="number">1</span>)(<span class="number">1</span>,<span class="number">2</span>)(<span class="number">2</span>,<span class="number">2</span>)(<span class="number">3</span>,<span class="number">2</span>)(<span class="number">3</span>,<span class="number">3</span>)(<span class="number">3</span>,<span class="number">4</span>)(<span class="number">4</span>,<span class="number">4</span>)(<span class="number">5</span>,<span class="number">4</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">dfs（深度优先搜索）</summary>
    
    
    
    <category term="算法笔记" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="c语言" scheme="http://example.com/tags/c%E8%AF%AD%E8%A8%80/"/>
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>宝岛探险-c语言</title>
    <link href="http://example.com/2022/04/20/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/%E5%AE%9D%E5%B2%9B%E6%8E%A2%E9%99%A9/"/>
    <id>http://example.com/2022/04/20/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/%E5%AE%9D%E5%B2%9B%E6%8E%A2%E9%99%A9/</id>
    <published>2022-04-20T09:38:00.000Z</published>
    <updated>2023-03-30T02:32:37.452Z</updated>
    
    <content type="html"><![CDATA[<h1 id="bfs之宝岛探险"><a href="#bfs之宝岛探险" class="headerlink" title="bfs之宝岛探险"></a>bfs之宝岛探险</h1><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201459746.png" alt="image-20220420145930672"></p><blockquote><p>搞清楚问题之后。你会发现其实就是从（6，8）开始广度优先搜索。每次需要向上下左右四个方向扩展，当扩展出的点大于0时就加入队列，直到队列扩展完毕。所有被加入到队列的点的总数就是小岛的面积。假设地图的大小不超过50*50。</p></blockquote><h2 id="代码实现如下"><a href="#代码实现如下" class="headerlink" title="代码实现如下:"></a>代码实现如下:</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">note</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="keyword">int</span> y;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> i, j, n, m, startx, starty,head,tail,tx,ty,k,sum=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">51</span>][<span class="number">51</span>];<span class="comment">//地图</span></span><br><span class="line"><span class="keyword">int</span> book[<span class="number">51</span>][<span class="number">51</span>] = &#123;<span class="number">0</span>&#125;;<span class="comment">//标记用的备份地图</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">note</span> <span class="title">que</span>[2501];</span><span class="comment">//最多50*50个点</span></span><br><span class="line"><span class="keyword">int</span> next[<span class="number">4</span>][<span class="number">2</span>] = &#123; &#123;<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">0</span>,<span class="number">1</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">0</span>,<span class="number">-1</span>&#125; &#125;;<span class="comment">//四个方向</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入你要输入几行几列的地图：&quot;</span>);</span><br><span class="line">scanf_s(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入地图：\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">scanf_s(<span class="string">&quot;%d&quot;</span>, &amp;a[i][j]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入初始位置：&quot;</span>);</span><br><span class="line">scanf_s(<span class="string">&quot;%d %d&quot;</span>, &amp;startx, &amp;starty);</span><br><span class="line"><span class="comment">//初始队列</span></span><br><span class="line">head = <span class="number">1</span>;</span><br><span class="line">tail = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//赋值初始位置</span></span><br><span class="line">que[tail].x = startx;</span><br><span class="line">que[tail].y = starty;</span><br><span class="line"><span class="comment">//标记初始位置</span></span><br><span class="line">book[startx][starty] = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//队尾++</span></span><br><span class="line">tail++;</span><br><span class="line"><span class="comment">//当队列不为空时</span></span><br><span class="line"><span class="keyword">while</span> (head &lt; tail) &#123;</span><br><span class="line"><span class="comment">//枚举四个方向</span></span><br><span class="line"><span class="keyword">for</span> (k = <span class="number">0</span>; k &lt;= <span class="number">3</span>; k++) &#123;</span><br><span class="line">tx = que[head].x + next[k][<span class="number">0</span>];</span><br><span class="line">ty = que[head].y + next[k][<span class="number">1</span>];</span><br><span class="line"><span class="comment">//判断是否越界</span></span><br><span class="line"><span class="keyword">if</span> (tx&lt;<span class="number">1</span> || tx&gt;n || ty&lt;<span class="number">1</span> || ty&gt;m)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="comment">//入队操作</span></span><br><span class="line"><span class="keyword">if</span> (a[tx][ty] &gt; <span class="number">0</span> &amp;&amp; book[tx][ty] == <span class="number">0</span>) &#123;</span><br><span class="line">book[tx][ty] = <span class="number">1</span>;<span class="comment">//标记这个点</span></span><br><span class="line">sum++;<span class="comment">//面积增加</span></span><br><span class="line">que[tail].x = tx;</span><br><span class="line">que[tail].y = ty;</span><br><span class="line">tail++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">head++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;岛屿的大小为：%d&quot;</span>, sum);</span><br><span class="line">getchar(); getchar();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">请输入你要输入几行几列的地图：<span class="number">10</span> <span class="number">10</span></span><br><span class="line">请输入地图：</span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="number">3</span> <span class="number">0</span> <span class="number">2</span> <span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">4</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">2</span> <span class="number">0</span> <span class="number">1</span></span><br><span class="line"><span class="number">3</span> <span class="number">2</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">4</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">5</span> <span class="number">3</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">5</span> <span class="number">4</span> <span class="number">3</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">1</span> <span class="number">3</span> <span class="number">6</span> <span class="number">2</span> <span class="number">1</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">3</span> <span class="number">4</span> <span class="number">8</span> <span class="number">9</span> <span class="number">7</span> <span class="number">5</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">3</span> <span class="number">7</span> <span class="number">8</span> <span class="number">6</span> <span class="number">0</span> <span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span></span><br><span class="line">请输入初始位置：<span class="number">6</span> <span class="number">8</span></span><br></pre></td></tr></table></figure><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">岛屿的大小为：<span class="number">38</span></span><br></pre></td></tr></table></figure><hr><h1 id="dfs之宝岛探险"><a href="#dfs之宝岛探险" class="headerlink" title="dfs之宝岛探险"></a>dfs之宝岛探险</h1><h2 id="问题描述-1"><a href="#问题描述-1" class="headerlink" title="问题描述"></a>问题描述</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201507546.png" alt="image-20220420145930672"></p><blockquote><p>搞清楚问题之后。你会发现其实就是从（6，8）开始广度优先搜索。每次需要向上下左右四个方向扩展，当扩展出的点大于0时就加入队列，直到队列扩展完毕。所有被加入到队列的点的总数就是小岛的面积。假设地图的大小不超过50*50。</p></blockquote><h2 id="代码实现如下-1"><a href="#代码实现如下-1" class="headerlink" title="代码实现如下:"></a>代码实现如下:</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> book[<span class="number">51</span>][<span class="number">51</span>];</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">51</span>][<span class="number">51</span>];</span><br><span class="line"><span class="keyword">int</span> n, m ,sum=<span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> next[<span class="number">4</span>][<span class="number">2</span>] = &#123; &#123;<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">0</span>,<span class="number">-1</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">0</span>,<span class="number">1</span>&#125; &#125;;</span><br><span class="line">    <span class="keyword">int</span> tx,k, ty;</span><br><span class="line">    <span class="keyword">for</span> (k = <span class="number">0</span>; k &lt;= <span class="number">3</span>; k++) &#123;</span><br><span class="line">        tx = x + next[k][<span class="number">0</span>];</span><br><span class="line">        ty = y + next[k][<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span> (tx&lt;<span class="number">1</span> || tx&gt;n || ty&lt;<span class="number">1</span> || ty&gt;m)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span> (book[tx][ty] == <span class="number">0</span> &amp;&amp; a[tx][ty] &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">            book[tx][ty] = <span class="number">1</span>;</span><br><span class="line">            sum++;</span><br><span class="line">            dfs(tx, ty);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j,  startx, starty;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入你要输入几行几列的地图：&quot;</span>);</span><br><span class="line">    scanf_s(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入地图：\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">            scanf_s(<span class="string">&quot;%d&quot;</span>, &amp;a[i][j]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入你的起始位置：&quot;</span>);</span><br><span class="line">    scanf_s(<span class="string">&quot;%d %d&quot;</span>, &amp;startx, &amp;starty);</span><br><span class="line">    book[startx][starty] = <span class="number">1</span>;</span><br><span class="line">    dfs(startx, starty);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;小岛的面积是：%d&quot;</span>, sum);</span><br><span class="line">    getchar(); getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">请输入你要输入几行几列的地图：<span class="number">10</span> <span class="number">10</span></span><br><span class="line">请输入地图：</span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="number">3</span> <span class="number">0</span> <span class="number">2</span> <span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">4</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">2</span> <span class="number">0</span> <span class="number">1</span></span><br><span class="line"><span class="number">3</span> <span class="number">2</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">4</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">5</span> <span class="number">3</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">5</span> <span class="number">4</span> <span class="number">3</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">1</span> <span class="number">3</span> <span class="number">6</span> <span class="number">2</span> <span class="number">1</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">3</span> <span class="number">4</span> <span class="number">8</span> <span class="number">9</span> <span class="number">7</span> <span class="number">5</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">3</span> <span class="number">7</span> <span class="number">8</span> <span class="number">6</span> <span class="number">0</span> <span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span></span><br><span class="line">请输入初始位置：<span class="number">6</span> <span class="number">8</span></span><br></pre></td></tr></table></figure><h2 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">小岛的面积是：<span class="number">38</span></span><br></pre></td></tr></table></figure><hr><h1 id="小岛个数问题"><a href="#小岛个数问题" class="headerlink" title="小岛个数问题"></a>小岛个数问题</h1><h2 id="问题描述-2"><a href="#问题描述-2" class="headerlink" title="问题描述"></a>问题描述</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201510891.png" alt="image-20220420151043846"></p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> book[<span class="number">51</span>][<span class="number">51</span>];</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">51</span>][<span class="number">51</span>];</span><br><span class="line"><span class="keyword">int</span> n, m, sum = <span class="number">1</span> , num;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y,<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> next[<span class="number">4</span>][<span class="number">2</span>] = &#123; &#123;<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">0</span>,<span class="number">-1</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">0</span>,<span class="number">1</span>&#125; &#125;;</span><br><span class="line"><span class="keyword">int</span> tx, k, ty;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (k = <span class="number">0</span>; k &lt;= <span class="number">3</span>; k++) &#123;</span><br><span class="line">tx = x + next[k][<span class="number">0</span>];</span><br><span class="line">ty = y + next[k][<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (tx&lt;<span class="number">1</span> || tx&gt;n || ty&lt;<span class="number">1</span> || ty&gt;m)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span> (book[tx][ty] == <span class="number">0</span> &amp;&amp; a[tx][ty] &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">book[tx][ty] = <span class="number">1</span>;</span><br><span class="line">a[tx][ty] = num;</span><br><span class="line"><span class="comment">//sum++;</span></span><br><span class="line">dfs(tx, ty,num);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> i, j, startx, starty;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入你要输入几行几列的地图：&quot;</span>);</span><br><span class="line">scanf_s(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入地图：\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">scanf_s(<span class="string">&quot;%d&quot;</span>, &amp;a[i][j]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= m; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[i][j] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">num--;</span><br><span class="line">a[i][j] = num;</span><br><span class="line">dfs(i, j, num);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;染色后的小岛地图是：\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= m; j++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%3d&quot;</span>, a[i][j]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;小岛的个数是：%d&quot;</span>, -num);</span><br><span class="line">getchar(); getchar();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">请输入你要输入几行几列的地图：<span class="number">10</span> <span class="number">10</span></span><br><span class="line">请输入地图：</span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="number">3</span> <span class="number">0</span> <span class="number">2</span> <span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">4</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">2</span> <span class="number">0</span> <span class="number">1</span></span><br><span class="line"><span class="number">3</span> <span class="number">2</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">4</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">5</span> <span class="number">3</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">5</span> <span class="number">4</span> <span class="number">3</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">1</span> <span class="number">3</span> <span class="number">6</span> <span class="number">2</span> <span class="number">1</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">3</span> <span class="number">4</span> <span class="number">8</span> <span class="number">9</span> <span class="number">7</span> <span class="number">5</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">3</span> <span class="number">7</span> <span class="number">8</span> <span class="number">6</span> <span class="number">0</span> <span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">染色后的小岛地图是：</span><br><span class="line"> <span class="number">-1</span> <span class="number">-1</span> <span class="number">-1</span>  <span class="number">0</span>  <span class="number">0</span>  <span class="number">0</span>  <span class="number">0</span>  <span class="number">0</span> <span class="number">-2</span> <span class="number">-2</span></span><br><span class="line"> <span class="number">-1</span>  <span class="number">0</span> <span class="number">-1</span>  <span class="number">0</span> <span class="number">-3</span> <span class="number">-3</span> <span class="number">-3</span>  <span class="number">0</span> <span class="number">-2</span> <span class="number">-2</span></span><br><span class="line"> <span class="number">-1</span>  <span class="number">0</span> <span class="number">-1</span>  <span class="number">0</span> <span class="number">-3</span> <span class="number">-3</span> <span class="number">-3</span> <span class="number">-3</span>  <span class="number">0</span> <span class="number">-2</span></span><br><span class="line"> <span class="number">-1</span> <span class="number">-1</span>  <span class="number">0</span>  <span class="number">0</span>  <span class="number">0</span> <span class="number">-3</span> <span class="number">-3</span> <span class="number">-3</span>  <span class="number">0</span>  <span class="number">0</span></span><br><span class="line">  <span class="number">0</span>  <span class="number">0</span>  <span class="number">0</span>  <span class="number">0</span>  <span class="number">0</span>  <span class="number">0</span> <span class="number">-3</span> <span class="number">-3</span> <span class="number">-3</span>  <span class="number">0</span></span><br><span class="line">  <span class="number">0</span> <span class="number">-3</span> <span class="number">-3</span> <span class="number">-3</span>  <span class="number">0</span> <span class="number">-3</span> <span class="number">-3</span> <span class="number">-3</span> <span class="number">-3</span>  <span class="number">0</span></span><br><span class="line">  <span class="number">0</span> <span class="number">-3</span> <span class="number">-3</span> <span class="number">-3</span> <span class="number">-3</span> <span class="number">-3</span> <span class="number">-3</span> <span class="number">-3</span> <span class="number">-3</span>  <span class="number">0</span></span><br><span class="line">  <span class="number">0</span>  <span class="number">0</span> <span class="number">-3</span> <span class="number">-3</span> <span class="number">-3</span> <span class="number">-3</span> <span class="number">-3</span> <span class="number">-3</span>  <span class="number">0</span>  <span class="number">0</span></span><br><span class="line">  <span class="number">0</span>  <span class="number">0</span>  <span class="number">0</span> <span class="number">-3</span> <span class="number">-3</span> <span class="number">-3</span> <span class="number">-3</span>  <span class="number">0</span> <span class="number">-4</span> <span class="number">-4</span></span><br><span class="line">  <span class="number">0</span>  <span class="number">0</span>  <span class="number">0</span>  <span class="number">0</span>  <span class="number">0</span>  <span class="number">0</span>  <span class="number">0</span>  <span class="number">0</span> <span class="number">-4</span>  <span class="number">0</span></span><br><span class="line">小岛的个数是：<span class="number">4</span></span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204201513091.png" alt="image-20220420151301025"></p>]]></content>
    
    
    <summary type="html">dfs、bfs与小岛个数</summary>
    
    
    
    <category term="算法笔记" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="c语言" scheme="http://example.com/tags/c%E8%AF%AD%E8%A8%80/"/>
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>8088/8086指令系统</title>
    <link href="http://example.com/2022/04/15/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86/80888086%E6%8C%87%E4%BB%A4%E7%B3%BB%E7%BB%9F/"/>
    <id>http://example.com/2022/04/15/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86/80888086%E6%8C%87%E4%BB%A4%E7%B3%BB%E7%BB%9F/</id>
    <published>2022-04-15T11:10:20.000Z</published>
    <updated>2023-03-30T02:32:37.452Z</updated>
    
    <content type="html"><![CDATA[<h1 id="8088-8086指令系统"><a href="#8088-8086指令系统" class="headerlink" title="8088/8086指令系统"></a>8088/8086指令系统</h1><h2 id="考核要求"><a href="#考核要求" class="headerlink" title="考核要求"></a>考核要求</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151419447.png" alt="image-20220415141956313"></p><h2 id="8088-8086的寻址方式"><a href="#8088-8086的寻址方式" class="headerlink" title="8088/8086的寻址方式"></a>8088/8086的寻址方式</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151421856.png" alt="image-20220415142118760"></p><h3 id="指令的组成"><a href="#指令的组成" class="headerlink" title="指令的组成"></a>指令的组成</h3><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151423571.png" alt="image-20220415142306471"></p><ul><li>操作数指左边的目的操作数和源操作数。</li></ul><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151425353.png" alt="image-20220415142551234"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151427741.png" alt="image-20220415142754640"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151429147.png" alt="image-20220415142934054"></p><ul><li>i表示立即数。</li><li>r是寄存器。</li><li>m是存储器。</li></ul><h3 id="寻址方式分类"><a href="#寻址方式分类" class="headerlink" title="寻址方式分类"></a>寻址方式分类</h3><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151431852.png" alt="image-20220415143122747"></p><h3 id="立即数寻址"><a href="#立即数寻址" class="headerlink" title="立即数寻址"></a>立即数寻址</h3><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151434822.png" alt="image-20220415143447717"></p><ul><li>AL是8位，范围是0~255，500就超出范围了。</li><li>AX是16位，范围是0~65535。</li><li>使用时要注意长度要匹配。</li></ul><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151437607.png" alt="image-20220415143714509"></p><ul><li>加上 Byte/Word PTR用于限制5表示的是字节还是字。</li></ul><h3 id="寄存器寻址"><a href="#寄存器寻址" class="headerlink" title="寄存器寻址"></a>寄存器寻址</h3><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151441629.png" alt="image-20220415144106524"></p><ul><li>双操作数指令长度要一致，不能是8位对16位。</li><li>CS不能作为目的操作数，即,的前面。</li></ul><h3 id="存储器寻址"><a href="#存储器寻址" class="headerlink" title="存储器寻址"></a>存储器寻址</h3><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151442513.png" alt="image-20220415144225410"></p><h4 id="寄存器直接寻址"><a href="#寄存器直接寻址" class="headerlink" title="寄存器直接寻址"></a>寄存器直接寻址</h4><p> <img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151547216.png" alt="image-20220415154719090"></p><h4 id="寄存器间接寻址"><a href="#寄存器间接寻址" class="headerlink" title="寄存器间接寻址"></a>寄存器间接寻址</h4><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151549299.png" alt="image-20220415154903183"></p><ul><li>[]括号内只能出现那四种情况。</li></ul><h4 id="寄存器相对寻址"><a href="#寄存器相对寻址" class="headerlink" title="寄存器相对寻址"></a>寄存器相对寻址</h4><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151551428.png" alt="image-20220415155135323"></p><ul><li>[]括号内只能出现那四种情况。</li></ul><h4 id="基址变址寻址"><a href="#基址变址寻址" class="headerlink" title="基址变址寻址"></a>基址变址寻址</h4><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151555926.png" alt="image-20220415155508821"></p><ul><li>只能是两个基址中选一个或两个变址中选一个。</li></ul><h4 id="相对基址变址寻址"><a href="#相对基址变址寻址" class="headerlink" title="相对基址变址寻址"></a>相对基址变址寻址</h4><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151556302.png" alt="image-20220415155628195"></p><h3 id="思考题"><a href="#思考题" class="headerlink" title="思考题"></a>思考题</h3><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151557791.png" alt="image-20220415155714702"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151557828.png" alt="image-20220415155727746"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151600008.png" alt="image-20220415160010866"></p><h2 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151911585.png" alt="image-20220415191123456"></p><h3 id="传送指令"><a href="#传送指令" class="headerlink" title="传送指令"></a>传送指令</h3><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151912335.png" alt="image-20220415191210230"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151912616.png" alt="image-20220415191256521"></p><h4 id="错误用法"><a href="#错误用法" class="headerlink" title="错误用法"></a>错误用法</h4><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151915207.png" alt="image-20220415191520073"></p><h4 id="交换指令"><a href="#交换指令" class="headerlink" title="交换指令"></a>交换指令</h4><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151916422.png" alt="image-20220415191600327"></p><h4 id="LEA"><a href="#LEA" class="headerlink" title="LEA"></a>LEA</h4><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151916867.png" alt="image-20220415191647773"></p><h4 id="堆栈操作"><a href="#堆栈操作" class="headerlink" title="堆栈操作"></a>堆栈操作</h4><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151917407.png" alt="image-20220415191752324"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151918425.png" alt="image-20220415191842315"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151919795.png" alt="image-20220415191907696"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151919636.png" alt="image-20220415191940522"></p><h3 id="思考题-1"><a href="#思考题-1" class="headerlink" title="思考题"></a>思考题</h3><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151920306.png" alt="image-20220415192018195"></p>]]></content>
    
    
    <summary type="html">为考试做的准备</summary>
    
    
    
    <category term="微机原理" scheme="http://example.com/categories/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86/"/>
    
    
    <category term="微机原理" scheme="http://example.com/tags/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>存储器系统</title>
    <link href="http://example.com/2022/04/15/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86/%E5%AD%98%E5%82%A8%E5%99%A8%E7%B3%BB%E7%BB%9F/"/>
    <id>http://example.com/2022/04/15/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86/%E5%AD%98%E5%82%A8%E5%99%A8%E7%B3%BB%E7%BB%9F/</id>
    <published>2022-04-15T11:09:20.000Z</published>
    <updated>2023-03-30T02:32:37.452Z</updated>
    
    <content type="html"><![CDATA[<h1 id="存储器系统"><a href="#存储器系统" class="headerlink" title="存储器系统"></a>存储器系统</h1><h2 id="考核要求"><a href="#考核要求" class="headerlink" title="考核要求"></a>考核要求</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151301986.png" alt="image-20220415130113861"></p><h2 id="四个小节"><a href="#四个小节" class="headerlink" title="四个小节"></a>四个小节</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151301667.png" alt="image-20220415130142579"></p><h2 id="存储器概述"><a href="#存储器概述" class="headerlink" title="存储器概述"></a>存储器概述</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151302102.png" alt="image-20220415130235994"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151303093.png" alt="image-20220415130324986"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151304139.png" alt="image-20220415130411036"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151305731.png" alt="image-20220415130526633"></p><h3 id="存储系统的层次结构"><a href="#存储系统的层次结构" class="headerlink" title="存储系统的层次结构"></a>存储系统的层次结构</h3><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151308411.png" alt="image-20220415130805304"></p><h3 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h3><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151309836.png" alt="image-20220415130955722"></p><h2 id="8088-8086系统存储器组织"><a href="#8088-8086系统存储器组织" class="headerlink" title="8088/8086系统存储器组织"></a>8088/8086系统存储器组织</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151311299.png" alt="image-20220415131125189"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151313712.png" alt="image-20220415131320596"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151315751.png" alt="image-20220415131533632"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151318410.png" alt="image-20220415131833253"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151319948.png" alt="image-20220415131916851"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151320124.png" alt="image-20220415132028013"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151321881.png" alt="image-20220415132116773"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151323954.png" alt="image-20220415132340830"></p><ul><li>逻辑地址是用16进制数表示的。</li><li>多个逻辑地址可以对应一个物理地址。</li></ul><h3 id="8086系统中主存储器的分体结构"><a href="#8086系统中主存储器的分体结构" class="headerlink" title="8086系统中主存储器的分体结构"></a>8086系统中主存储器的分体结构</h3><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151327442.png" alt="image-20220415132709310"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151329469.png" alt="image-20220415132910376"></p><ul><li>BHE=0选择奇体，A0=0时选择偶体。</li></ul><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151330397.png" alt="image-20220415133007296"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151333041.png" alt="image-20220415133308905"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151333541.png" alt="image-20220415133345443"></p><h2 id="半导体存储器"><a href="#半导体存储器" class="headerlink" title="半导体存储器"></a>半导体存储器</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151334122.png" alt="image-20220415133453012"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151337053.png" alt="image-20220415133743952"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151338462.png" alt="image-20220415133819361"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151339383.png" alt="image-20220415133959292"></p><h3 id="思考题"><a href="#思考题" class="headerlink" title="思考题"></a>思考题</h3><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151340568.png" alt="image-20220415134048484"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151340192.png" alt="image-20220415134054116"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151341283.png" alt="image-20220415134113190"></p><h2 id="半导体存储器与CPU的连接（分析题）"><a href="#半导体存储器与CPU的连接（分析题）" class="headerlink" title="半导体存储器与CPU的连接（分析题）"></a>半导体存储器与CPU的连接（分析题）</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151341315.png" alt="image-20220415134152211"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151344835.png" alt="image-20220415134405731"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151344246.png" alt="image-20220415134421159"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151345800.png" alt="image-20220415134524707"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151345830.png" alt="image-20220415134552733"></p><h3 id="译码器"><a href="#译码器" class="headerlink" title="译码器"></a>译码器</h3><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151347625.png" alt="image-20220415134700535"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151347608.png" alt="image-20220415134717523"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151348089.png" alt="image-20220415134803987"></p><h3 id="往年真题"><a href="#往年真题" class="headerlink" title="往年真题"></a>往年真题</h3><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204151348153.png" alt="image-20220415134826016"></p>]]></content>
    
    
    <summary type="html">为考试做的准备</summary>
    
    
    
    <category term="微机原理" scheme="http://example.com/categories/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86/"/>
    
    
    <category term="微机原理" scheme="http://example.com/tags/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>8086/8088cpu</title>
    <link href="http://example.com/2022/04/14/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86/80868088cpu/"/>
    <id>http://example.com/2022/04/14/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86/80868088cpu/</id>
    <published>2022-04-14T05:09:20.000Z</published>
    <updated>2023-03-30T02:32:37.452Z</updated>
    
    <content type="html"><![CDATA[<h1 id="8086-8088cpu"><a href="#8086-8088cpu" class="headerlink" title="8086/8088cpu"></a>8086/8088cpu</h1><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204140957163.png" alt="image-20220414095748034"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204140958301.png" alt="image-20220414095802167"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204140958679.png" alt="image-20220414095856535"></p><h1 id="8086-8088的功能结构"><a href="#8086-8088的功能结构" class="headerlink" title="8086/8088的功能结构"></a>8086/8088的功能结构</h1><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141003472.png" alt="image-20220414100311324"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141001110.png" alt="image-20220414100138967"></p><h2 id="工作过程"><a href="#工作过程" class="headerlink" title="工作过程"></a>工作过程</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141007462.png" alt="image-20220414100708310"></p><h1 id="8086-8088的寄存器结构"><a href="#8086-8088的寄存器结构" class="headerlink" title="8086/8088的寄存器结构"></a>8086/8088的寄存器结构</h1><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141008975.png" alt="image-20220414100817845"></p><h2 id="通用寄存器"><a href="#通用寄存器" class="headerlink" title="通用寄存器"></a>通用寄存器</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141011340.png" alt="image-20220414101111185"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141012580.png" alt="image-20220414101237440"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141013759.png" alt="image-20220414101334621"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141024097.png" alt="image-20220414102411944"></p><blockquote><h3 id="一、寄存器的英文全称"><a href="#一、寄存器的英文全称" class="headerlink" title="一、寄存器的英文全称"></a>一、<a href="https://so.csdn.net/so/search?q=寄存器&amp;spm=1001.2101.3001.7020">寄存器</a>的英文全称</h3><p>AH&amp;AL＝AX(accumulator)：累加寄存器<br>BH&amp;BL＝BX(base)：基址寄存器<br>CH&amp;CL＝CX(count)：计数寄存器<br>DH&amp;DL＝DX(data)：数据寄存器<br>SP（Stack Pointer）：<a href="https://so.csdn.net/so/search?q=堆栈&amp;spm=1001.2101.3001.7020">堆栈</a>指针寄存器<br>BP（Base Pointer）：基址指针寄存器<br>SI（Source Index）：源变址寄存器<br>DI（Destination Index）：目的变址寄存器<br>IP（Instruction Pointer）：指令指针寄存器<br>CS（Code Segment）代码段寄存器<br>DS（Data Segment）：数据段寄存器<br>SS（Stack Segment）：堆栈段寄存器<br>ES（Extra Segment）：附加段寄存器 </p><h3 id="二、标志寄存器"><a href="#二、标志寄存器" class="headerlink" title="二、标志寄存器"></a>二、标志寄存器</h3><p>OF overflow flag 溢出标志 操作数超出机器能表示的范围表示溢出,溢出时为1.</p><p> SF sign Flag 符号标志 记录运算结果的符号,结果负时为1.<br>ZF zero flag 零标志 运算结果等于0时为1,否则为0.<br>CF carry flag 进位标志 最高有效位产生进位时为1,否则为0.<br>AF auxiliary carry flag 辅助进位标志 运算时,第3位向第4位产生进位时为1,否则为0.<br>PF parity flag 奇偶标志 运算结果操作数位为1的个数为偶数个时为1,否则为0.<br>DF direcion flag 方向标志 用于串处理.DF=1时,每次操作后使SI和DI减小.DF=0时则增大.<br>IF interrupt flag 中断标志 IF=1时,允许CPU响应可屏蔽中断,否则关闭中断.<br>TF trap flag 陷阱标志 用于调试单步操作.</p></blockquote><h2 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141024998.png" alt="image-20220414102444883"></p><h1 id="8086-8088cpu引脚"><a href="#8086-8088cpu引脚" class="headerlink" title="8086/8088cpu引脚"></a>8086/8088cpu引脚</h1><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141028329.png" alt="image-20220414102818164"></p><ul><li>分时复用：不能同时。</li></ul><h3 id="8088"><a href="#8088" class="headerlink" title="8088"></a>8088</h3><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141028593.png" alt="image-20220414102846470"></p><h3 id="8086"><a href="#8086" class="headerlink" title="8086"></a>8086</h3><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141029535.png" alt="image-20220414102901418"></p><h3 id="总结对比记忆"><a href="#总结对比记忆" class="headerlink" title="总结对比记忆"></a>总结对比记忆</h3><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141032054.png" alt="image-20220414103217904"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141034644.png" alt="image-20220414103443497"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141037880.png" alt="image-20220414103700728"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141037313.png" alt="image-20220414103737200"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141038634.png" alt="image-20220414103811528"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141038614.png" alt="image-20220414103851496"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141040187.png" alt="image-20220414104033047"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141040377.png" alt="image-20220414104058264"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141041228.png" alt="image-20220414104150103"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141041908.png" alt="image-20220414104155784"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141042711.png" alt="image-20220414104226585"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141043181.png" alt="image-20220414104325057"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141044808.png" alt="image-20220414104402691"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141044626.png" alt="image-20220414104433509"></p><h1 id="8086-8088cpu两种工作模式"><a href="#8086-8088cpu两种工作模式" class="headerlink" title="8086/8088cpu两种工作模式"></a>8086/8088cpu两种工作模式</h1><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141056867.png" alt="image-20220414105623749"></p><h3 id="最小模式"><a href="#最小模式" class="headerlink" title="最小模式"></a>最小模式</h3><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141059320.png" alt="image-20220414105912195"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141104704.png" alt="image-20220414110407573"></p><h3 id="最大模式"><a href="#最大模式" class="headerlink" title="最大模式"></a>最大模式</h3><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141107805.png" alt="image-20220414110713689"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141108988.png" alt="image-20220414110819877"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141111472.png" alt="image-20220414111133358"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141112296.png" alt="image-20220414111228190"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141114117.png" alt="image-20220414111404004"></p><h3 id="例题-1"><a href="#例题-1" class="headerlink" title="例题"></a>例题</h3><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141114020.png" alt="image-20220414111427923"></p><h2 id="8086-8088cpu主要操作"><a href="#8086-8088cpu主要操作" class="headerlink" title="8086/8088cpu主要操作"></a>8086/8088cpu主要操作</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141216242.png" alt="image-20220414121600091"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141217727.png" alt="image-20220414121716608"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141218801.png" alt="image-20220414121856674"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141219595.png" alt="image-20220414121951481"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141220313.png" alt="image-20220414122013207"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141223081.png" alt="image-20220414122343964"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141224779.png" alt="image-20220414122439665"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141227714.png" alt="image-20220414122743592"></p><h3 id="例题-2"><a href="#例题-2" class="headerlink" title="例题"></a>例题</h3><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141228089.png" alt="image-20220414122827989"></p><h1 id="中断系统"><a href="#中断系统" class="headerlink" title="中断系统"></a>中断系统</h1><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141229151.png" alt="image-20220414122931042"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141231757.png" alt="image-20220414123157633"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141232343.png" alt="image-20220414123250238"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141234705.png" alt="image-20220414123432592"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141303305.png" alt="image-20220414130306198"></p><h3 id="中断类型"><a href="#中断类型" class="headerlink" title="中断类型"></a>中断类型</h3><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141303782.png" alt="image-20220414130336685"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141303961.png" alt="image-20220414130342872"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141304529.png" alt="image-20220414130436438"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141304508.png" alt="image-20220414130453409"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141305925.png" alt="image-20220414130502830"></p><p>例题</p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141305172.png" alt="image-20220414130541088"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141305595.png" alt="image-20220414130548501"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141306157.png" alt="image-20220414130613054"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141306950.png" alt="image-20220414130624858"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141306558.png" alt="image-20220414130630469"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204141306565.png" alt="image-20220414130638472"></p><h2 id=""><a href="#" class="headerlink" title=" "></a> </h2>]]></content>
    
    
    <summary type="html">为考试做的准备</summary>
    
    
    
    <category term="微机原理" scheme="http://example.com/categories/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86/"/>
    
    
    <category term="微机原理" scheme="http://example.com/tags/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>微型计算机基础</title>
    <link href="http://example.com/2022/04/13/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86/%E5%BE%AE%E5%9E%8B%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    <id>http://example.com/2022/04/13/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86/%E5%BE%AE%E5%9E%8B%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/</id>
    <published>2022-04-13T05:31:20.000Z</published>
    <updated>2023-03-30T02:32:37.452Z</updated>
    
    <content type="html"><![CDATA[<h1 id="微型计算机基础"><a href="#微型计算机基础" class="headerlink" title="微型计算机基础"></a>微型计算机基础</h1><h2 id="考点"><a href="#考点" class="headerlink" title="考点"></a>考点</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121418832.png" alt="image-20220412141843677"></p><h2 id="四个小节"><a href="#四个小节" class="headerlink" title="四个小节"></a>四个小节</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121419755.png" alt="image-20220412141907634"></p><h2 id="微型计算机概述"><a href="#微型计算机概述" class="headerlink" title="微型计算机概述"></a>微型计算机概述</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121420683.png" alt="image-20220412142052545"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121422012.png" alt="image-20220412142252870"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121424262.png" alt="image-20220412142401145"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121425211.png" alt="image-20220412142519078"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121427149.png" alt="image-20220412142729012"></p><h2 id="微型计算机的组成"><a href="#微型计算机的组成" class="headerlink" title="微型计算机的组成"></a>微型计算机的组成</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121430147.png" alt="image-20220412143031982"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121435624.png" alt="image-20220412143546450"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121440858.png" alt="image-20220412144011686"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121440197.png" alt="image-20220412144052068"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121441719.png" alt="image-20220412144134583"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121442896.png" alt="image-20220412144223777"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121504606.png" alt="image-20220412150407454"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121504912.png" alt="image-20220412150426785"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121505424.png" alt="image-20220412150524299"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121505730.png" alt="image-20220412150549597"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121506631.png" alt="image-20220412150620506"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121508304.png" alt="image-20220412150811142"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121508840.png" alt="image-20220412150826725"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121509895.png" alt="image-20220412150940758"></p><h2 id="计算机中数据的表示"><a href="#计算机中数据的表示" class="headerlink" title="计算机中数据的表示"></a>计算机中数据的表示</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121514623.png" alt="image-20220412151403474"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121514639.png" alt="image-20220412151419508"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204131240112.png" alt="image-20220413124007915"></p><h3 id="数制的转换"><a href="#数制的转换" class="headerlink" title="数制的转换"></a>数制的转换</h3><p>以10—&gt;2为例</p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204131244257.png" alt="image-20220413124446080"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204131245149.png" alt="image-20220413124507028"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204131245516.png" alt="image-20220413124537396"></p><p>转为10进制</p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204131250685.png" alt="image-20220413125033509"></p><p>2—&gt;8&amp;8—2</p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204131252482.png" alt="image-20220413125249338"></p><p>同理</p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204131254230.png" alt="image-20220413125434099"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204131256979.png" alt="image-20220413125620843"></p><p>例题<img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204131257314.png" alt="image-20220413125705189"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204131257940.png" alt="image-20220413125730825"></p><h3 id="机器数的表示"><a href="#机器数的表示" class="headerlink" title="机器数的表示"></a>机器数的表示</h3><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204131259475.png" alt="image-20220413125907345"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204131302703.png" alt="image-20220413130224534"></p><p>真值：只要带+/-号的就是真值，不分进制。</p><p>​    <img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204131303711.png" alt="image-20220413130353585"></p><p>1.原码</p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204131306673.png" alt="image-20220413130617522"></p><p>2.反码</p><ul><li>正数的原码、反码、补码是相同的。</li><li>负数的不同，规则：符号位不变，其它位取反。</li></ul><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204131309386.png" alt="image-20220413130917232"></p><p>3.补码</p><ul><li>书写特点：字母开头的数一般在开头加一个0（在程序中经常出现）。</li></ul><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204131311496.png" alt="image-20220413131149342"></p><p>4.移码（了解）</p><ul><li>主要用于浮点数的运算。</li></ul><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204131313668.png" alt="image-20220413131309548"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204131315478.png" alt="image-20220413131538356"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204131316414.png" alt="image-20220413131606286"></p><p>例题</p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204131315274.png" alt="image-20220413131555157"></p><ul><li>在小数中：小数点的左侧的一位是符号位。</li><li>整数中是最高位。</li></ul><h3 id="运算（几个公式）"><a href="#运算（几个公式）" class="headerlink" title="运算（几个公式）"></a>运算（几个公式）</h3><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204131319340.png" alt="image-20220413131957191"></p><p>运算结果溢出的判定</p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204131322513.png" alt="image-20220413132253371"></p><h3 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h3><p>ASCII</p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204131324979.png" alt="image-20220413132407847"></p><p>BCD</p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204131325855.png" alt="image-20220413132550710"></p><p>例题</p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204131326935.png" alt="image-20220413132602824"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204131326035.png" alt="image-20220413132613924"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204131326567.png" alt="image-20220413132621454"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204131326466.png" alt="image-20220413132637354"></p><h2 id="微型计算机的工作过程"><a href="#微型计算机的工作过程" class="headerlink" title="微型计算机的工作过程"></a>微型计算机的工作过程</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204131327291.png" alt="image-20220413132743168"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204131328089.png" alt="image-20220413132808984"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204131328411.png" alt="image-20220413132825296"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204131328562.png" alt="image-20220413132835436"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204131328814.png" alt="image-20220413132842688"></p><h3 id="三态门电路"><a href="#三态门电路" class="headerlink" title="三态门电路"></a>三态门电路</h3><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204131329068.png" alt="image-20220413132934949"></p><h3 id="译码器"><a href="#译码器" class="headerlink" title="译码器"></a>译码器</h3><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204131330519.png" alt="image-20220413133027397"></p><ul><li>包括：2：4译码器&amp;3：8译码器。</li></ul><h3 id="工作过程"><a href="#工作过程" class="headerlink" title="工作过程"></a>工作过程</h3><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204131331640.png" alt="image-20220413133146523"></p><h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204131332908.png" alt="image-20220413133208766"></p>]]></content>
    
    
    <summary type="html">为考试做的准备</summary>
    
    
    
    <category term="微机原理" scheme="http://example.com/categories/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86/"/>
    
    
    <category term="微机原理" scheme="http://example.com/tags/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>微机原理概论4</title>
    <link href="http://example.com/2022/04/13/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86%E6%A6%82%E8%AE%BA4/"/>
    <id>http://example.com/2022/04/13/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86%E6%A6%82%E8%AE%BA4/</id>
    <published>2022-04-13T05:30:20.000Z</published>
    <updated>2023-03-30T02:32:37.452Z</updated>
    
    <content type="html"><![CDATA[<h1 id="汇编程序设计（39分）"><a href="#汇编程序设计（39分）" class="headerlink" title="汇编程序设计（39分）"></a>汇编程序设计（39分）</h1><h2 id="考点"><a href="#考点" class="headerlink" title="考点"></a>考点</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121358448.png" alt="image-20220412135800294"></p><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121359922.png" alt="image-20220412135924761"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121401750.png" alt="image-20220412140122600"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121402332.png" alt="image-20220412140210181"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121403530.png" alt="image-20220412140307386"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121404093.png" alt="image-20220412140455867"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121405641.png" alt="image-20220412140538446"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121406872.png" alt="image-20220412140600645"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121407155.png" alt="image-20220412140704901"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121408439.png" alt="image-20220412140823268"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121409796.png" alt="image-20220412140941634"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121410479.png" alt="image-20220412141019191"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121411138.png" alt="image-20220412141115975"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121411186.png" alt="image-20220412141143042"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121411071.png" alt="image-20220412141150925"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121412596.png" alt="image-20220412141235348"></p><ul><li>第八个 SF=0.</li></ul><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121414437.png" alt="image-20220412141405304"></p><p><img src="https://halisi7-1310601873.cos.ap-beijing.myqcloud.com/202204121414113.png" alt="image-20220412141418961"></p>]]></content>
    
    
    <summary type="html">为考试做的准备</summary>
    
    
    
    <category term="微机原理" scheme="http://example.com/categories/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86/"/>
    
    
    <category term="微机原理" scheme="http://example.com/tags/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Java-JUC并发编程</title>
    <link href="http://example.com/2022/04/10/java/java-JUC%E5%B9%B6%E5%8F%91/"/>
    <id>http://example.com/2022/04/10/java/java-JUC%E5%B9%B6%E5%8F%91/</id>
    <published>2022-04-10T05:30:02.000Z</published>
    <updated>2022-12-03T03:24:22.815Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JUC并发编程"><a href="#JUC并发编程" class="headerlink" title="JUC并发编程"></a>JUC并发编程</h1><p>笔记地址</p><p>链接：<a href="https://pan.baidu.com/s/1kZP28Wld9Cnd1GsyyA28yg">百度网盘</a><br>提取码：hls7</p>]]></content>
    
    
    <summary type="html">Java-JUC并发编程</summary>
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
  </entry>
  
</feed>
